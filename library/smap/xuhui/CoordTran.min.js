/*!
 * Name: CoordTran v1.0.0 (2021.05.01-2021.06.11) 
 * Description: Coordinate Transformation
 * LICENSE : Apache-2.0 
 *(c) https://github.com/thiswildidea (by YangYiwen QQMail:314984468@qq.com)
 */
! function (t, r) {
     "object" == typeof exports && "undefined" != typeof module ? module.exports = r() : "function" == typeof define && define.amd ? define(r) : (t = "undefined" != typeof globalThis ? globalThis : t || self).CoordTran = r()
}(this, (function () {
     "use strict";
     var t = function () {},
          r = function () {},
          n = function () {};

     function e() {
          return (e = Object.assign || function (t) {
               for (var r = 1; r < arguments.length; r++) {
                    var n = arguments[r];
                    for (var e in n) Object.prototype.hasOwnProperty.call(n, e) && (t[e] = n[e])
               }
               return t
          }).apply(this, arguments)
     }
     var i = {
          epsilon: 1e-12,
          matrix: "Matrix",
          number: "number",
          precision: 64,
          predictable: !1,
          randomSeed: null
     };

     function o(t) {
          return "number" == typeof t
     }

     function a(t) {
          return t && !0 === t.constructor.prototype.isBigNumber || !1
     }

     function u(t) {
          return t && "object" == typeof t && !0 === Object.getPrototypeOf(t).isComplex || !1
     }

     function s(t) {
          return t && "object" == typeof t && !0 === Object.getPrototypeOf(t).isFraction || !1
     }

     function c(t) {
          return t && !0 === t.constructor.prototype.isUnit || !1
     }

     function f(t) {
          return "string" == typeof t
     }
     var l = Array.isArray;

     function h(t) {
          return t && !0 === t.constructor.prototype.isMatrix || !1
     }

     function d(t) {
          return Array.isArray(t) || h(t)
     }

     function p(t) {
          return t && t.isDenseMatrix && !0 === t.constructor.prototype.isMatrix || !1
     }

     function m(t) {
          return t && t.isSparseMatrix && !0 === t.constructor.prototype.isMatrix || !1
     }

     function w(t) {
          return t && !0 === t.constructor.prototype.isRange || !1
     }

     function v(t) {
          return t && !0 === t.constructor.prototype.isIndex || !1
     }

     function g(t) {
          return "boolean" == typeof t
     }

     function y(t) {
          return t && !0 === t.constructor.prototype.isResultSet || !1
     }

     function b(t) {
          return t && !0 === t.constructor.prototype.isHelp || !1
     }

     function x(t) {
          return "function" == typeof t
     }

     function N(t) {
          return t instanceof Date
     }

     function z(t) {
          return t instanceof RegExp
     }

     function _(t) {
          return !(!t || "object" != typeof t || t.constructor !== Object || u(t) || s(t))
     }

     function k(t) {
          return null === t
     }

     function M(t) {
          return void 0 === t
     }

     function Z(t) {
          return t && !0 === t.isAccessorNode && !0 === t.constructor.prototype.isNode || !1
     }

     function W(t) {
          return t && !0 === t.isArrayNode && !0 === t.constructor.prototype.isNode || !1
     }

     function E(t) {
          return t && !0 === t.isAssignmentNode && !0 === t.constructor.prototype.isNode || !1
     }

     function F(t) {
          return t && !0 === t.isBlockNode && !0 === t.constructor.prototype.isNode || !1
     }

     function Y(t) {
          return t && !0 === t.isConditionalNode && !0 === t.constructor.prototype.isNode || !1
     }

     function G(t) {
          return t && !0 === t.isConstantNode && !0 === t.constructor.prototype.isNode || !1
     }

     function J(t) {
          return t && !0 === t.isFunctionAssignmentNode && !0 === t.constructor.prototype.isNode || !1
     }

     function A(t) {
          return t && !0 === t.isFunctionNode && !0 === t.constructor.prototype.isNode || !1
     }

     function S(t) {
          return t && !0 === t.isIndexNode && !0 === t.constructor.prototype.isNode || !1
     }

     function O(t) {
          return t && !0 === t.isNode && !0 === t.constructor.prototype.isNode || !1
     }

     function C(t) {
          return t && !0 === t.isObjectNode && !0 === t.constructor.prototype.isNode || !1
     }

     function X(t) {
          return t && !0 === t.isOperatorNode && !0 === t.constructor.prototype.isNode || !1
     }

     function I(t) {
          return t && !0 === t.isParenthesisNode && !0 === t.constructor.prototype.isNode || !1
     }

     function B(t) {
          return t && !0 === t.isRangeNode && !0 === t.constructor.prototype.isNode || !1
     }

     function T(t) {
          return t && !0 === t.isSymbolNode && !0 === t.constructor.prototype.isNode || !1
     }

     function j(t) {
          return t && !0 === t.constructor.prototype.isChain || !1
     }

     function D(t) {
          var r = typeof t;
          return "object" === r ? null === t ? "null" : Array.isArray(t) ? "Array" : t instanceof Date ? "Date" : t instanceof RegExp ? "RegExp" : a(t) ? "BigNumber" : u(t) ? "Complex" : s(t) ? "Fraction" : h(t) ? "Matrix" : c(t) ? "Unit" : v(t) ? "Index" : w(t) ? "Range" : y(t) ? "ResultSet" : O(t) ? t.type : j(t) ? "Chain" : b(t) ? "Help" : "Object" : "function" === r ? "Function" : r
     }

     function P(t) {
          var r = typeof t;
          if ("number" === r || "string" === r || "boolean" === r || null == t) return t;
          if ("function" == typeof t.clone) return t.clone();
          if (Array.isArray(t)) return t.map((function (t) {
               return P(t)
          }));
          if (t instanceof Date) return new Date(t.valueOf());
          if (a(t)) return t;
          if (t instanceof RegExp) throw new TypeError("Cannot clone " + t);
          return function (t, r) {
               var n = {};
               for (var e in t) R(t, e) && (n[e] = r(t[e]));
               return n
          }(t, P)
     }

     function q(t, r) {
          var n, e, i;
          if (Array.isArray(t)) {
               if (!Array.isArray(r)) return !1;
               if (t.length !== r.length) return !1;
               for (e = 0, i = t.length; e < i; e++)
                    if (!q(t[e], r[e])) return !1;
               return !0
          }
          if ("function" == typeof t) return t === r;
          if (t instanceof Object) {
               if (Array.isArray(r) || !(r instanceof Object)) return !1;
               for (n in t)
                    if (!(n in r) || !q(t[n], r[n])) return !1;
               for (n in r)
                    if (!(n in t) || !q(t[n], r[n])) return !1;
               return !0
          }
          return t === r
     }

     function R(t, r) {
          return t && Object.hasOwnProperty.call(t, r)
     }
     var U = function (t) {
          if (t) throw new Error("The global config is readonly. \nPlease create a mathjs instance if you want to change the default configuration. \nExample:\n\n  import { create, all } from 'mathjs';\n  const mathjs = create(all);\n  mathjs.config({ number: 'BigNumber' });\n");
          return Object.freeze(i)
     };
     e(U, i, {
          MATRIX_OPTIONS: ["Matrix", "Array"],
          NUMBER_OPTIONS: ["number", "BigNumber", "Fraction"]
     });
     "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self && self;

     function L(t) {
          return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
     }
     var H = {
          exports: {}
     };
     ! function (t, r) {
          t.exports = function () {
               function t() {
                    return !0
               }

               function r() {
                    return !1
               }

               function n() {}

               function e() {
                    var i = [{
                              name: "number",
                              test: function (t) {
                                   return "number" == typeof t
                              }
                         }, {
                              name: "string",
                              test: function (t) {
                                   return "string" == typeof t
                              }
                         }, {
                              name: "boolean",
                              test: function (t) {
                                   return "boolean" == typeof t
                              }
                         }, {
                              name: "Function",
                              test: function (t) {
                                   return "function" == typeof t
                              }
                         }, {
                              name: "Array",
                              test: Array.isArray
                         }, {
                              name: "Date",
                              test: function (t) {
                                   return t instanceof Date
                              }
                         }, {
                              name: "RegExp",
                              test: function (t) {
                                   return t instanceof RegExp
                              }
                         }, {
                              name: "Object",
                              test: function (t) {
                                   return "object" == typeof t && null !== t && t.constructor === Object
                              }
                         }, {
                              name: "null",
                              test: function (t) {
                                   return null === t
                              }
                         }, {
                              name: "undefined",
                              test: function (t) {
                                   return void 0 === t
                              }
                         }],
                         o = {
                              name: "any",
                              test: t
                         },
                         a = [],
                         u = [],
                         s = {
                              types: i,
                              conversions: u,
                              ignore: a
                         };

                    function c(t) {
                         var r = L(s.types, (function (r) {
                              return r.name === t
                         }));
                         if (r) return r;
                         if ("any" === t) return o;
                         var n = L(s.types, (function (r) {
                              return r.name.toLowerCase() === t.toLowerCase()
                         }));
                         throw new TypeError('Unknown type "' + t + '"' + (n ? '. Did you mean "' + n.name + '"?' : ""))
                    }

                    function f(t) {
                         return t === o ? 999 : s.types.indexOf(t)
                    }

                    function l(t) {
                         var r = L(s.types, (function (r) {
                              return r.test(t)
                         }));
                         if (r) return r.name;
                         throw new TypeError("Value has unknown type. Value: " + t)
                    }

                    function h(t, r) {
                         if (!t.signatures) throw new TypeError("Function is no typed-function");
                         var n;
                         if ("string" == typeof r) {
                              n = r.split(",");
                              for (var e = 0; e < n.length; e++) n[e] = n[e].trim()
                         } else {
                              if (!Array.isArray(r)) throw new TypeError("String array or a comma separated string expected");
                              n = r
                         }
                         var i = n.join(","),
                              o = t.signatures[i];
                         if (o) return o;
                         throw new TypeError("Signature not found (signature: " + (t.name || "unnamed") + "(" + n.join(", ") + "))")
                    }

                    function d(t, r) {
                         var n = l(t);
                         if (r === n) return t;
                         for (var e = 0; e < s.conversions.length; e++) {
                              var i = s.conversions[e];
                              if (i.from === n && i.to === r) return i.convert(t)
                         }
                         throw new Error("Cannot convert from " + n + " to " + r)
                    }

                    function p(t) {
                         return t.map((function (t) {
                              var r = t.types.map(z);
                              return (t.restParam ? "..." : "") + r.join("|")
                         })).join(",")
                    }

                    function m(t, r) {
                         var n = 0 === t.indexOf("..."),
                              e = (n ? t.length > 3 ? t.slice(3) : "any" : t).split("|").map(I).filter(B).filter(X),
                              i = Y(r, e),
                              o = e.map((function (t) {
                                   var r = c(t);
                                   return {
                                        name: t,
                                        typeIndex: f(r),
                                        test: r.test,
                                        conversion: null,
                                        conversionIndex: -1
                                   }
                              })),
                              a = i.map((function (t) {
                                   var n = c(t.from);
                                   return {
                                        name: t.from,
                                        typeIndex: f(n),
                                        test: n.test,
                                        conversion: t,
                                        conversionIndex: r.indexOf(t)
                                   }
                              }));
                         return {
                              types: o.concat(a),
                              restParam: n
                         }
                    }

                    function w(t, r, n) {
                         var e = [];
                         return "" !== t.trim() && (e = t.split(",").map(I).map((function (t, r, e) {
                              var i = m(t, n);
                              if (i.restParam && r !== e.length - 1) throw new SyntaxError('Unexpected rest parameter "' + t + '": only allowed for the last parameter');
                              return i
                         }))), e.some(j) ? null : {
                              params: e,
                              fn: r
                         }
                    }

                    function v(t) {
                         var r = P(t);
                         return !!r && r.restParam
                    }

                    function g(t) {
                         return t.types.some((function (t) {
                              return null != t.conversion
                         }))
                    }

                    function y(r) {
                         if (r && 0 !== r.types.length) {
                              if (1 === r.types.length) return c(r.types[0].name).test;
                              if (2 === r.types.length) {
                                   var n = c(r.types[0].name).test,
                                        e = c(r.types[1].name).test;
                                   return function (t) {
                                        return n(t) || e(t)
                                   }
                              }
                              var i = r.types.map((function (t) {
                                   return c(t.name).test
                              }));
                              return function (t) {
                                   for (var r = 0; r < i.length; r++)
                                        if (i[r](t)) return !0;
                                   return !1
                              }
                         }
                         return t
                    }

                    function b(t) {
                         var r, n, e;
                         if (v(t)) {
                              var i = (r = D(t).map(y)).length,
                                   o = y(P(t)),
                                   a = function (t) {
                                        for (var r = i; r < t.length; r++)
                                             if (!o(t[r])) return !1;
                                        return !0
                                   };
                              return function (t) {
                                   for (var n = 0; n < r.length; n++)
                                        if (!r[n](t[n])) return !1;
                                   return a(t) && t.length >= i + 1
                              }
                         }
                         return 0 === t.length ? function (t) {
                              return 0 === t.length
                         } : 1 === t.length ? (n = y(t[0]), function (t) {
                              return n(t[0]) && 1 === t.length
                         }) : 2 === t.length ? (n = y(t[0]), e = y(t[1]), function (t) {
                              return n(t[0]) && e(t[1]) && 2 === t.length
                         }) : (r = t.map(y), function (t) {
                              for (var n = 0; n < r.length; n++)
                                   if (!r[n](t[n])) return !1;
                              return t.length === r.length
                         })
                    }

                    function x(t, r) {
                         return r < t.params.length ? t.params[r] : v(t.params) ? P(t.params) : null
                    }

                    function N(t, r, n) {
                         var e = x(t, r);
                         return (e ? n ? e.types.filter(_) : e.types : []).map(z)
                    }

                    function z(t) {
                         return t.name
                    }

                    function _(t) {
                         return null === t.conversion || void 0 === t.conversion
                    }

                    function k(t, r) {
                         var n = H(V(t, (function (t) {
                              return N(t, r, !1)
                         })));
                         return -1 !== n.indexOf("any") ? ["any"] : n
                    }

                    function M(t, r, n) {
                         var e, i, o, a = t || "unnamed",
                              u = n;
                         for (o = 0; o < r.length; o++) {
                              var s = u.filter((function (t) {
                                   var n = y(x(t, o));
                                   return (o < t.params.length || v(t.params)) && n(r[o])
                              }));
                              if (0 === s.length) {
                                   if ((i = k(u, o)).length > 0) {
                                        var c = l(r[o]);
                                        return (e = new TypeError("Unexpected type of argument in function " + a + " (expected: " + i.join(" or ") + ", actual: " + c + ", index: " + o + ")")).data = {
                                             category: "wrongType",
                                             fn: a,
                                             index: o,
                                             actual: c,
                                             expected: i
                                        }, e
                                   }
                              } else u = s
                         }
                         var f = u.map((function (t) {
                              return v(t.params) ? 1 / 0 : t.params.length
                         }));
                         if (r.length < Math.min.apply(null, f)) return i = k(u, o), (e = new TypeError("Too few arguments in function " + a + " (expected: " + i.join(" or ") + ", index: " + r.length + ")")).data = {
                              category: "tooFewArgs",
                              fn: a,
                              index: r.length,
                              expected: i
                         }, e;
                         var h = Math.max.apply(null, f);
                         return r.length > h ? ((e = new TypeError("Too many arguments in function " + a + " (expected: " + h + ", actual: " + r.length + ")")).data = {
                              category: "tooManyArgs",
                              fn: a,
                              index: r.length,
                              expectedLength: h
                         }, e) : ((e = new TypeError('Arguments of type "' + r.join(", ") + '" do not match any of the defined signatures of function ' + a + ".")).data = {
                              category: "mismatch",
                              actual: r.map(l)
                         }, e)
                    }

                    function Z(t) {
                         for (var r = 999, n = 0; n < t.types.length; n++) _(t.types[n]) && (r = Math.min(r, t.types[n].typeIndex));
                         return r
                    }

                    function W(t) {
                         for (var r = 999, n = 0; n < t.types.length; n++) _(t.types[n]) || (r = Math.min(r, t.types[n].conversionIndex));
                         return r
                    }

                    function E(t, r) {
                         var n;
                         return 0 != (n = t.restParam - r.restParam) || 0 != (n = g(t) - g(r)) || 0 != (n = Z(t) - Z(r)) ? n : W(t) - W(r)
                    }

                    function F(t, r) {
                         var n, e, i = Math.min(t.params.length, r.params.length);
                         if (0 != (e = t.params.some(g) - r.params.some(g))) return e;
                         for (n = 0; n < i; n++)
                              if (0 != (e = g(t.params[n]) - g(r.params[n]))) return e;
                         for (n = 0; n < i; n++)
                              if (0 !== (e = E(t.params[n], r.params[n]))) return e;
                         return t.params.length - r.params.length
                    }

                    function Y(t, r) {
                         var n = {};
                         return t.forEach((function (t) {
                              -1 !== r.indexOf(t.from) || -1 === r.indexOf(t.to) || n[t.from] || (n[t.from] = t)
                         })), Object.keys(n).map((function (t) {
                              return n[t]
                         }))
                    }

                    function G(t, r) {
                         var n = r;
                         if (t.some(g)) {
                              var e = v(t),
                                   i = t.map(J);
                              n = function () {
                                   for (var t = [], n = e ? arguments.length - 1 : arguments.length, o = 0; o < n; o++) t[o] = i[o](arguments[o]);
                                   return e && (t[n] = arguments[n].map(i[n])), r.apply(this, t)
                              }
                         }
                         var o = n;
                         if (v(t)) {
                              var a = t.length - 1;
                              o = function () {
                                   return n.apply(this, q(arguments, 0, a).concat([q(arguments, a)]))
                              }
                         }
                         return o
                    }

                    function J(t) {
                         var r, n, e, i, o = [],
                              a = [];
                         switch (t.types.forEach((function (t) {
                              t.conversion && (o.push(c(t.conversion.from).test), a.push(t.conversion.convert))
                         })), a.length) {
                              case 0:
                                   return function (t) {
                                        return t
                                   };
                              case 1:
                                   return r = o[0], e = a[0],
                                        function (t) {
                                             return r(t) ? e(t) : t
                                        };
                              case 2:
                                   return r = o[0], n = o[1], e = a[0], i = a[1],
                                        function (t) {
                                             return r(t) ? e(t) : n(t) ? i(t) : t
                                        };
                              default:
                                   return function (t) {
                                        for (var r = 0; r < a.length; r++)
                                             if (o[r](t)) return a[r](t);
                                        return t
                                   }
                         }
                    }

                    function A(t) {
                         var r = {};
                         return t.forEach((function (t) {
                              t.params.some(g) || S(t.params, !0).forEach((function (n) {
                                   r[p(n)] = t.fn
                              }))
                         })), r
                    }

                    function S(t, r) {
                         function n(t, e, i) {
                              if (e < t.length) {
                                   var o, a = t[e],
                                        u = r ? a.types.filter(_) : a.types;
                                   if (a.restParam) {
                                        var s = u.filter(_);
                                        o = s.length < u.length ? [s, u] : [u]
                                   } else o = u.map((function (t) {
                                        return [t]
                                   }));
                                   return V(o, (function (r) {
                                        return n(t, e + 1, i.concat([r]))
                                   }))
                              }
                              return [i.map((function (r, n) {
                                   return {
                                        types: r,
                                        restParam: n === t.length - 1 && v(t)
                                   }
                              }))]
                         }
                         return n(t, 0, [])
                    }

                    function O(t, r) {
                         for (var n = Math.max(t.params.length, r.params.length), e = 0; e < n; e++)
                              if (!U(N(t, e, !0), N(r, e, !0))) return !1;
                         var i = t.params.length,
                              o = r.params.length,
                              a = v(t.params),
                              u = v(r.params);
                         return a ? u ? i === o : o >= i : u ? i >= o : i === o
                    }

                    function C(t, e) {
                         if (0 === Object.keys(e).length) throw new SyntaxError("No signatures provided");
                         var i = [];
                         Object.keys(e).map((function (t) {
                              return w(t, e[t], s.conversions)
                         })).filter(T).forEach((function (t) {
                              var r = L(i, (function (r) {
                                   return O(r, t)
                              }));
                              if (r) throw new TypeError('Conflicting signatures "' + p(r.params) + '" and "' + p(t.params) + '".');
                              i.push(t)
                         }));
                         var o = V(i, (function (t) {
                              return (t ? S(t.params, !1) : []).map((function (r) {
                                   return {
                                        params: r,
                                        fn: t.fn
                                   }
                              }))
                         })).filter(T);
                         o.sort(F);
                         var a = o[0] && o[0].params.length <= 2 && !v(o[0].params),
                              u = o[1] && o[1].params.length <= 2 && !v(o[1].params),
                              c = o[2] && o[2].params.length <= 2 && !v(o[2].params),
                              f = o[3] && o[3].params.length <= 2 && !v(o[3].params),
                              l = o[4] && o[4].params.length <= 2 && !v(o[4].params),
                              h = o[5] && o[5].params.length <= 2 && !v(o[5].params),
                              d = a && u && c && f && l && h,
                              m = o.map((function (t) {
                                   return b(t.params)
                              })),
                              g = a ? y(o[0].params[0]) : r,
                              x = u ? y(o[1].params[0]) : r,
                              N = c ? y(o[2].params[0]) : r,
                              z = f ? y(o[3].params[0]) : r,
                              _ = l ? y(o[4].params[0]) : r,
                              k = h ? y(o[5].params[0]) : r,
                              Z = a ? y(o[0].params[1]) : r,
                              W = u ? y(o[1].params[1]) : r,
                              E = c ? y(o[2].params[1]) : r,
                              Y = f ? y(o[3].params[1]) : r,
                              J = l ? y(o[4].params[1]) : r,
                              C = h ? y(o[5].params[1]) : r,
                              X = o.map((function (t) {
                                   return G(t.params, t.fn)
                              })),
                              I = a ? X[0] : n,
                              B = u ? X[1] : n,
                              j = c ? X[2] : n,
                              D = f ? X[3] : n,
                              P = l ? X[4] : n,
                              q = h ? X[5] : n,
                              R = a ? o[0].params.length : -1,
                              U = u ? o[1].params.length : -1,
                              H = c ? o[2].params.length : -1,
                              $ = f ? o[3].params.length : -1,
                              K = l ? o[4].params.length : -1,
                              Q = h ? o[5].params.length : -1,
                              tt = d ? 6 : 0,
                              rt = o.length,
                              nt = function () {
                                   for (var r = tt; r < rt; r++)
                                        if (m[r](arguments)) return X[r].apply(this, arguments);
                                   throw M(t, arguments, o)
                              },
                              et = function t(r, n) {
                                   return arguments.length === R && g(r) && Z(n) ? I.apply(t, arguments) : arguments.length === U && x(r) && W(n) ? B.apply(t, arguments) : arguments.length === H && N(r) && E(n) ? j.apply(t, arguments) : arguments.length === $ && z(r) && Y(n) ? D.apply(t, arguments) : arguments.length === K && _(r) && J(n) ? P.apply(t, arguments) : arguments.length === Q && k(r) && C(n) ? q.apply(t, arguments) : nt.apply(t, arguments)
                              };
                         try {
                              Object.defineProperty(et, "name", {
                                   value: t
                              })
                         } catch (t) {}
                         return et.signatures = A(o), et
                    }

                    function X(t) {
                         return -1 === s.ignore.indexOf(t)
                    }

                    function I(t) {
                         return t.trim()
                    }

                    function B(t) {
                         return !!t
                    }

                    function T(t) {
                         return null !== t
                    }

                    function j(t) {
                         return 0 === t.types.length
                    }

                    function D(t) {
                         return t.slice(0, t.length - 1)
                    }

                    function P(t) {
                         return t[t.length - 1]
                    }

                    function q(t, r, n) {
                         return Array.prototype.slice.call(t, r, n)
                    }

                    function R(t, r) {
                         return -1 !== t.indexOf(r)
                    }

                    function U(t, r) {
                         for (var n = 0; n < t.length; n++)
                              if (R(r, t[n])) return !0;
                         return !1
                    }

                    function L(t, r) {
                         for (var n = 0; n < t.length; n++)
                              if (r(t[n])) return t[n]
                    }

                    function H(t) {
                         for (var r = {}, n = 0; n < t.length; n++) r[t[n]] = !0;
                         return Object.keys(r)
                    }

                    function V(t, r) {
                         return Array.prototype.concat.apply([], t.map(r))
                    }

                    function $(t) {
                         for (var r = "", n = 0; n < t.length; n++) {
                              var e = t[n];
                              if (("object" == typeof e.signatures || "string" == typeof e.signature) && "" !== e.name)
                                   if ("" === r) r = e.name;
                                   else if (r !== e.name) {
                                   var i = new Error("Function names do not match (expected: " + r + ", actual: " + e.name + ")");
                                   throw i.data = {
                                        actual: e.name,
                                        expected: r
                                   }, i
                              }
                         }
                         return r
                    }

                    function K(t) {
                         var r, n = {};

                         function e(t, e) {
                              if (n.hasOwnProperty(t) && e !== n[t]) throw (r = new Error('Signature "' + t + '" is defined twice')).data = {
                                   signature: t
                              }, r
                         }
                         for (var i = 0; i < t.length; i++) {
                              var o = t[i];
                              if ("object" == typeof o.signatures)
                                   for (var a in o.signatures) o.signatures.hasOwnProperty(a) && (e(a, o.signatures[a]), n[a] = o.signatures[a]);
                              else {
                                   if ("string" != typeof o.signature) throw (r = new TypeError("Function is no typed-function (index: " + i + ")")).data = {
                                        index: i
                                   }, r;
                                   e(o.signature, o), n[o.signature] = o
                              }
                         }
                         return n
                    }
                    return (s = C("typed", {
                         "string, Object": C,
                         Object: function (t) {
                              var r = [];
                              for (var n in t) t.hasOwnProperty(n) && r.push(t[n]);
                              return C($(r), t)
                         },
                         "...Function": function (t) {
                              return C($(t), K(t))
                         },
                         "string, ...Function": function (t, r) {
                              return C(t, K(r))
                         }
                    })).create = e, s.types = i, s.conversions = u, s.ignore = a, s.convert = d, s.find = h, s.addType = function (t, r) {
                         if (!t || "string" != typeof t.name || "function" != typeof t.test) throw new TypeError("Object with properties {name: string, test: function} expected");
                         if (!1 !== r)
                              for (var n = 0; n < s.types.length; n++)
                                   if ("Object" === s.types[n].name) return void s.types.splice(n, 0, t);
                         s.types.push(t)
                    }, s.addConversion = function (t) {
                         if (!t || "string" != typeof t.from || "string" != typeof t.to || "function" != typeof t.convert) throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");
                         s.conversions.push(t)
                    }, s
               }
               return e()
          }()
     }(H);
     var V = H.exports;

     function $(t) {
          return "boolean" == typeof t || !!isFinite(t) && t === Math.round(t)
     }

     function K(t, r, n) {
          var e = {
                    2: "0b",
                    8: "0o",
                    16: "0x"
               } [r],
               i = "";
          if (n) {
               if (n < 1) throw new Error("size must be in greater than 0");
               if (!$(n)) throw new Error("size must be an integer");
               if (t > 2 ** (n - 1) - 1 || t < -(2 ** (n - 1))) throw new Error("Value must be in range [-2^".concat(n - 1, ", 2^").concat(n - 1, "-1]"));
               if (!$(t)) throw new Error("Value must be an integer");
               t < 0 && (t += 2 ** n), i = "i".concat(n)
          }
          var o = "";
          return t < 0 && (t = -t, o = "-"), "".concat(o).concat(e).concat(t.toString(r)).concat(i)
     }

     function Q(t, r) {
          if ("function" == typeof r) return r(t);
          if (t === 1 / 0) return "Infinity";
          if (t === -1 / 0) return "-Infinity";
          if (isNaN(t)) return "NaN";
          var n, e, i = "auto";
          if (r && (r.notation && (i = r.notation), o(r) ? n = r : o(r.precision) && (n = r.precision), r.wordSize && "number" != typeof (e = r.wordSize))) throw new Error('Option "wordSize" must be a number');
          switch (i) {
               case "fixed":
                    return rt(t, n);
               case "exponential":
                    return nt(t, n);
               case "engineering":
                    return function (t, r) {
                         if (isNaN(t) || !isFinite(t)) return String(t);
                         var n = et(tt(t), r),
                              e = n.exponent,
                              i = n.coefficients,
                              a = e % 3 == 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3;
                         if (o(r))
                              for (; r > i.length || e - a + 1 > i.length;) i.push(0);
                         else
                              for (var u = Math.abs(e - a) - (i.length - 1), s = 0; s < u; s++) i.push(0);
                         var c = Math.abs(e - a),
                              f = 1;
                         for (; c > 0;) f++, c--;
                         var l = i.slice(f).join(""),
                              h = o(r) && l.length || l.match(/[1-9]/) ? "." + l : "",
                              d = i.slice(0, f).join("") + h + "e" + (e >= 0 ? "+" : "") + a.toString();
                         return n.sign + d
                    }(t, n);
               case "bin":
                    return K(t, 2, e);
               case "oct":
                    return K(t, 8, e);
               case "hex":
                    return K(t, 16, e);
               case "auto":
                    return function (t, r, n) {
                         if (isNaN(t) || !isFinite(t)) return String(t);
                         var e = n && void 0 !== n.lowerExp ? n.lowerExp : -3,
                              i = n && void 0 !== n.upperExp ? n.upperExp : 5,
                              o = tt(t),
                              a = r ? et(o, r) : o;
                         if (a.exponent < e || a.exponent >= i) return nt(t, r);
                         var u = a.coefficients,
                              s = a.exponent;
                         u.length < r && (u = u.concat(it(r - u.length))), u = u.concat(it(s - u.length + 1 + (u.length < r ? r - u.length : 0)));
                         var c = s > 0 ? s : 0;
                         return c < (u = it(-s).concat(u)).length - 1 && u.splice(c + 1, 0, "."), a.sign + u.join("")
                    }(t, n, r && r).replace(/((\.\d*?)(0+))($|e)/, (function () {
                         var t = arguments[2],
                              r = arguments[4];
                         return "." !== t ? t + r : r
                    }));
               default:
                    throw new Error('Unknown notation "' + i + '". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')
          }
     }

     function tt(t) {
          var r = String(t).toLowerCase().match(/^0*?(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);
          if (!r) throw new SyntaxError("Invalid number " + t);
          var n = r[1],
               e = r[2],
               i = parseFloat(r[4] || "0"),
               o = e.indexOf(".");
          i += -1 !== o ? o - 1 : e.length - 1;
          var a = e.replace(".", "").replace(/^0*/, (function (t) {
               return i -= t.length, ""
          })).replace(/0*$/, "").split("").map((function (t) {
               return parseInt(t)
          }));
          return 0 === a.length && (a.push(0), i++), {
               sign: n,
               coefficients: a,
               exponent: i
          }
     }

     function rt(t, r) {
          if (isNaN(t) || !isFinite(t)) return String(t);
          var n = tt(t),
               e = "number" == typeof r ? et(n, n.exponent + 1 + r) : n,
               i = e.coefficients,
               o = e.exponent + 1,
               a = o + (r || 0);
          return i.length < a && (i = i.concat(it(a - i.length))), o < 0 && (i = it(1 - o).concat(i), o = 1), o < i.length && i.splice(o, 0, 0 === o ? "0." : "."), e.sign + i.join("")
     }

     function nt(t, r) {
          if (isNaN(t) || !isFinite(t)) return String(t);
          var n = tt(t),
               e = r ? et(n, r) : n,
               i = e.coefficients,
               o = e.exponent;
          i.length < r && (i = i.concat(it(r - i.length)));
          var a = i.shift();
          return e.sign + a + (i.length > 0 ? "." + i.join("") : "") + "e" + (o >= 0 ? "+" : "") + o
     }

     function et(t, r) {
          for (var n = {
                    sign: t.sign,
                    coefficients: t.coefficients,
                    exponent: t.exponent
               }, e = n.coefficients; r <= 0;) e.unshift(0), n.exponent++, r++;
          if (e.length > r && e.splice(r, e.length - r)[0] >= 5) {
               var i = r - 1;
               for (e[i]++; 10 === e[i];) e.pop(), 0 === i && (e.unshift(0), n.exponent++, i++), e[--i]++
          }
          return n
     }

     function it(t) {
          for (var r = [], n = 0; n < t; n++) r.push(0);
          return r
     }
     var ot = Number.EPSILON || 2220446049250313e-31;

     function at(t, r, n) {
          if (null == n) return t === r;
          if (t === r) return !0;
          if (isNaN(t) || isNaN(r)) return !1;
          if (isFinite(t) && isFinite(r)) {
               var e = Math.abs(t - r);
               return e < ot || e <= Math.max(Math.abs(t), Math.abs(r)) * n
          }
          return !1
     }

     function ut(t, r, n) {
          var e = new(0, t.constructor)(2),
               i = "";
          if (n) {
               if (n < 1) throw new Error("size must be in greater than 0");
               if (!$(n)) throw new Error("size must be an integer");
               if (t.greaterThan(e.pow(n - 1).sub(1)) || t.lessThan(e.pow(n - 1).mul(-1))) throw new Error("Value must be in range [-2^".concat(n - 1, ", 2^").concat(n - 1, "-1]"));
               if (!t.isInteger()) throw new Error("Value must be an integer");
               t.lessThan(0) && (t = t.add(e.pow(n))), i = "i".concat(n)
          }
          switch (r) {
               case 2:
                    return "".concat(t.toBinary()).concat(i);
               case 8:
                    return "".concat(t.toOctal()).concat(i);
               case 16:
                    return "".concat(t.toHexadecimal()).concat(i);
               default:
                    throw new Error("Base ".concat(r, " not supported "))
          }
     }

     function st(t, r) {
          if ("function" == typeof r) return r(t);
          if (!t.isFinite()) return t.isNaN() ? "NaN" : t.gt(0) ? "Infinity" : "-Infinity";
          var n, e, i = "auto";
          if (void 0 !== r && (r.notation && (i = r.notation), "number" == typeof r ? n = r : r.precision && (n = r.precision), r.wordSize && "number" != typeof (e = r.wordSize))) throw new Error('Option "wordSize" must be a number');
          switch (i) {
               case "fixed":
                    return function (t, r) {
                         return t.toFixed(r)
                    }(t, n);
               case "exponential":
                    return ct(t, n);
               case "engineering":
                    return function (t, r) {
                         var n = t.e,
                              e = n % 3 == 0 ? n : n < 0 ? n - 3 - n % 3 : n - n % 3,
                              i = t.mul(Math.pow(10, -e)),
                              o = i.toPrecision(r); - 1 !== o.indexOf("e") && (o = i.toString());
                         return o + "e" + (n >= 0 ? "+" : "") + e.toString()
                    }(t, n);
               case "bin":
                    return ut(t, 2, e);
               case "oct":
                    return ut(t, 8, e);
               case "hex":
                    return ut(t, 16, e);
               case "auto":
                    var o = r && void 0 !== r.lowerExp ? r.lowerExp : -3,
                         a = r && void 0 !== r.upperExp ? r.upperExp : 5;
                    if (t.isZero()) return "0";
                    var u = t.toSignificantDigits(n),
                         s = u.e;
                    return (s >= o && s < a ? u.toFixed() : ct(t, n)).replace(/((\.\d*?)(0+))($|e)/, (function () {
                         var t = arguments[2],
                              r = arguments[4];
                         return "." !== t ? t + r : r
                    }));
               default:
                    throw new Error('Unknown notation "' + i + '". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')
          }
     }

     function ct(t, r) {
          return void 0 !== r ? t.toExponential(r - 1) : t.toExponential()
     }

     function ft(t, r) {
          return "number" == typeof t ? Q(t, r) : a(t) ? st(t, r) : function (t) {
               return t && "object" == typeof t && "number" == typeof t.s && "number" == typeof t.n && "number" == typeof t.d || !1
          }(t) ? r && "decimal" === r.fraction ? t.toString() : t.s * t.n + "/" + t.d : Array.isArray(t) ? lt(t, r) : f(t) ? '"' + t + '"' : "function" == typeof t ? t.syntax ? String(t.syntax) : "function" : t && "object" == typeof t ? "function" == typeof t.format ? t.format(r) : t && t.toString(r) !== {}.toString() ? t.toString(r) : "{" + Object.keys(t).map((n => '"' + n + '": ' + ft(t[n], r))).join(", ") + "}" : String(t)
     }

     function lt(t, r) {
          if (Array.isArray(t)) {
               for (var n = "[", e = t.length, i = 0; i < e; i++) 0 !== i && (n += ", "), n += lt(t[i], r);
               return n += "]"
          }
          return ft(t, r)
     }

     function ht(t, r, n) {
          if (!(this instanceof ht)) throw new SyntaxError("Constructor must be called with the new operator");
          this.actual = t, this.expected = r, this.relation = n, this.message = "Dimension mismatch (" + (Array.isArray(t) ? "[" + t.join(", ") + "]" : t) + " " + (this.relation || "!=") + " " + (Array.isArray(r) ? "[" + r.join(", ") + "]" : r) + ")", this.stack = (new Error).stack
     }

     function dt(t, r, n) {
          if (!(this instanceof dt)) throw new SyntaxError("Constructor must be called with the new operator");
          this.index = t, arguments.length < 3 ? (this.min = 0, this.max = r) : (this.min = r, this.max = n), void 0 !== this.min && this.index < this.min ? this.message = "Index out of range (" + this.index + " < " + this.min + ")" : void 0 !== this.max && this.index >= this.max ? this.message = "Index out of range (" + this.index + " > " + (this.max - 1) + ")" : this.message = "Index out of range (" + this.index + ")", this.stack = (new Error).stack
     }

     function pt(t) {
          for (var r = []; Array.isArray(t);) r.push(t.length), t = t[0];
          return r
     }

     function mt(t, r, n) {
          var e, i = t.length;
          if (i !== r[n]) throw new ht(i, r[n]);
          if (n < r.length - 1) {
               var o = n + 1;
               for (e = 0; e < i; e++) {
                    var a = t[e];
                    if (!Array.isArray(a)) throw new ht(r.length - 1, r.length, "<");
                    mt(t[e], r, o)
               }
          } else
               for (e = 0; e < i; e++)
                    if (Array.isArray(t[e])) throw new ht(r.length + 1, r.length, ">")
     }

     function wt(t, r) {
          if (0 === r.length) {
               if (Array.isArray(t)) throw new ht(t.length, 0)
          } else mt(t, r, 0)
     }

     function vt(t, r) {
          if (!o(t) || !$(t)) throw new TypeError("Index must be an integer (value: " + t + ")");
          if (t < 0 || "number" == typeof r && t >= r) throw new dt(t, r)
     }

     function gt(t, r, n) {
          if (!Array.isArray(t) || !Array.isArray(r)) throw new TypeError("Array expected");
          if (0 === r.length) throw new Error("Resizing to scalar is not supported");
          return r.forEach((function (t) {
               if (!o(t) || !$(t) || t < 0) throw new TypeError("Invalid size, must contain positive integers (size: " + ft(r) + ")")
          })), yt(t, r, 0, void 0 !== n ? n : 0), t
     }

     function yt(t, r, n, e) {
          var i, o, a = t.length,
               u = r[n],
               s = Math.min(a, u);
          if (t.length = u, n < r.length - 1) {
               var c = n + 1;
               for (i = 0; i < s; i++) o = t[i], Array.isArray(o) || (o = [o], t[i] = o), yt(o, r, c, e);
               for (i = s; i < u; i++) o = [], t[i] = o, yt(o, r, c, e)
          } else {
               for (i = 0; i < s; i++)
                    for (; Array.isArray(t[i]);) t[i] = t[i][0];
               for (i = s; i < u; i++) t[i] = e
          }
     }

     function bt(t, r) {
          var n = function (t) {
                    if (!Array.isArray(t)) return t;
                    var r = [];
                    return t.forEach((function t(n) {
                         Array.isArray(n) ? n.forEach(t) : r.push(n)
                    })), r
               }(t),
               e = n.length;
          if (!Array.isArray(t) || !Array.isArray(r)) throw new TypeError("Array expected");
          if (0 === r.length) throw new ht(0, e, "!=");
          var i = Nt(r = xt(r, e));
          if (e !== i) throw new ht(i, e, "!=");
          try {
               return function (t, r) {
                    for (var n, e = t, i = r.length - 1; i > 0; i--) {
                         var o = r[i];
                         n = [];
                         for (var a = e.length / o, u = 0; u < a; u++) n.push(e.slice(u * o, (u + 1) * o));
                         e = n
                    }
                    return e
               }(n, r)
          } catch (t) {
               if (t instanceof ht) throw new ht(i, e, "!=");
               throw t
          }
     }

     function xt(t, r) {
          var n = Nt(t),
               e = t.slice(),
               i = t.indexOf(-1);
          if (t.indexOf(-1, i + 1) >= 0) throw new Error("More than one wildcard in sizes");
          if (i >= 0) {
               if (!(r % n == 0)) throw new Error("Could not replace wildcard, since " + r + " is no multiple of " + -n);
               e[i] = -r / n
          }
          return e
     }

     function Nt(t) {
          return t.reduce(((t, r) => t * r), 1)
     }

     function zt(t, r, n, e) {
          var i = e || pt(t);
          if (n)
               for (var o = 0; o < n; o++) t = [t], i.unshift(1);
          for (t = _t(t, r, 0); i.length < r;) i.push(1);
          return t
     }

     function _t(t, r, n) {
          var e, i;
          if (Array.isArray(t)) {
               var o = n + 1;
               for (e = 0, i = t.length; e < i; e++) t[e] = _t(t[e], r, o)
          } else
               for (var a = n; a < r; a++) t = [t];
          return t
     }

     function kt(t, r) {
          for (var n, e = 0, i = 0; i < t.length; i++) {
               var o = t[i],
                    a = Array.isArray(o);
               if (0 === i && a && (e = o.length), a && o.length !== e) return;
               var u = a ? kt(o, r) : r(o);
               if (void 0 === n) n = u;
               else if (n !== u) return "mixed"
          }
          return n
     }

     function Mt(t, r, n, e) {
          function i(e) {
               var i = function (t, r) {
                    for (var n = {}, e = 0; e < r.length; e++) {
                         var i = r[e],
                              o = t[i];
                         void 0 !== o && (n[i] = o)
                    }
                    return n
               }(e, r.map(Zt));
               return function (t, r, n) {
                    if (!r.filter((t => ! function (t) {
                              return t && "?" === t[0]
                         }(t))).every((t => void 0 !== n[t]))) {
                         var e = r.filter((t => void 0 === n[t]));
                         throw new Error('Cannot create function "'.concat(t, '", ') + "some dependencies are missing: ".concat(e.map((t => '"'.concat(t, '"'))).join(", "), "."))
                    }
               }(t, r, e), n(i)
          }
          return i.isFactory = !0, i.fn = t, i.dependencies = r.slice().sort(), e && (i.meta = e), i
     }

     function Zt(t) {
          return t && "?" === t[0] ? t.slice(1) : t
     }

     function Wt(t, r) {
          if (Ft(t) && Et(t, r)) return t[r];
          if ("function" == typeof t[r] && function (t, r) {
                    if (null == t || "function" != typeof t[r]) return !1;
                    if (R(t, r) && Object.getPrototypeOf && r in Object.getPrototypeOf(t)) return !1;
                    if (R(Gt, r)) return !0;
                    if (r in Object.prototype) return !1;
                    if (r in Function.prototype) return !1;
                    return !0
               }(t, r)) throw new Error('Cannot access method "' + r + '" as a property');
          throw new Error('No access to property "' + r + '"')
     }

     function Et(t, r) {
          return !(!t || "object" != typeof t) && (!!R(Yt, r) || !(r in Object.prototype) && !(r in Function.prototype))
     }

     function Ft(t) {
          return "object" == typeof t && t && t.constructor === Object
     }
     ht.prototype = new RangeError, ht.prototype.constructor = RangeError, ht.prototype.name = "DimensionError", ht.prototype.isDimensionError = !0, dt.prototype = new RangeError, dt.prototype.constructor = RangeError, dt.prototype.name = "IndexError", dt.prototype.isIndexError = !0;
     var Yt = {
               length: !0,
               name: !0
          },
          Gt = {
               toString: !0,
               valueOf: !0,
               toLocaleString: !0
          };

     function Jt(t) {
          return !!t && (t instanceof Map || t instanceof class {
               constructor(t) {
                    this.wrappedObject = t
               }
               keys() {
                    return Object.keys(this.wrappedObject)
               }
               get(t) {
                    return Wt(this.wrappedObject, t)
               }
               set(t, r) {
                    return function (t, r, n) {
                         if (Ft(t) && Et(t, r)) return t[r] = n, n;
                         throw new Error('No access to property "' + r + '"')
                    }(this.wrappedObject, t, r), this
               }
               has(t) {
                    return t in this.wrappedObject
               }
          } || "function" == typeof t.set && "function" == typeof t.get && "function" == typeof t.keys && "function" == typeof t.has)
     }
     var At = function () {
               return At = V.create, V
          },
          St = Mt("typed", ["?BigNumber", "?Complex", "?DenseMatrix", "?Fraction"], (function (t) {
               var {
                    BigNumber: r,
                    Complex: n,
                    DenseMatrix: e,
                    Fraction: i
               } = t, d = At();
               return d.types = [{
                    name: "number",
                    test: o
               }, {
                    name: "Complex",
                    test: u
               }, {
                    name: "BigNumber",
                    test: a
               }, {
                    name: "Fraction",
                    test: s
               }, {
                    name: "Unit",
                    test: c
               }, {
                    name: "string",
                    test: f
               }, {
                    name: "Chain",
                    test: j
               }, {
                    name: "Array",
                    test: l
               }, {
                    name: "Matrix",
                    test: h
               }, {
                    name: "DenseMatrix",
                    test: p
               }, {
                    name: "SparseMatrix",
                    test: m
               }, {
                    name: "Range",
                    test: w
               }, {
                    name: "Index",
                    test: v
               }, {
                    name: "boolean",
                    test: g
               }, {
                    name: "ResultSet",
                    test: y
               }, {
                    name: "Help",
                    test: b
               }, {
                    name: "function",
                    test: x
               }, {
                    name: "Date",
                    test: N
               }, {
                    name: "RegExp",
                    test: z
               }, {
                    name: "null",
                    test: k
               }, {
                    name: "undefined",
                    test: M
               }, {
                    name: "AccessorNode",
                    test: Z
               }, {
                    name: "ArrayNode",
                    test: W
               }, {
                    name: "AssignmentNode",
                    test: E
               }, {
                    name: "BlockNode",
                    test: F
               }, {
                    name: "ConditionalNode",
                    test: Y
               }, {
                    name: "ConstantNode",
                    test: G
               }, {
                    name: "FunctionNode",
                    test: A
               }, {
                    name: "FunctionAssignmentNode",
                    test: J
               }, {
                    name: "IndexNode",
                    test: S
               }, {
                    name: "Node",
                    test: O
               }, {
                    name: "ObjectNode",
                    test: C
               }, {
                    name: "OperatorNode",
                    test: X
               }, {
                    name: "ParenthesisNode",
                    test: I
               }, {
                    name: "RangeNode",
                    test: B
               }, {
                    name: "SymbolNode",
                    test: T
               }, {
                    name: "Map",
                    test: Jt
               }, {
                    name: "Object",
                    test: _
               }], d.conversions = [{
                    from: "number",
                    to: "BigNumber",
                    convert: function (t) {
                         if (r || Ot(t), t.toExponential().replace(/e.*$/, "").replace(/^0\.?0*|\./, "").length > 15) throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: " + t + "). Use function bignumber(x) to convert to BigNumber.");
                         return new r(t)
                    }
               }, {
                    from: "number",
                    to: "Complex",
                    convert: function (t) {
                         return n || Ct(t), new n(t, 0)
                    }
               }, {
                    from: "number",
                    to: "string",
                    convert: function (t) {
                         return t + ""
                    }
               }, {
                    from: "BigNumber",
                    to: "Complex",
                    convert: function (t) {
                         return n || Ct(t), new n(t.toNumber(), 0)
                    }
               }, {
                    from: "Fraction",
                    to: "BigNumber",
                    convert: function (t) {
                         throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")
                    }
               }, {
                    from: "Fraction",
                    to: "Complex",
                    convert: function (t) {
                         return n || Ct(t), new n(t.valueOf(), 0)
                    }
               }, {
                    from: "number",
                    to: "Fraction",
                    convert: function (t) {
                         i || Xt(t);
                         var r = new i(t);
                         if (r.valueOf() !== t) throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: " + t + "). Use function fraction(x) to convert to Fraction.");
                         return r
                    }
               }, {
                    from: "string",
                    to: "number",
                    convert: function (t) {
                         var r = Number(t);
                         if (isNaN(r)) throw new Error('Cannot convert "' + t + '" to a number');
                         return r
                    }
               }, {
                    from: "string",
                    to: "BigNumber",
                    convert: function (t) {
                         r || Ot(t);
                         try {
                              return new r(t)
                         } catch (r) {
                              throw new Error('Cannot convert "' + t + '" to BigNumber')
                         }
                    }
               }, {
                    from: "string",
                    to: "Fraction",
                    convert: function (t) {
                         i || Xt(t);
                         try {
                              return new i(t)
                         } catch (r) {
                              throw new Error('Cannot convert "' + t + '" to Fraction')
                         }
                    }
               }, {
                    from: "string",
                    to: "Complex",
                    convert: function (t) {
                         n || Ct(t);
                         try {
                              return new n(t)
                         } catch (r) {
                              throw new Error('Cannot convert "' + t + '" to Complex')
                         }
                    }
               }, {
                    from: "boolean",
                    to: "number",
                    convert: function (t) {
                         return +t
                    }
               }, {
                    from: "boolean",
                    to: "BigNumber",
                    convert: function (t) {
                         return r || Ot(t), new r(+t)
                    }
               }, {
                    from: "boolean",
                    to: "Fraction",
                    convert: function (t) {
                         return i || Xt(t), new i(+t)
                    }
               }, {
                    from: "boolean",
                    to: "string",
                    convert: function (t) {
                         return String(t)
                    }
               }, {
                    from: "Array",
                    to: "Matrix",
                    convert: function (t) {
                         return e || function () {
                              throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")
                         }(), new e(t)
                    }
               }, {
                    from: "Matrix",
                    to: "Array",
                    convert: function (t) {
                         return t.valueOf()
                    }
               }], d
          }));

     function Ot(t) {
          throw new Error("Cannot convert value ".concat(t, " into a BigNumber: no class 'BigNumber' provided"))
     }

     function Ct(t) {
          throw new Error("Cannot convert value ".concat(t, " into a Complex number: no class 'Complex' provided"))
     }

     function Xt(t) {
          throw new Error("Cannot convert value ".concat(t, " into a Fraction, no class 'Fraction' provided."))
     }
     var It, Bt, Tt = 9e15,
          jt = 1e9,
          Dt = "0123456789abcdef",
          Pt = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",
          qt = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",
          Rt = {
               precision: 20,
               rounding: 4,
               modulo: 1,
               toExpNeg: -7,
               toExpPos: 21,
               minE: -Tt,
               maxE: Tt,
               crypto: !1
          },
          Ut = !0,
          Lt = "[DecimalError] ",
          Ht = Lt + "Invalid argument: ",
          Vt = Lt + "Precision limit exceeded",
          $t = Lt + "crypto unavailable",
          Kt = Math.floor,
          Qt = Math.pow,
          tr = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,
          rr = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,
          nr = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,
          er = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
          ir = 1e7,
          or = Pt.length - 1,
          ar = qt.length - 1,
          ur = {
               name: "[object Decimal]"
          };

     function sr(t) {
          var r, n, e, i = t.length - 1,
               o = "",
               a = t[0];
          if (i > 0) {
               for (o += a, r = 1; r < i; r++)(n = 7 - (e = t[r] + "").length) && (o += yr(n)), o += e;
               (n = 7 - (e = (a = t[r]) + "").length) && (o += yr(n))
          } else if (0 === a) return "0";
          for (; a % 10 == 0;) a /= 10;
          return o + a
     }

     function cr(t, r, n) {
          if (t !== ~~t || t < r || t > n) throw Error(Ht + t)
     }

     function fr(t, r, n, e) {
          var i, o, a, u;
          for (o = t[0]; o >= 10; o /= 10) --r;
          return --r < 0 ? (r += 7, i = 0) : (i = Math.ceil((r + 1) / 7), r %= 7), o = Qt(10, 7 - r), u = t[i] % o | 0, null == e ? r < 3 ? (0 == r ? u = u / 100 | 0 : 1 == r && (u = u / 10 | 0), a = n < 4 && 99999 == u || n > 3 && 49999 == u || 5e4 == u || 0 == u) : a = (n < 4 && u + 1 == o || n > 3 && u + 1 == o / 2) && (t[i + 1] / o / 100 | 0) == Qt(10, r - 2) - 1 || (u == o / 2 || 0 == u) && 0 == (t[i + 1] / o / 100 | 0) : r < 4 ? (0 == r ? u = u / 1e3 | 0 : 1 == r ? u = u / 100 | 0 : 2 == r && (u = u / 10 | 0), a = (e || n < 4) && 9999 == u || !e && n > 3 && 4999 == u) : a = ((e || n < 4) && u + 1 == o || !e && n > 3 && u + 1 == o / 2) && (t[i + 1] / o / 1e3 | 0) == Qt(10, r - 3) - 1, a
     }

     function lr(t, r, n) {
          for (var e, i, o = [0], a = 0, u = t.length; a < u;) {
               for (i = o.length; i--;) o[i] *= r;
               for (o[0] += Dt.indexOf(t.charAt(a++)), e = 0; e < o.length; e++) o[e] > n - 1 && (void 0 === o[e + 1] && (o[e + 1] = 0), o[e + 1] += o[e] / n | 0, o[e] %= n)
          }
          return o.reverse()
     }
     ur.absoluteValue = ur.abs = function () {
          var t = new this.constructor(this);
          return t.s < 0 && (t.s = 1), dr(t)
     }, ur.ceil = function () {
          return dr(new this.constructor(this), this.e + 1, 2)
     }, ur.comparedTo = ur.cmp = function (t) {
          var r, n, e, i, o = this,
               a = o.d,
               u = (t = new o.constructor(t)).d,
               s = o.s,
               c = t.s;
          if (!a || !u) return s && c ? s !== c ? s : a === u ? 0 : !a ^ s < 0 ? 1 : -1 : NaN;
          if (!a[0] || !u[0]) return a[0] ? s : u[0] ? -c : 0;
          if (s !== c) return s;
          if (o.e !== t.e) return o.e > t.e ^ s < 0 ? 1 : -1;
          for (r = 0, n = (e = a.length) < (i = u.length) ? e : i; r < n; ++r)
               if (a[r] !== u[r]) return a[r] > u[r] ^ s < 0 ? 1 : -1;
          return e === i ? 0 : e > i ^ s < 0 ? 1 : -1
     }, ur.cosine = ur.cos = function () {
          var t, r, n = this,
               e = n.constructor;
          return n.d ? n.d[0] ? (t = e.precision, r = e.rounding, e.precision = t + Math.max(n.e, n.sd()) + 7, e.rounding = 1, n = function (t, r) {
               var n, e, i = r.d.length;
               i < 32 ? e = (1 / Er(4, n = Math.ceil(i / 3))).toString() : (n = 16, e = "2.3283064365386962890625e-10");
               t.precision += n, r = Wr(t, 1, r.times(e), new t(1));
               for (var o = n; o--;) {
                    var a = r.times(r);
                    r = a.times(a).minus(a).times(8).plus(1)
               }
               return t.precision -= n, r
          }(e, Fr(e, n)), e.precision = t, e.rounding = r, dr(2 == Bt || 3 == Bt ? n.neg() : n, t, r, !0)) : new e(1) : new e(NaN)
     }, ur.cubeRoot = ur.cbrt = function () {
          var t, r, n, e, i, o, a, u, s, c, f = this,
               l = f.constructor;
          if (!f.isFinite() || f.isZero()) return new l(f);
          for (Ut = !1, (o = f.s * Qt(f.s * f, 1 / 3)) && Math.abs(o) != 1 / 0 ? e = new l(o.toString()) : (n = sr(f.d), (o = ((t = f.e) - n.length + 1) % 3) && (n += 1 == o || -2 == o ? "0" : "00"), o = Qt(n, 1 / 3), t = Kt((t + 1) / 3) - (t % 3 == (t < 0 ? -1 : 2)), (e = new l(n = o == 1 / 0 ? "5e" + t : (n = o.toExponential()).slice(0, n.indexOf("e") + 1) + t)).s = f.s), a = (t = l.precision) + 3;;)
               if (c = (s = (u = e).times(u).times(u)).plus(f), e = hr(c.plus(f).times(u), c.plus(s), a + 2, 1), sr(u.d).slice(0, a) === (n = sr(e.d)).slice(0, a)) {
                    if ("9999" != (n = n.slice(a - 3, a + 1)) && (i || "4999" != n)) {
                         +n && (+n.slice(1) || "5" != n.charAt(0)) || (dr(e, t + 1, 1), r = !e.times(e).times(e).eq(f));
                         break
                    }
                    if (!i && (dr(u, t + 1, 0), u.times(u).times(u).eq(f))) {
                         e = u;
                         break
                    }
                    a += 4, i = 1
               } return Ut = !0, dr(e, t, l.rounding, r)
     }, ur.decimalPlaces = ur.dp = function () {
          var t, r = this.d,
               n = NaN;
          if (r) {
               if (n = 7 * ((t = r.length - 1) - Kt(this.e / 7)), t = r[t])
                    for (; t % 10 == 0; t /= 10) n--;
               n < 0 && (n = 0)
          }
          return n
     }, ur.dividedBy = ur.div = function (t) {
          return hr(this, new this.constructor(t))
     }, ur.dividedToIntegerBy = ur.divToInt = function (t) {
          var r = this.constructor;
          return dr(hr(this, new r(t), 0, 1, 1), r.precision, r.rounding)
     }, ur.equals = ur.eq = function (t) {
          return 0 === this.cmp(t)
     }, ur.floor = function () {
          return dr(new this.constructor(this), this.e + 1, 3)
     }, ur.greaterThan = ur.gt = function (t) {
          return this.cmp(t) > 0
     }, ur.greaterThanOrEqualTo = ur.gte = function (t) {
          var r = this.cmp(t);
          return 1 == r || 0 === r
     }, ur.hyperbolicCosine = ur.cosh = function () {
          var t, r, n, e, i, o = this,
               a = o.constructor,
               u = new a(1);
          if (!o.isFinite()) return new a(o.s ? 1 / 0 : NaN);
          if (o.isZero()) return u;
          n = a.precision, e = a.rounding, a.precision = n + Math.max(o.e, o.sd()) + 4, a.rounding = 1, (i = o.d.length) < 32 ? r = (1 / Er(4, t = Math.ceil(i / 3))).toString() : (t = 16, r = "2.3283064365386962890625e-10"), o = Wr(a, 1, o.times(r), new a(1), !0);
          for (var s, c = t, f = new a(8); c--;) s = o.times(o), o = u.minus(s.times(f.minus(s.times(f))));
          return dr(o, a.precision = n, a.rounding = e, !0)
     }, ur.hyperbolicSine = ur.sinh = function () {
          var t, r, n, e, i = this,
               o = i.constructor;
          if (!i.isFinite() || i.isZero()) return new o(i);
          if (r = o.precision, n = o.rounding, o.precision = r + Math.max(i.e, i.sd()) + 4, o.rounding = 1, (e = i.d.length) < 3) i = Wr(o, 2, i, i, !0);
          else {
               t = (t = 1.4 * Math.sqrt(e)) > 16 ? 16 : 0 | t, i = Wr(o, 2, i = i.times(1 / Er(5, t)), i, !0);
               for (var a, u = new o(5), s = new o(16), c = new o(20); t--;) a = i.times(i), i = i.times(u.plus(a.times(s.times(a).plus(c))))
          }
          return o.precision = r, o.rounding = n, dr(i, r, n, !0)
     }, ur.hyperbolicTangent = ur.tanh = function () {
          var t, r, n = this,
               e = n.constructor;
          return n.isFinite() ? n.isZero() ? new e(n) : (t = e.precision, r = e.rounding, e.precision = t + 7, e.rounding = 1, hr(n.sinh(), n.cosh(), e.precision = t, e.rounding = r)) : new e(n.s)
     }, ur.inverseCosine = ur.acos = function () {
          var t, r = this,
               n = r.constructor,
               e = r.abs().cmp(1),
               i = n.precision,
               o = n.rounding;
          return -1 !== e ? 0 === e ? r.isNeg() ? vr(n, i, o) : new n(0) : new n(NaN) : r.isZero() ? vr(n, i + 4, o).times(.5) : (n.precision = i + 6, n.rounding = 1, r = r.asin(), t = vr(n, i + 4, o).times(.5), n.precision = i, n.rounding = o, t.minus(r))
     }, ur.inverseHyperbolicCosine = ur.acosh = function () {
          var t, r, n = this,
               e = n.constructor;
          return n.lte(1) ? new e(n.eq(1) ? 0 : NaN) : n.isFinite() ? (t = e.precision, r = e.rounding, e.precision = t + Math.max(Math.abs(n.e), n.sd()) + 4, e.rounding = 1, Ut = !1, n = n.times(n).minus(1).sqrt().plus(n), Ut = !0, e.precision = t, e.rounding = r, n.ln()) : new e(n)
     }, ur.inverseHyperbolicSine = ur.asinh = function () {
          var t, r, n = this,
               e = n.constructor;
          return !n.isFinite() || n.isZero() ? new e(n) : (t = e.precision, r = e.rounding, e.precision = t + 2 * Math.max(Math.abs(n.e), n.sd()) + 6, e.rounding = 1, Ut = !1, n = n.times(n).plus(1).sqrt().plus(n), Ut = !0, e.precision = t, e.rounding = r, n.ln())
     }, ur.inverseHyperbolicTangent = ur.atanh = function () {
          var t, r, n, e, i = this,
               o = i.constructor;
          return i.isFinite() ? i.e >= 0 ? new o(i.abs().eq(1) ? i.s / 0 : i.isZero() ? i : NaN) : (t = o.precision, r = o.rounding, e = i.sd(), Math.max(e, t) < 2 * -i.e - 1 ? dr(new o(i), t, r, !0) : (o.precision = n = e - i.e, i = hr(i.plus(1), new o(1).minus(i), n + t, 1), o.precision = t + 4, o.rounding = 1, i = i.ln(), o.precision = t, o.rounding = r, i.times(.5))) : new o(NaN)
     }, ur.inverseSine = ur.asin = function () {
          var t, r, n, e, i = this,
               o = i.constructor;
          return i.isZero() ? new o(i) : (r = i.abs().cmp(1), n = o.precision, e = o.rounding, -1 !== r ? 0 === r ? ((t = vr(o, n + 4, e).times(.5)).s = i.s, t) : new o(NaN) : (o.precision = n + 6, o.rounding = 1, i = i.div(new o(1).minus(i.times(i)).sqrt().plus(1)).atan(), o.precision = n, o.rounding = e, i.times(2)))
     }, ur.inverseTangent = ur.atan = function () {
          var t, r, n, e, i, o, a, u, s, c = this,
               f = c.constructor,
               l = f.precision,
               h = f.rounding;
          if (c.isFinite()) {
               if (c.isZero()) return new f(c);
               if (c.abs().eq(1) && l + 4 <= ar) return (a = vr(f, l + 4, h).times(.25)).s = c.s, a
          } else {
               if (!c.s) return new f(NaN);
               if (l + 4 <= ar) return (a = vr(f, l + 4, h).times(.5)).s = c.s, a
          }
          for (f.precision = u = l + 10, f.rounding = 1, t = n = Math.min(28, u / 7 + 2 | 0); t; --t) c = c.div(c.times(c).plus(1).sqrt().plus(1));
          for (Ut = !1, r = Math.ceil(u / 7), e = 1, s = c.times(c), a = new f(c), i = c; - 1 !== t;)
               if (i = i.times(s), o = a.minus(i.div(e += 2)), i = i.times(s), void 0 !== (a = o.plus(i.div(e += 2))).d[r])
                    for (t = r; a.d[t] === o.d[t] && t--;);
          return n && (a = a.times(2 << n - 1)), Ut = !0, dr(a, f.precision = l, f.rounding = h, !0)
     }, ur.isFinite = function () {
          return !!this.d
     }, ur.isInteger = ur.isInt = function () {
          return !!this.d && Kt(this.e / 7) > this.d.length - 2
     }, ur.isNaN = function () {
          return !this.s
     }, ur.isNegative = ur.isNeg = function () {
          return this.s < 0
     }, ur.isPositive = ur.isPos = function () {
          return this.s > 0
     }, ur.isZero = function () {
          return !!this.d && 0 === this.d[0]
     }, ur.lessThan = ur.lt = function (t) {
          return this.cmp(t) < 0
     }, ur.lessThanOrEqualTo = ur.lte = function (t) {
          return this.cmp(t) < 1
     }, ur.logarithm = ur.log = function (t) {
          var r, n, e, i, o, a, u, s, c = this,
               f = c.constructor,
               l = f.precision,
               h = f.rounding;
          if (null == t) t = new f(10), r = !0;
          else {
               if (n = (t = new f(t)).d, t.s < 0 || !n || !n[0] || t.eq(1)) return new f(NaN);
               r = t.eq(10)
          }
          if (n = c.d, c.s < 0 || !n || !n[0] || c.eq(1)) return new f(n && !n[0] ? -1 / 0 : 1 != c.s ? NaN : n ? 0 : 1 / 0);
          if (r)
               if (n.length > 1) o = !0;
               else {
                    for (i = n[0]; i % 10 == 0;) i /= 10;
                    o = 1 !== i
               } if (Ut = !1, a = _r(c, u = l + 5), e = r ? wr(f, u + 10) : _r(t, u), fr((s = hr(a, e, u, 1)).d, i = l, h))
               do {
                    if (a = _r(c, u += 10), e = r ? wr(f, u + 10) : _r(t, u), s = hr(a, e, u, 1), !o) {
                         +sr(s.d).slice(i + 1, i + 15) + 1 == 1e14 && (s = dr(s, l + 1, 0));
                         break
                    }
               } while (fr(s.d, i += 10, h));
          return Ut = !0, dr(s, l, h)
     }, ur.minus = ur.sub = function (t) {
          var r, n, e, i, o, a, u, s, c, f, l, h, d = this,
               p = d.constructor;
          if (t = new p(t), !d.d || !t.d) return d.s && t.s ? d.d ? t.s = -t.s : t = new p(t.d || d.s !== t.s ? d : NaN) : t = new p(NaN), t;
          if (d.s != t.s) return t.s = -t.s, d.plus(t);
          if (c = d.d, h = t.d, u = p.precision, s = p.rounding, !c[0] || !h[0]) {
               if (h[0]) t.s = -t.s;
               else {
                    if (!c[0]) return new p(3 === s ? -0 : 0);
                    t = new p(d)
               }
               return Ut ? dr(t, u, s) : t
          }
          if (n = Kt(t.e / 7), f = Kt(d.e / 7), c = c.slice(), o = f - n) {
               for ((l = o < 0) ? (r = c, o = -o, a = h.length) : (r = h, n = f, a = c.length), o > (e = Math.max(Math.ceil(u / 7), a) + 2) && (o = e, r.length = 1), r.reverse(), e = o; e--;) r.push(0);
               r.reverse()
          } else {
               for ((l = (e = c.length) < (a = h.length)) && (a = e), e = 0; e < a; e++)
                    if (c[e] != h[e]) {
                         l = c[e] < h[e];
                         break
                    } o = 0
          }
          for (l && (r = c, c = h, h = r, t.s = -t.s), a = c.length, e = h.length - a; e > 0; --e) c[a++] = 0;
          for (e = h.length; e > o;) {
               if (c[--e] < h[e]) {
                    for (i = e; i && 0 === c[--i];) c[i] = ir - 1;
                    --c[i], c[e] += ir
               }
               c[e] -= h[e]
          }
          for (; 0 === c[--a];) c.pop();
          for (; 0 === c[0]; c.shift()) --n;
          return c[0] ? (t.d = c, t.e = mr(c, n), Ut ? dr(t, u, s) : t) : new p(3 === s ? -0 : 0)
     }, ur.modulo = ur.mod = function (t) {
          var r, n = this,
               e = n.constructor;
          return t = new e(t), !n.d || !t.s || t.d && !t.d[0] ? new e(NaN) : !t.d || n.d && !n.d[0] ? dr(new e(n), e.precision, e.rounding) : (Ut = !1, 9 == e.modulo ? (r = hr(n, t.abs(), 0, 3, 1)).s *= t.s : r = hr(n, t, 0, e.modulo, 1), r = r.times(t), Ut = !0, n.minus(r))
     }, ur.naturalExponential = ur.exp = function () {
          return zr(this)
     }, ur.naturalLogarithm = ur.ln = function () {
          return _r(this)
     }, ur.negated = ur.neg = function () {
          var t = new this.constructor(this);
          return t.s = -t.s, dr(t)
     }, ur.plus = ur.add = function (t) {
          var r, n, e, i, o, a, u, s, c, f, l = this,
               h = l.constructor;
          if (t = new h(t), !l.d || !t.d) return l.s && t.s ? l.d || (t = new h(t.d || l.s === t.s ? l : NaN)) : t = new h(NaN), t;
          if (l.s != t.s) return t.s = -t.s, l.minus(t);
          if (c = l.d, f = t.d, u = h.precision, s = h.rounding, !c[0] || !f[0]) return f[0] || (t = new h(l)), Ut ? dr(t, u, s) : t;
          if (o = Kt(l.e / 7), e = Kt(t.e / 7), c = c.slice(), i = o - e) {
               for (i < 0 ? (n = c, i = -i, a = f.length) : (n = f, e = o, a = c.length), i > (a = (o = Math.ceil(u / 7)) > a ? o + 1 : a + 1) && (i = a, n.length = 1), n.reverse(); i--;) n.push(0);
               n.reverse()
          }
          for ((a = c.length) - (i = f.length) < 0 && (i = a, n = f, f = c, c = n), r = 0; i;) r = (c[--i] = c[i] + f[i] + r) / ir | 0, c[i] %= ir;
          for (r && (c.unshift(r), ++e), a = c.length; 0 == c[--a];) c.pop();
          return t.d = c, t.e = mr(c, e), Ut ? dr(t, u, s) : t
     }, ur.precision = ur.sd = function (t) {
          var r, n = this;
          if (void 0 !== t && t !== !!t && 1 !== t && 0 !== t) throw Error(Ht + t);
          return n.d ? (r = gr(n.d), t && n.e + 1 > r && (r = n.e + 1)) : r = NaN, r
     }, ur.round = function () {
          var t = this,
               r = t.constructor;
          return dr(new r(t), t.e + 1, r.rounding)
     }, ur.sine = ur.sin = function () {
          var t, r, n = this,
               e = n.constructor;
          return n.isFinite() ? n.isZero() ? new e(n) : (t = e.precision, r = e.rounding, e.precision = t + Math.max(n.e, n.sd()) + 7, e.rounding = 1, n = function (t, r) {
               var n, e = r.d.length;
               if (e < 3) return Wr(t, 2, r, r);
               n = (n = 1.4 * Math.sqrt(e)) > 16 ? 16 : 0 | n, r = r.times(1 / Er(5, n)), r = Wr(t, 2, r, r);
               for (var i, o = new t(5), a = new t(16), u = new t(20); n--;) i = r.times(r), r = r.times(o.plus(i.times(a.times(i).minus(u))));
               return r
          }(e, Fr(e, n)), e.precision = t, e.rounding = r, dr(Bt > 2 ? n.neg() : n, t, r, !0)) : new e(NaN)
     }, ur.squareRoot = ur.sqrt = function () {
          var t, r, n, e, i, o, a = this,
               u = a.d,
               s = a.e,
               c = a.s,
               f = a.constructor;
          if (1 !== c || !u || !u[0]) return new f(!c || c < 0 && (!u || u[0]) ? NaN : u ? a : 1 / 0);
          for (Ut = !1, 0 == (c = Math.sqrt(+a)) || c == 1 / 0 ? (((r = sr(u)).length + s) % 2 == 0 && (r += "0"), c = Math.sqrt(r), s = Kt((s + 1) / 2) - (s < 0 || s % 2), e = new f(r = c == 1 / 0 ? "5e" + s : (r = c.toExponential()).slice(0, r.indexOf("e") + 1) + s)) : e = new f(c.toString()), n = (s = f.precision) + 3;;)
               if (e = (o = e).plus(hr(a, o, n + 2, 1)).times(.5), sr(o.d).slice(0, n) === (r = sr(e.d)).slice(0, n)) {
                    if ("9999" != (r = r.slice(n - 3, n + 1)) && (i || "4999" != r)) {
                         +r && (+r.slice(1) || "5" != r.charAt(0)) || (dr(e, s + 1, 1), t = !e.times(e).eq(a));
                         break
                    }
                    if (!i && (dr(o, s + 1, 0), o.times(o).eq(a))) {
                         e = o;
                         break
                    }
                    n += 4, i = 1
               } return Ut = !0, dr(e, s, f.rounding, t)
     }, ur.tangent = ur.tan = function () {
          var t, r, n = this,
               e = n.constructor;
          return n.isFinite() ? n.isZero() ? new e(n) : (t = e.precision, r = e.rounding, e.precision = t + 10, e.rounding = 1, (n = n.sin()).s = 1, n = hr(n, new e(1).minus(n.times(n)).sqrt(), t + 10, 0), e.precision = t, e.rounding = r, dr(2 == Bt || 4 == Bt ? n.neg() : n, t, r, !0)) : new e(NaN)
     }, ur.times = ur.mul = function (t) {
          var r, n, e, i, o, a, u, s, c, f = this,
               l = f.constructor,
               h = f.d,
               d = (t = new l(t)).d;
          if (t.s *= f.s, !(h && h[0] && d && d[0])) return new l(!t.s || h && !h[0] && !d || d && !d[0] && !h ? NaN : h && d ? 0 * t.s : t.s / 0);
          for (n = Kt(f.e / 7) + Kt(t.e / 7), (s = h.length) < (c = d.length) && (o = h, h = d, d = o, a = s, s = c, c = a), o = [], e = a = s + c; e--;) o.push(0);
          for (e = c; --e >= 0;) {
               for (r = 0, i = s + e; i > e;) u = o[i] + d[e] * h[i - e - 1] + r, o[i--] = u % ir | 0, r = u / ir | 0;
               o[i] = (o[i] + r) % ir | 0
          }
          for (; !o[--a];) o.pop();
          return r ? ++n : o.shift(), t.d = o, t.e = mr(o, n), Ut ? dr(t, l.precision, l.rounding) : t
     }, ur.toBinary = function (t, r) {
          return Yr(this, 2, t, r)
     }, ur.toDecimalPlaces = ur.toDP = function (t, r) {
          var n = this,
               e = n.constructor;
          return n = new e(n), void 0 === t ? n : (cr(t, 0, jt), void 0 === r ? r = e.rounding : cr(r, 0, 8), dr(n, t + n.e + 1, r))
     }, ur.toExponential = function (t, r) {
          var n, e = this,
               i = e.constructor;
          return void 0 === t ? n = pr(e, !0) : (cr(t, 0, jt), void 0 === r ? r = i.rounding : cr(r, 0, 8), n = pr(e = dr(new i(e), t + 1, r), !0, t + 1)), e.isNeg() && !e.isZero() ? "-" + n : n
     }, ur.toFixed = function (t, r) {
          var n, e, i = this,
               o = i.constructor;
          return void 0 === t ? n = pr(i) : (cr(t, 0, jt), void 0 === r ? r = o.rounding : cr(r, 0, 8), n = pr(e = dr(new o(i), t + i.e + 1, r), !1, t + e.e + 1)), i.isNeg() && !i.isZero() ? "-" + n : n
     }, ur.toFraction = function (t) {
          var r, n, e, i, o, a, u, s, c, f, l, h, d = this,
               p = d.d,
               m = d.constructor;
          if (!p) return new m(d);
          if (c = n = new m(1), e = s = new m(0), a = (o = (r = new m(e)).e = gr(p) - d.e - 1) % 7, r.d[0] = Qt(10, a < 0 ? 7 + a : a), null == t) t = o > 0 ? r : c;
          else {
               if (!(u = new m(t)).isInt() || u.lt(c)) throw Error(Ht + u);
               t = u.gt(r) ? o > 0 ? r : c : u
          }
          for (Ut = !1, u = new m(sr(p)), f = m.precision, m.precision = o = 7 * p.length * 2; l = hr(u, r, 0, 1, 1), 1 != (i = n.plus(l.times(e))).cmp(t);) n = e, e = i, i = c, c = s.plus(l.times(i)), s = i, i = r, r = u.minus(l.times(i)), u = i;
          return i = hr(t.minus(n), e, 0, 1, 1), s = s.plus(i.times(c)), n = n.plus(i.times(e)), s.s = c.s = d.s, h = hr(c, e, o, 1).minus(d).abs().cmp(hr(s, n, o, 1).minus(d).abs()) < 1 ? [c, e] : [s, n], m.precision = f, Ut = !0, h
     }, ur.toHexadecimal = ur.toHex = function (t, r) {
          return Yr(this, 16, t, r)
     }, ur.toNearest = function (t, r) {
          var n = this,
               e = n.constructor;
          if (n = new e(n), null == t) {
               if (!n.d) return n;
               t = new e(1), r = e.rounding
          } else {
               if (t = new e(t), void 0 === r ? r = e.rounding : cr(r, 0, 8), !n.d) return t.s ? n : t;
               if (!t.d) return t.s && (t.s = n.s), t
          }
          return t.d[0] ? (Ut = !1, n = hr(n, t, 0, r, 1).times(t), Ut = !0, dr(n)) : (t.s = n.s, n = t), n
     }, ur.toNumber = function () {
          return +this
     }, ur.toOctal = function (t, r) {
          return Yr(this, 8, t, r)
     }, ur.toPower = ur.pow = function (t) {
          var r, n, e, i, o, a, u = this,
               s = u.constructor,
               c = +(t = new s(t));
          if (!(u.d && t.d && u.d[0] && t.d[0])) return new s(Qt(+u, c));
          if ((u = new s(u)).eq(1)) return u;
          if (e = s.precision, o = s.rounding, t.eq(1)) return dr(u, e, o);
          if ((r = Kt(t.e / 7)) >= t.d.length - 1 && (n = c < 0 ? -c : c) <= 9007199254740991) return i = br(s, u, n, e), t.s < 0 ? new s(1).div(i) : dr(i, e, o);
          if ((a = u.s) < 0) {
               if (r < t.d.length - 1) return new s(NaN);
               if (0 == (1 & t.d[r]) && (a = 1), 0 == u.e && 1 == u.d[0] && 1 == u.d.length) return u.s = a, u
          }
          return (r = 0 != (n = Qt(+u, c)) && isFinite(n) ? new s(n + "").e : Kt(c * (Math.log("0." + sr(u.d)) / Math.LN10 + u.e + 1))) > s.maxE + 1 || r < s.minE - 1 ? new s(r > 0 ? a / 0 : 0) : (Ut = !1, s.rounding = u.s = 1, n = Math.min(12, (r + "").length), (i = zr(t.times(_r(u, e + n)), e)).d && fr((i = dr(i, e + 5, 1)).d, e, o) && (r = e + 10, +sr((i = dr(zr(t.times(_r(u, r + n)), r), r + 5, 1)).d).slice(e + 1, e + 15) + 1 == 1e14 && (i = dr(i, e + 1, 0))), i.s = a, Ut = !0, s.rounding = o, dr(i, e, o))
     }, ur.toPrecision = function (t, r) {
          var n, e = this,
               i = e.constructor;
          return void 0 === t ? n = pr(e, e.e <= i.toExpNeg || e.e >= i.toExpPos) : (cr(t, 1, jt), void 0 === r ? r = i.rounding : cr(r, 0, 8), n = pr(e = dr(new i(e), t, r), t <= e.e || e.e <= i.toExpNeg, t)), e.isNeg() && !e.isZero() ? "-" + n : n
     }, ur.toSignificantDigits = ur.toSD = function (t, r) {
          var n = this.constructor;
          return void 0 === t ? (t = n.precision, r = n.rounding) : (cr(t, 1, jt), void 0 === r ? r = n.rounding : cr(r, 0, 8)), dr(new n(this), t, r)
     }, ur.toString = function () {
          var t = this,
               r = t.constructor,
               n = pr(t, t.e <= r.toExpNeg || t.e >= r.toExpPos);
          return t.isNeg() && !t.isZero() ? "-" + n : n
     }, ur.truncated = ur.trunc = function () {
          return dr(new this.constructor(this), this.e + 1, 1)
     }, ur.valueOf = ur.toJSON = function () {
          var t = this,
               r = t.constructor,
               n = pr(t, t.e <= r.toExpNeg || t.e >= r.toExpPos);
          return t.isNeg() ? "-" + n : n
     };
     var hr = function () {
          function t(t, r, n) {
               var e, i = 0,
                    o = t.length;
               for (t = t.slice(); o--;) e = t[o] * r + i, t[o] = e % n | 0, i = e / n | 0;
               return i && t.unshift(i), t
          }

          function r(t, r, n, e) {
               var i, o;
               if (n != e) o = n > e ? 1 : -1;
               else
                    for (i = o = 0; i < n; i++)
                         if (t[i] != r[i]) {
                              o = t[i] > r[i] ? 1 : -1;
                              break
                         } return o
          }

          function n(t, r, n, e) {
               for (var i = 0; n--;) t[n] -= i, i = t[n] < r[n] ? 1 : 0, t[n] = i * e + t[n] - r[n];
               for (; !t[0] && t.length > 1;) t.shift()
          }
          return function (e, i, o, a, u, s) {
               var c, f, l, h, d, p, m, w, v, g, y, b, x, N, z, _, k, M, Z, W, E = e.constructor,
                    F = e.s == i.s ? 1 : -1,
                    Y = e.d,
                    G = i.d;
               if (!(Y && Y[0] && G && G[0])) return new E(e.s && i.s && (Y ? !G || Y[0] != G[0] : G) ? Y && 0 == Y[0] || !G ? 0 * F : F / 0 : NaN);
               for (s ? (d = 1, f = e.e - i.e) : (s = ir, d = 7, f = Kt(e.e / d) - Kt(i.e / d)), Z = G.length, k = Y.length, g = (v = new E(F)).d = [], l = 0; G[l] == (Y[l] || 0); l++);
               if (G[l] > (Y[l] || 0) && f--, null == o ? (N = o = E.precision, a = E.rounding) : N = u ? o + (e.e - i.e) + 1 : o, N < 0) g.push(1), p = !0;
               else {
                    if (N = N / d + 2 | 0, l = 0, 1 == Z) {
                         for (h = 0, G = G[0], N++;
                              (l < k || h) && N--; l++) z = h * s + (Y[l] || 0), g[l] = z / G | 0, h = z % G | 0;
                         p = h || l < k
                    } else {
                         for ((h = s / (G[0] + 1) | 0) > 1 && (G = t(G, h, s), Y = t(Y, h, s), Z = G.length, k = Y.length), _ = Z, b = (y = Y.slice(0, Z)).length; b < Z;) y[b++] = 0;
                         (W = G.slice()).unshift(0), M = G[0], G[1] >= s / 2 && ++M;
                         do {
                              h = 0, (c = r(G, y, Z, b)) < 0 ? (x = y[0], Z != b && (x = x * s + (y[1] || 0)), (h = x / M | 0) > 1 ? (h >= s && (h = s - 1), 1 == (c = r(m = t(G, h, s), y, w = m.length, b = y.length)) && (h--, n(m, Z < w ? W : G, w, s))) : (0 == h && (c = h = 1), m = G.slice()), (w = m.length) < b && m.unshift(0), n(y, m, b, s), -1 == c && (c = r(G, y, Z, b = y.length)) < 1 && (h++, n(y, Z < b ? W : G, b, s)), b = y.length) : 0 === c && (h++, y = [0]), g[l++] = h, c && y[0] ? y[b++] = Y[_] || 0 : (y = [Y[_]], b = 1)
                         } while ((_++ < k || void 0 !== y[0]) && N--);
                         p = void 0 !== y[0]
                    }
                    g[0] || g.shift()
               }
               if (1 == d) v.e = f, It = p;
               else {
                    for (l = 1, h = g[0]; h >= 10; h /= 10) l++;
                    v.e = l + f * d - 1, dr(v, u ? o + v.e + 1 : o, a, p)
               }
               return v
          }
     }();

     function dr(t, r, n, e) {
          var i, o, a, u, s, c, f, l, h, d = t.constructor;
          t: if (null != r) {
               if (!(l = t.d)) return t;
               for (i = 1, u = l[0]; u >= 10; u /= 10) i++;
               if ((o = r - i) < 0) o += 7, a = r, s = (f = l[h = 0]) / Qt(10, i - a - 1) % 10 | 0;
               else if ((h = Math.ceil((o + 1) / 7)) >= (u = l.length)) {
                    if (!e) break t;
                    for (; u++ <= h;) l.push(0);
                    f = s = 0, i = 1, a = (o %= 7) - 7 + 1
               } else {
                    for (f = u = l[h], i = 1; u >= 10; u /= 10) i++;
                    s = (a = (o %= 7) - 7 + i) < 0 ? 0 : f / Qt(10, i - a - 1) % 10 | 0
               }
               if (e = e || r < 0 || void 0 !== l[h + 1] || (a < 0 ? f : f % Qt(10, i - a - 1)), c = n < 4 ? (s || e) && (0 == n || n == (t.s < 0 ? 3 : 2)) : s > 5 || 5 == s && (4 == n || e || 6 == n && (o > 0 ? a > 0 ? f / Qt(10, i - a) : 0 : l[h - 1]) % 10 & 1 || n == (t.s < 0 ? 8 : 7)), r < 1 || !l[0]) return l.length = 0, c ? (r -= t.e + 1, l[0] = Qt(10, (7 - r % 7) % 7), t.e = -r || 0) : l[0] = t.e = 0, t;
               if (0 == o ? (l.length = h, u = 1, h--) : (l.length = h + 1, u = Qt(10, 7 - o), l[h] = a > 0 ? (f / Qt(10, i - a) % Qt(10, a) | 0) * u : 0), c)
                    for (;;) {
                         if (0 == h) {
                              for (o = 1, a = l[0]; a >= 10; a /= 10) o++;
                              for (a = l[0] += u, u = 1; a >= 10; a /= 10) u++;
                              o != u && (t.e++, l[0] == ir && (l[0] = 1));
                              break
                         }
                         if (l[h] += u, l[h] != ir) break;
                         l[h--] = 0, u = 1
                    }
               for (o = l.length; 0 === l[--o];) l.pop()
          }
          return Ut && (t.e > d.maxE ? (t.d = null, t.e = NaN) : t.e < d.minE && (t.e = 0, t.d = [0])), t
     }

     function pr(t, r, n) {
          if (!t.isFinite()) return kr(t);
          var e, i = t.e,
               o = sr(t.d),
               a = o.length;
          return r ? (n && (e = n - a) > 0 ? o = o.charAt(0) + "." + o.slice(1) + yr(e) : a > 1 && (o = o.charAt(0) + "." + o.slice(1)), o = o + (t.e < 0 ? "e" : "e+") + t.e) : i < 0 ? (o = "0." + yr(-i - 1) + o, n && (e = n - a) > 0 && (o += yr(e))) : i >= a ? (o += yr(i + 1 - a), n && (e = n - i - 1) > 0 && (o = o + "." + yr(e))) : ((e = i + 1) < a && (o = o.slice(0, e) + "." + o.slice(e)), n && (e = n - a) > 0 && (i + 1 === a && (o += "."), o += yr(e))), o
     }

     function mr(t, r) {
          var n = t[0];
          for (r *= 7; n >= 10; n /= 10) r++;
          return r
     }

     function wr(t, r, n) {
          if (r > or) throw Ut = !0, n && (t.precision = n), Error(Vt);
          return dr(new t(Pt), r, 1, !0)
     }

     function vr(t, r, n) {
          if (r > ar) throw Error(Vt);
          return dr(new t(qt), r, n, !0)
     }

     function gr(t) {
          var r = t.length - 1,
               n = 7 * r + 1;
          if (r = t[r]) {
               for (; r % 10 == 0; r /= 10) n--;
               for (r = t[0]; r >= 10; r /= 10) n++
          }
          return n
     }

     function yr(t) {
          for (var r = ""; t--;) r += "0";
          return r
     }

     function br(t, r, n, e) {
          var i, o = new t(1),
               a = Math.ceil(e / 7 + 4);
          for (Ut = !1;;) {
               if (n % 2 && Gr((o = o.times(r)).d, a) && (i = !0), 0 === (n = Kt(n / 2))) {
                    n = o.d.length - 1, i && 0 === o.d[n] && ++o.d[n];
                    break
               }
               Gr((r = r.times(r)).d, a)
          }
          return Ut = !0, o
     }

     function xr(t) {
          return 1 & t.d[t.d.length - 1]
     }

     function Nr(t, r, n) {
          for (var e, i = new t(r[0]), o = 0; ++o < r.length;) {
               if (!(e = new t(r[o])).s) {
                    i = e;
                    break
               }
               i[n](e) && (i = e)
          }
          return i
     }

     function zr(t, r) {
          var n, e, i, o, a, u, s, c = 0,
               f = 0,
               l = 0,
               h = t.constructor,
               d = h.rounding,
               p = h.precision;
          if (!t.d || !t.d[0] || t.e > 17) return new h(t.d ? t.d[0] ? t.s < 0 ? 0 : 1 / 0 : 1 : t.s ? t.s < 0 ? 0 : t : NaN);
          for (null == r ? (Ut = !1, s = p) : s = r, u = new h(.03125); t.e > -2;) t = t.times(u), l += 5;
          for (s += e = Math.log(Qt(2, l)) / Math.LN10 * 2 + 5 | 0, n = o = a = new h(1), h.precision = s;;) {
               if (o = dr(o.times(t), s, 1), n = n.times(++f), sr((u = a.plus(hr(o, n, s, 1))).d).slice(0, s) === sr(a.d).slice(0, s)) {
                    for (i = l; i--;) a = dr(a.times(a), s, 1);
                    if (null != r) return h.precision = p, a;
                    if (!(c < 3 && fr(a.d, s - e, d, c))) return dr(a, h.precision = p, d, Ut = !0);
                    h.precision = s += 10, n = o = u = new h(1), f = 0, c++
               }
               a = u
          }
     }

     function _r(t, r) {
          var n, e, i, o, a, u, s, c, f, l, h, d = 1,
               p = t,
               m = p.d,
               w = p.constructor,
               v = w.rounding,
               g = w.precision;
          if (p.s < 0 || !m || !m[0] || !p.e && 1 == m[0] && 1 == m.length) return new w(m && !m[0] ? -1 / 0 : 1 != p.s ? NaN : m ? 0 : p);
          if (null == r ? (Ut = !1, f = g) : f = r, w.precision = f += 10, e = (n = sr(m)).charAt(0), !(Math.abs(o = p.e) < 15e14)) return c = wr(w, f + 2, g).times(o + ""), p = _r(new w(e + "." + n.slice(1)), f - 10).plus(c), w.precision = g, null == r ? dr(p, g, v, Ut = !0) : p;
          for (; e < 7 && 1 != e || 1 == e && n.charAt(1) > 3;) e = (n = sr((p = p.times(t)).d)).charAt(0), d++;
          for (o = p.e, e > 1 ? (p = new w("0." + n), o++) : p = new w(e + "." + n.slice(1)), l = p, s = a = p = hr(p.minus(1), p.plus(1), f, 1), h = dr(p.times(p), f, 1), i = 3;;) {
               if (a = dr(a.times(h), f, 1), sr((c = s.plus(hr(a, new w(i), f, 1))).d).slice(0, f) === sr(s.d).slice(0, f)) {
                    if (s = s.times(2), 0 !== o && (s = s.plus(wr(w, f + 2, g).times(o + ""))), s = hr(s, new w(d), f, 1), null != r) return w.precision = g, s;
                    if (!fr(s.d, f - 10, v, u)) return dr(s, w.precision = g, v, Ut = !0);
                    w.precision = f += 10, c = a = p = hr(l.minus(1), l.plus(1), f, 1), h = dr(p.times(p), f, 1), i = u = 1
               }
               s = c, i += 2
          }
     }

     function kr(t) {
          return String(t.s * t.s / 0)
     }

     function Mr(t, r) {
          var n, e, i;
          for ((n = r.indexOf(".")) > -1 && (r = r.replace(".", "")), (e = r.search(/e/i)) > 0 ? (n < 0 && (n = e), n += +r.slice(e + 1), r = r.substring(0, e)) : n < 0 && (n = r.length), e = 0; 48 === r.charCodeAt(e); e++);
          for (i = r.length; 48 === r.charCodeAt(i - 1); --i);
          if (r = r.slice(e, i)) {
               if (i -= e, t.e = n = n - e - 1, t.d = [], e = (n + 1) % 7, n < 0 && (e += 7), e < i) {
                    for (e && t.d.push(+r.slice(0, e)), i -= 7; e < i;) t.d.push(+r.slice(e, e += 7));
                    e = 7 - (r = r.slice(e)).length
               } else e -= i;
               for (; e--;) r += "0";
               t.d.push(+r), Ut && (t.e > t.constructor.maxE ? (t.d = null, t.e = NaN) : t.e < t.constructor.minE && (t.e = 0, t.d = [0]))
          } else t.e = 0, t.d = [0];
          return t
     }

     function Zr(t, r) {
          var n, e, i, o, a, u, s, c, f;
          if ("Infinity" === r || "NaN" === r) return +r || (t.s = NaN), t.e = NaN, t.d = null, t;
          if (rr.test(r)) n = 16, r = r.toLowerCase();
          else if (tr.test(r)) n = 2;
          else {
               if (!nr.test(r)) throw Error(Ht + r);
               n = 8
          }
          for ((o = r.search(/p/i)) > 0 ? (s = +r.slice(o + 1), r = r.substring(2, o)) : r = r.slice(2), a = (o = r.indexOf(".")) >= 0, e = t.constructor, a && (o = (u = (r = r.replace(".", "")).length) - o, i = br(e, new e(n), o, 2 * o)), o = f = (c = lr(r, n, ir)).length - 1; 0 === c[o]; --o) c.pop();
          return o < 0 ? new e(0 * t.s) : (t.e = mr(c, f), t.d = c, Ut = !1, a && (t = hr(t, i, 4 * u)), s && (t = t.times(Math.abs(s) < 54 ? Qt(2, s) : gn.pow(2, s))), Ut = !0, t)
     }

     function Wr(t, r, n, e, i) {
          var o, a, u, s, c = t.precision,
               f = Math.ceil(c / 7);
          for (Ut = !1, s = n.times(n), u = new t(e);;) {
               if (a = hr(u.times(s), new t(r++ * r++), c, 1), u = i ? e.plus(a) : e.minus(a), e = hr(a.times(s), new t(r++ * r++), c, 1), void 0 !== (a = u.plus(e)).d[f]) {
                    for (o = f; a.d[o] === u.d[o] && o--;);
                    if (-1 == o) break
               }
               o = u, u = e, e = a, a = o
          }
          return Ut = !0, a.d.length = f + 1, a
     }

     function Er(t, r) {
          for (var n = t; --r;) n *= t;
          return n
     }

     function Fr(t, r) {
          var n, e = r.s < 0,
               i = vr(t, t.precision, 1),
               o = i.times(.5);
          if ((r = r.abs()).lte(o)) return Bt = e ? 4 : 1, r;
          if ((n = r.divToInt(i)).isZero()) Bt = e ? 3 : 2;
          else {
               if ((r = r.minus(n.times(i))).lte(o)) return Bt = xr(n) ? e ? 2 : 3 : e ? 4 : 1, r;
               Bt = xr(n) ? e ? 1 : 4 : e ? 3 : 2
          }
          return r.minus(i).abs()
     }

     function Yr(t, r, n, e) {
          var i, o, a, u, s, c, f, l, h, d = t.constructor,
               p = void 0 !== n;
          if (p ? (cr(n, 1, jt), void 0 === e ? e = d.rounding : cr(e, 0, 8)) : (n = d.precision, e = d.rounding), t.isFinite()) {
               for (p ? (i = 2, 16 == r ? n = 4 * n - 3 : 8 == r && (n = 3 * n - 2)) : i = r, (a = (f = pr(t)).indexOf(".")) >= 0 && (f = f.replace(".", ""), (h = new d(1)).e = f.length - a, h.d = lr(pr(h), 10, i), h.e = h.d.length), o = s = (l = lr(f, 10, i)).length; 0 == l[--s];) l.pop();
               if (l[0]) {
                    if (a < 0 ? o-- : ((t = new d(t)).d = l, t.e = o, l = (t = hr(t, h, n, e, 0, i)).d, o = t.e, c = It), a = l[n], u = i / 2, c = c || void 0 !== l[n + 1], c = e < 4 ? (void 0 !== a || c) && (0 === e || e === (t.s < 0 ? 3 : 2)) : a > u || a === u && (4 === e || c || 6 === e && 1 & l[n - 1] || e === (t.s < 0 ? 8 : 7)), l.length = n, c)
                         for (; ++l[--n] > i - 1;) l[n] = 0, n || (++o, l.unshift(1));
                    for (s = l.length; !l[s - 1]; --s);
                    for (a = 0, f = ""; a < s; a++) f += Dt.charAt(l[a]);
                    if (p) {
                         if (s > 1)
                              if (16 == r || 8 == r) {
                                   for (a = 16 == r ? 4 : 3, --s; s % a; s++) f += "0";
                                   for (s = (l = lr(f, i, r)).length; !l[s - 1]; --s);
                                   for (a = 1, f = "1."; a < s; a++) f += Dt.charAt(l[a])
                              } else f = f.charAt(0) + "." + f.slice(1);
                         f = f + (o < 0 ? "p" : "p+") + o
                    } else if (o < 0) {
                         for (; ++o;) f = "0" + f;
                         f = "0." + f
                    } else if (++o > s)
                         for (o -= s; o--;) f += "0";
                    else o < s && (f = f.slice(0, o) + "." + f.slice(o))
               } else f = p ? "0p+0" : "0";
               f = (16 == r ? "0x" : 2 == r ? "0b" : 8 == r ? "0o" : "") + f
          } else f = kr(t);
          return t.s < 0 ? "-" + f : f
     }

     function Gr(t, r) {
          if (t.length > r) return t.length = r, !0
     }

     function Jr(t) {
          return new this(t).abs()
     }

     function Ar(t) {
          return new this(t).acos()
     }

     function Sr(t) {
          return new this(t).acosh()
     }

     function Or(t, r) {
          return new this(t).plus(r)
     }

     function Cr(t) {
          return new this(t).asin()
     }

     function Xr(t) {
          return new this(t).asinh()
     }

     function Ir(t) {
          return new this(t).atan()
     }

     function Br(t) {
          return new this(t).atanh()
     }

     function Tr(t, r) {
          t = new this(t), r = new this(r);
          var n, e = this.precision,
               i = this.rounding,
               o = e + 4;
          return t.s && r.s ? t.d || r.d ? !r.d || t.isZero() ? (n = r.s < 0 ? vr(this, e, i) : new this(0)).s = t.s : !t.d || r.isZero() ? (n = vr(this, o, 1).times(.5)).s = t.s : r.s < 0 ? (this.precision = o, this.rounding = 1, n = this.atan(hr(t, r, o, 1)), r = vr(this, o, 1), this.precision = e, this.rounding = i, n = t.s < 0 ? n.minus(r) : n.plus(r)) : n = this.atan(hr(t, r, o, 1)) : (n = vr(this, o, 1).times(r.s > 0 ? .25 : .75)).s = t.s : n = new this(NaN), n
     }

     function jr(t) {
          return new this(t).cbrt()
     }

     function Dr(t) {
          return dr(t = new this(t), t.e + 1, 2)
     }

     function Pr(t) {
          if (!t || "object" != typeof t) throw Error(Lt + "Object expected");
          var r, n, e, i = !0 === t.defaults,
               o = ["precision", 1, jt, "rounding", 0, 8, "toExpNeg", -Tt, 0, "toExpPos", 0, Tt, "maxE", 0, Tt, "minE", -Tt, 0, "modulo", 0, 9];
          for (r = 0; r < o.length; r += 3)
               if (n = o[r], i && (this[n] = Rt[n]), void 0 !== (e = t[n])) {
                    if (!(Kt(e) === e && e >= o[r + 1] && e <= o[r + 2])) throw Error(Ht + n + ": " + e);
                    this[n] = e
               } if (n = "crypto", i && (this[n] = Rt[n]), void 0 !== (e = t[n])) {
               if (!0 !== e && !1 !== e && 0 !== e && 1 !== e) throw Error(Ht + n + ": " + e);
               if (e) {
                    if ("undefined" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw Error($t);
                    this[n] = !0
               } else this[n] = !1
          }
          return this
     }

     function qr(t) {
          return new this(t).cos()
     }

     function Rr(t) {
          return new this(t).cosh()
     }

     function Ur(t, r) {
          return new this(t).div(r)
     }

     function Lr(t) {
          return new this(t).exp()
     }

     function Hr(t) {
          return dr(t = new this(t), t.e + 1, 3)
     }

     function Vr() {
          var t, r, n = new this(0);
          for (Ut = !1, t = 0; t < arguments.length;)
               if ((r = new this(arguments[t++])).d) n.d && (n = n.plus(r.times(r)));
               else {
                    if (r.s) return Ut = !0, new this(1 / 0);
                    n = r
               } return Ut = !0, n.sqrt()
     }

     function $r(t) {
          return t instanceof gn || t && "[object Decimal]" === t.name || !1
     }

     function Kr(t) {
          return new this(t).ln()
     }

     function Qr(t, r) {
          return new this(t).log(r)
     }

     function tn(t) {
          return new this(t).log(2)
     }

     function rn(t) {
          return new this(t).log(10)
     }

     function nn() {
          return Nr(this, arguments, "lt")
     }

     function en() {
          return Nr(this, arguments, "gt")
     }

     function on(t, r) {
          return new this(t).mod(r)
     }

     function an(t, r) {
          return new this(t).mul(r)
     }

     function un(t, r) {
          return new this(t).pow(r)
     }

     function sn(t) {
          var r, n, e, i, o = 0,
               a = new this(1),
               u = [];
          if (void 0 === t ? t = this.precision : cr(t, 1, jt), e = Math.ceil(t / 7), this.crypto)
               if (crypto.getRandomValues)
                    for (r = crypto.getRandomValues(new Uint32Array(e)); o < e;)(i = r[o]) >= 429e7 ? r[o] = crypto.getRandomValues(new Uint32Array(1))[0] : u[o++] = i % 1e7;
               else {
                    if (!crypto.randomBytes) throw Error($t);
                    for (r = crypto.randomBytes(e *= 4); o < e;)(i = r[o] + (r[o + 1] << 8) + (r[o + 2] << 16) + ((127 & r[o + 3]) << 24)) >= 214e7 ? crypto.randomBytes(4).copy(r, o) : (u.push(i % 1e7), o += 4);
                    o = e / 4
               }
          else
               for (; o < e;) u[o++] = 1e7 * Math.random() | 0;
          for (t %= 7, (e = u[--o]) && t && (i = Qt(10, 7 - t), u[o] = (e / i | 0) * i); 0 === u[o]; o--) u.pop();
          if (o < 0) n = 0, u = [0];
          else {
               for (n = -1; 0 === u[0]; n -= 7) u.shift();
               for (e = 1, i = u[0]; i >= 10; i /= 10) e++;
               e < 7 && (n -= 7 - e)
          }
          return a.e = n, a.d = u, a
     }

     function cn(t) {
          return dr(t = new this(t), t.e + 1, this.rounding)
     }

     function fn(t) {
          return (t = new this(t)).d ? t.d[0] ? t.s : 0 * t.s : t.s || NaN
     }

     function ln(t) {
          return new this(t).sin()
     }

     function hn(t) {
          return new this(t).sinh()
     }

     function dn(t) {
          return new this(t).sqrt()
     }

     function pn(t, r) {
          return new this(t).sub(r)
     }

     function mn(t) {
          return new this(t).tan()
     }

     function wn(t) {
          return new this(t).tanh()
     }

     function vn(t) {
          return dr(t = new this(t), t.e + 1, 1)
     }
     ur[Symbol.for("nodejs.util.inspect.custom")] = ur.toString, ur[Symbol.toStringTag] = "Decimal";
     var gn = function t(r) {
          var n, e, i;

          function o(t) {
               var r, n, e, i = this;
               if (!(i instanceof o)) return new o(t);
               if (i.constructor = o, t instanceof o) return i.s = t.s, void(Ut ? !t.d || t.e > o.maxE ? (i.e = NaN, i.d = null) : t.e < o.minE ? (i.e = 0, i.d = [0]) : (i.e = t.e, i.d = t.d.slice()) : (i.e = t.e, i.d = t.d ? t.d.slice() : t.d));
               if ("number" === (e = typeof t)) {
                    if (0 === t) return i.s = 1 / t < 0 ? -1 : 1, i.e = 0, void(i.d = [0]);
                    if (t < 0 ? (t = -t, i.s = -1) : i.s = 1, t === ~~t && t < 1e7) {
                         for (r = 0, n = t; n >= 10; n /= 10) r++;
                         return void(Ut ? r > o.maxE ? (i.e = NaN, i.d = null) : r < o.minE ? (i.e = 0, i.d = [0]) : (i.e = r, i.d = [t]) : (i.e = r, i.d = [t]))
                    }
                    return 0 * t != 0 ? (t || (i.s = NaN), i.e = NaN, void(i.d = null)) : Mr(i, t.toString())
               }
               if ("string" !== e) throw Error(Ht + t);
               return 45 === (n = t.charCodeAt(0)) ? (t = t.slice(1), i.s = -1) : (43 === n && (t = t.slice(1)), i.s = 1), er.test(t) ? Mr(i, t) : Zr(i, t)
          }
          if (o.prototype = ur, o.ROUND_UP = 0, o.ROUND_DOWN = 1, o.ROUND_CEIL = 2, o.ROUND_FLOOR = 3, o.ROUND_HALF_UP = 4, o.ROUND_HALF_DOWN = 5, o.ROUND_HALF_EVEN = 6, o.ROUND_HALF_CEIL = 7, o.ROUND_HALF_FLOOR = 8, o.EUCLID = 9, o.config = o.set = Pr, o.clone = t, o.isDecimal = $r, o.abs = Jr, o.acos = Ar, o.acosh = Sr, o.add = Or, o.asin = Cr, o.asinh = Xr, o.atan = Ir, o.atanh = Br, o.atan2 = Tr, o.cbrt = jr, o.ceil = Dr, o.cos = qr, o.cosh = Rr, o.div = Ur, o.exp = Lr, o.floor = Hr, o.hypot = Vr, o.ln = Kr, o.log = Qr, o.log10 = rn, o.log2 = tn, o.max = nn, o.min = en, o.mod = on, o.mul = an, o.pow = un, o.random = sn, o.round = cn, o.sign = fn, o.sin = ln, o.sinh = hn, o.sqrt = dn, o.sub = pn, o.tan = mn, o.tanh = wn, o.trunc = vn, void 0 === r && (r = {}), r && !0 !== r.defaults)
               for (i = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"], n = 0; n < i.length;) r.hasOwnProperty(e = i[n++]) || (r[e] = this[e]);
          return o.config(r), o
     }(Rt);
     Pt = new gn(Pt), qt = new gn(qt);
     var yn = Mt("BigNumber", ["?on", "config"], (t => {
               var {
                    on: r,
                    config: n
               } = t, e = gn.clone({
                    precision: n.precision,
                    modulo: 9
               });
               return e.prototype.type = "BigNumber", e.prototype.isBigNumber = !0, e.prototype.toJSON = function () {
                    return {
                         mathjs: "BigNumber",
                         value: this.toString()
                    }
               }, e.fromJSON = function (t) {
                    return new e(t.value)
               }, r && r("config", (function (t, r) {
                    t.precision !== r.precision && e.config({
                         precision: t.precision
                    })
               })), e
          }), {
               isClass: !0
          }),
          bn = {
               exports: {}
          };
     /**
      * @license Complex.js v2.0.13 12/05/2020
      *
      * Copyright (c) 2020, Robert Eisele (robert@xarg.org)
      * Dual licensed under the MIT or GPL Version 2 licenses.
      **/
     ! function (t, r) {
          ! function (r) {
               var n = function (t) {
                         return .5 * (Math.exp(t) + Math.exp(-t))
                    },
                    e = function (t) {
                         return .5 * (Math.exp(t) - Math.exp(-t))
                    },
                    i = function () {
                         throw SyntaxError("Invalid Param")
                    };

               function o(t, r) {
                    var n = Math.abs(t),
                         e = Math.abs(r);
                    return 0 === t ? Math.log(e) : 0 === r ? Math.log(n) : n < 3e3 && e < 3e3 ? .5 * Math.log(t * t + r * r) : Math.log(t / Math.cos(Math.atan2(r, t)))
               }

               function a(t, r) {
                    if (!(this instanceof a)) return new a(t, r);
                    var n = function (t, r) {
                         var n = {
                              re: 0,
                              im: 0
                         };
                         if (null == t) n.re = n.im = 0;
                         else if (void 0 !== r) n.re = t, n.im = r;
                         else switch (typeof t) {
                              case "object":
                                   if ("im" in t && "re" in t) n.re = t.re, n.im = t.im;
                                   else if ("abs" in t && "arg" in t) {
                                        if (!Number.isFinite(t.abs) && Number.isFinite(t.arg)) return a.INFINITY;
                                        n.re = t.abs * Math.cos(t.arg), n.im = t.abs * Math.sin(t.arg)
                                   } else if ("r" in t && "phi" in t) {
                                        if (!Number.isFinite(t.r) && Number.isFinite(t.phi)) return a.INFINITY;
                                        n.re = t.r * Math.cos(t.phi), n.im = t.r * Math.sin(t.phi)
                                   } else 2 === t.length ? (n.re = t[0], n.im = t[1]) : i();
                                   break;
                              case "string":
                                   n.im = n.re = 0;
                                   var e = t.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g),
                                        o = 1,
                                        u = 0;
                                   null === e && i();
                                   for (var s = 0; s < e.length; s++) {
                                        var c = e[s];
                                        " " === c || "\t" === c || "\n" === c || ("+" === c ? o++ : "-" === c ? u++ : "i" === c || "I" === c ? (o + u === 0 && i(), " " === e[s + 1] || isNaN(e[s + 1]) ? n.im += parseFloat((u % 2 ? "-" : "") + "1") : (n.im += parseFloat((u % 2 ? "-" : "") + e[s + 1]), s++), o = u = 0) : ((o + u === 0 || isNaN(c)) && i(), "i" === e[s + 1] || "I" === e[s + 1] ? (n.im += parseFloat((u % 2 ? "-" : "") + c), s++) : n.re += parseFloat((u % 2 ? "-" : "") + c), o = u = 0))
                                   }
                                   o + u > 0 && i();
                                   break;
                              case "number":
                                   n.im = 0, n.re = t;
                                   break;
                              default:
                                   i()
                         }
                         return isNaN(n.re) || isNaN(n.im), n
                    }(t, r);
                    this.re = n.re, this.im = n.im
               }
               a.prototype = {
                    re: 0,
                    im: 0,
                    sign: function () {
                         var t = this.abs();
                         return new a(this.re / t, this.im / t)
                    },
                    add: function (t, r) {
                         var n = new a(t, r);
                         return this.isInfinite() && n.isInfinite() ? a.NAN : this.isInfinite() || n.isInfinite() ? a.INFINITY : new a(this.re + n.re, this.im + n.im)
                    },
                    sub: function (t, r) {
                         var n = new a(t, r);
                         return this.isInfinite() && n.isInfinite() ? a.NAN : this.isInfinite() || n.isInfinite() ? a.INFINITY : new a(this.re - n.re, this.im - n.im)
                    },
                    mul: function (t, r) {
                         var n = new a(t, r);
                         return this.isInfinite() && n.isZero() || this.isZero() && n.isInfinite() ? a.NAN : this.isInfinite() || n.isInfinite() ? a.INFINITY : 0 === n.im && 0 === this.im ? new a(this.re * n.re, 0) : new a(this.re * n.re - this.im * n.im, this.re * n.im + this.im * n.re)
                    },
                    div: function (t, r) {
                         var n = new a(t, r);
                         if (this.isZero() && n.isZero() || this.isInfinite() && n.isInfinite()) return a.NAN;
                         if (this.isInfinite() || n.isZero()) return a.INFINITY;
                         if (this.isZero() || n.isInfinite()) return a.ZERO;
                         t = this.re, r = this.im;
                         var e, i, o = n.re,
                              u = n.im;
                         return 0 === u ? new a(t / o, r / o) : Math.abs(o) < Math.abs(u) ? new a((t * (i = o / u) + r) / (e = o * i + u), (r * i - t) / e) : new a((t + r * (i = u / o)) / (e = u * i + o), (r - t * i) / e)
                    },
                    pow: function (t, r) {
                         var n = new a(t, r);
                         if (t = this.re, r = this.im, n.isZero()) return a.ONE;
                         if (0 === n.im) {
                              if (0 === r && t > 0) return new a(Math.pow(t, n.re), 0);
                              if (0 === t) switch ((n.re % 4 + 4) % 4) {
                                   case 0:
                                        return new a(Math.pow(r, n.re), 0);
                                   case 1:
                                        return new a(0, Math.pow(r, n.re));
                                   case 2:
                                        return new a(-Math.pow(r, n.re), 0);
                                   case 3:
                                        return new a(0, -Math.pow(r, n.re))
                              }
                         }
                         if (0 === t && 0 === r && n.re > 0 && n.im >= 0) return a.ZERO;
                         var e = Math.atan2(r, t),
                              i = o(t, r);
                         return t = Math.exp(n.re * i - n.im * e), r = n.im * i + n.re * e, new a(t * Math.cos(r), t * Math.sin(r))
                    },
                    sqrt: function () {
                         var t, r, n = this.re,
                              e = this.im,
                              i = this.abs();
                         if (n >= 0) {
                              if (0 === e) return new a(Math.sqrt(n), 0);
                              t = .5 * Math.sqrt(2 * (i + n))
                         } else t = Math.abs(e) / Math.sqrt(2 * (i - n));
                         return r = n <= 0 ? .5 * Math.sqrt(2 * (i - n)) : Math.abs(e) / Math.sqrt(2 * (i + n)), new a(t, e < 0 ? -r : r)
                    },
                    exp: function () {
                         var t = Math.exp(this.re);
                         return this.im, new a(t * Math.cos(this.im), t * Math.sin(this.im))
                    },
                    expm1: function () {
                         var t = this.re,
                              r = this.im;
                         return new a(Math.expm1(t) * Math.cos(r) + function (t) {
                              var r = Math.PI / 4;
                              if (t < -r || t > r) return Math.cos(t) - 1;
                              var n = t * t;
                              return n * (n * (1 / 24 + n * (-1 / 720 + n * (1 / 40320 + n * (-1 / 3628800 + n * (1 / 4790014600 + n * (-1 / 87178291200 + n * (1 / 20922789888e3))))))) - .5)
                         }(r), Math.exp(t) * Math.sin(r))
                    },
                    log: function () {
                         var t = this.re,
                              r = this.im;
                         return new a(o(t, r), Math.atan2(r, t))
                    },
                    abs: function () {
                         return t = this.re, r = this.im, n = Math.abs(t), e = Math.abs(r), n < 3e3 && e < 3e3 ? Math.sqrt(n * n + e * e) : (n < e ? (n = e, e = t / r) : e = r / t, n * Math.sqrt(1 + e * e));
                         var t, r, n, e
                    },
                    arg: function () {
                         return Math.atan2(this.im, this.re)
                    },
                    sin: function () {
                         var t = this.re,
                              r = this.im;
                         return new a(Math.sin(t) * n(r), Math.cos(t) * e(r))
                    },
                    cos: function () {
                         var t = this.re,
                              r = this.im;
                         return new a(Math.cos(t) * n(r), -Math.sin(t) * e(r))
                    },
                    tan: function () {
                         var t = 2 * this.re,
                              r = 2 * this.im,
                              i = Math.cos(t) + n(r);
                         return new a(Math.sin(t) / i, e(r) / i)
                    },
                    cot: function () {
                         var t = 2 * this.re,
                              r = 2 * this.im,
                              i = Math.cos(t) - n(r);
                         return new a(-Math.sin(t) / i, e(r) / i)
                    },
                    sec: function () {
                         var t = this.re,
                              r = this.im,
                              i = .5 * n(2 * r) + .5 * Math.cos(2 * t);
                         return new a(Math.cos(t) * n(r) / i, Math.sin(t) * e(r) / i)
                    },
                    csc: function () {
                         var t = this.re,
                              r = this.im,
                              i = .5 * n(2 * r) - .5 * Math.cos(2 * t);
                         return new a(Math.sin(t) * n(r) / i, -Math.cos(t) * e(r) / i)
                    },
                    asin: function () {
                         var t = this.re,
                              r = this.im,
                              n = new a(r * r - t * t + 1, -2 * t * r).sqrt(),
                              e = new a(n.re - r, n.im + t).log();
                         return new a(e.im, -e.re)
                    },
                    acos: function () {
                         var t = this.re,
                              r = this.im,
                              n = new a(r * r - t * t + 1, -2 * t * r).sqrt(),
                              e = new a(n.re - r, n.im + t).log();
                         return new a(Math.PI / 2 - e.im, e.re)
                    },
                    atan: function () {
                         var t = this.re,
                              r = this.im;
                         if (0 === t) {
                              if (1 === r) return new a(0, 1 / 0);
                              if (-1 === r) return new a(0, -1 / 0)
                         }
                         var n = t * t + (1 - r) * (1 - r),
                              e = new a((1 - r * r - t * t) / n, -2 * t / n).log();
                         return new a(-.5 * e.im, .5 * e.re)
                    },
                    acot: function () {
                         var t = this.re,
                              r = this.im;
                         if (0 === r) return new a(Math.atan2(1, t), 0);
                         var n = t * t + r * r;
                         return 0 !== n ? new a(t / n, -r / n).atan() : new a(0 !== t ? t / 0 : 0, 0 !== r ? -r / 0 : 0).atan()
                    },
                    asec: function () {
                         var t = this.re,
                              r = this.im;
                         if (0 === t && 0 === r) return new a(0, 1 / 0);
                         var n = t * t + r * r;
                         return 0 !== n ? new a(t / n, -r / n).acos() : new a(0 !== t ? t / 0 : 0, 0 !== r ? -r / 0 : 0).acos()
                    },
                    acsc: function () {
                         var t = this.re,
                              r = this.im;
                         if (0 === t && 0 === r) return new a(Math.PI / 2, 1 / 0);
                         var n = t * t + r * r;
                         return 0 !== n ? new a(t / n, -r / n).asin() : new a(0 !== t ? t / 0 : 0, 0 !== r ? -r / 0 : 0).asin()
                    },
                    sinh: function () {
                         var t = this.re,
                              r = this.im;
                         return new a(e(t) * Math.cos(r), n(t) * Math.sin(r))
                    },
                    cosh: function () {
                         var t = this.re,
                              r = this.im;
                         return new a(n(t) * Math.cos(r), e(t) * Math.sin(r))
                    },
                    tanh: function () {
                         var t = 2 * this.re,
                              r = 2 * this.im,
                              i = n(t) + Math.cos(r);
                         return new a(e(t) / i, Math.sin(r) / i)
                    },
                    coth: function () {
                         var t = 2 * this.re,
                              r = 2 * this.im,
                              i = n(t) - Math.cos(r);
                         return new a(e(t) / i, -Math.sin(r) / i)
                    },
                    csch: function () {
                         var t = this.re,
                              r = this.im,
                              i = Math.cos(2 * r) - n(2 * t);
                         return new a(-2 * e(t) * Math.cos(r) / i, 2 * n(t) * Math.sin(r) / i)
                    },
                    sech: function () {
                         var t = this.re,
                              r = this.im,
                              i = Math.cos(2 * r) + n(2 * t);
                         return new a(2 * n(t) * Math.cos(r) / i, -2 * e(t) * Math.sin(r) / i)
                    },
                    asinh: function () {
                         var t = this.im;
                         this.im = -this.re, this.re = t;
                         var r = this.asin();
                         return this.re = -this.im, this.im = t, t = r.re, r.re = -r.im, r.im = t, r
                    },
                    acosh: function () {
                         var t = this.acos();
                         if (t.im <= 0) {
                              var r = t.re;
                              t.re = -t.im, t.im = r
                         } else {
                              r = t.im;
                              t.im = -t.re, t.re = r
                         }
                         return t
                    },
                    atanh: function () {
                         var t = this.re,
                              r = this.im,
                              n = t > 1 && 0 === r,
                              e = 1 - t,
                              i = 1 + t,
                              u = e * e + r * r,
                              s = 0 !== u ? new a((i * e - r * r) / u, (r * e + i * r) / u) : new a(-1 !== t ? t / 0 : 0, 0 !== r ? r / 0 : 0),
                              c = s.re;
                         return s.re = o(s.re, s.im) / 2, s.im = Math.atan2(s.im, c) / 2, n && (s.im = -s.im), s
                    },
                    acoth: function () {
                         var t = this.re,
                              r = this.im;
                         if (0 === t && 0 === r) return new a(0, Math.PI / 2);
                         var n = t * t + r * r;
                         return 0 !== n ? new a(t / n, -r / n).atanh() : new a(0 !== t ? t / 0 : 0, 0 !== r ? -r / 0 : 0).atanh()
                    },
                    acsch: function () {
                         var t = this.re,
                              r = this.im;
                         if (0 === r) return new a(0 !== t ? Math.log(t + Math.sqrt(t * t + 1)) : 1 / 0, 0);
                         var n = t * t + r * r;
                         return 0 !== n ? new a(t / n, -r / n).asinh() : new a(0 !== t ? t / 0 : 0, 0 !== r ? -r / 0 : 0).asinh()
                    },
                    asech: function () {
                         var t = this.re,
                              r = this.im;
                         if (this.isZero()) return a.INFINITY;
                         var n = t * t + r * r;
                         return 0 !== n ? new a(t / n, -r / n).acosh() : new a(0 !== t ? t / 0 : 0, 0 !== r ? -r / 0 : 0).acosh()
                    },
                    inverse: function () {
                         if (this.isZero()) return a.INFINITY;
                         if (this.isInfinite()) return a.ZERO;
                         var t = this.re,
                              r = this.im,
                              n = t * t + r * r;
                         return new a(t / n, -r / n)
                    },
                    conjugate: function () {
                         return new a(this.re, -this.im)
                    },
                    neg: function () {
                         return new a(-this.re, -this.im)
                    },
                    ceil: function (t) {
                         return t = Math.pow(10, t || 0), new a(Math.ceil(this.re * t) / t, Math.ceil(this.im * t) / t)
                    },
                    floor: function (t) {
                         return t = Math.pow(10, t || 0), new a(Math.floor(this.re * t) / t, Math.floor(this.im * t) / t)
                    },
                    round: function (t) {
                         return t = Math.pow(10, t || 0), new a(Math.round(this.re * t) / t, Math.round(this.im * t) / t)
                    },
                    equals: function (t, r) {
                         var n = new a(t, r);
                         return Math.abs(n.re - this.re) <= a.EPSILON && Math.abs(n.im - this.im) <= a.EPSILON
                    },
                    clone: function () {
                         return new a(this.re, this.im)
                    },
                    toString: function () {
                         var t = this.re,
                              r = this.im,
                              n = "";
                         return this.isNaN() ? "NaN" : this.isInfinite() ? "Infinity" : (Math.abs(t) < a.EPSILON && (t = 0), Math.abs(r) < a.EPSILON && (r = 0), 0 === r ? n + t : (0 !== t ? (n += t, n += " ", r < 0 ? (r = -r, n += "-") : n += "+", n += " ") : r < 0 && (r = -r, n += "-"), 1 !== r && (n += r), n + "i"))
                    },
                    toVector: function () {
                         return [this.re, this.im]
                    },
                    valueOf: function () {
                         return 0 === this.im ? this.re : null
                    },
                    isNaN: function () {
                         return isNaN(this.re) || isNaN(this.im)
                    },
                    isZero: function () {
                         return 0 === this.im && 0 === this.re
                    },
                    isFinite: function () {
                         return isFinite(this.re) && isFinite(this.im)
                    },
                    isInfinite: function () {
                         return !(this.isNaN() || this.isFinite())
                    }
               }, a.ZERO = new a(0, 0), a.ONE = new a(1, 0), a.I = new a(0, 1), a.PI = new a(Math.PI, 0), a.E = new a(Math.E, 0), a.INFINITY = new a(1 / 0, 1 / 0), a.NAN = new a(NaN, NaN), a.EPSILON = 1e-15, Object.defineProperty(a, "__esModule", {
                    value: !0
               }), a.default = a, a.Complex = a, t.exports = a
          }()
     }(bn);
     var xn = L(bn.exports),
          Nn = Mt("Complex", [], (() => (xn.prototype.type = "Complex", xn.prototype.isComplex = !0, xn.prototype.toJSON = function () {
               return {
                    mathjs: "Complex",
                    re: this.re,
                    im: this.im
               }
          }, xn.prototype.toPolar = function () {
               return {
                    r: this.abs(),
                    phi: this.arg()
               }
          }, xn.prototype.format = function (t) {
               var r = this.im,
                    n = this.re,
                    e = Q(this.re, t),
                    i = Q(this.im, t),
                    a = o(t) ? t : t ? t.precision : null;
               if (null !== a) {
                    var u = Math.pow(10, -a);
                    Math.abs(n / r) < u && (n = 0), Math.abs(r / n) < u && (r = 0)
               }
               return 0 === r ? e : 0 === n ? 1 === r ? "i" : -1 === r ? "-i" : i + "i" : r < 0 ? -1 === r ? e + " - i" : e + " - " + i.substring(1) + "i" : 1 === r ? e + " + i" : e + " + " + i + "i"
          }, xn.fromPolar = function (t) {
               switch (arguments.length) {
                    case 1:
                         var r = arguments[0];
                         if ("object" == typeof r) return xn(r);
                         throw new TypeError("Input has to be an object with r and phi keys.");
                    case 2:
                         var n = arguments[0],
                              e = arguments[1];
                         if (o(n)) {
                              if (c(e) && e.hasBase("ANGLE") && (e = e.toNumber("rad")), o(e)) return new xn({
                                   r: n,
                                   phi: e
                              });
                              throw new TypeError("Phi is not a number nor an angle unit.")
                         }
                         throw new TypeError("Radius r is not a number.");
                    default:
                         throw new SyntaxError("Wrong number of arguments in function fromPolar")
               }
          }, xn.prototype.valueOf = xn.prototype.toString, xn.fromJSON = function (t) {
               return new xn(t)
          }, xn.compare = function (t, r) {
               return t.re > r.re ? 1 : t.re < r.re ? -1 : t.im > r.im ? 1 : t.im < r.im ? -1 : 0
          }, xn)), {
               isClass: !0
          }),
          zn = {
               exports: {}
          };
     /**
      * @license Fraction.js v4.1.1 23/05/2021
      * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
      *
      * Copyright (c) 2021, Robert Eisele (robert@xarg.org)
      * Dual licensed under the MIT or GPL Version 2 licenses.
      **/
     ! function (t, r) {
          ! function (r) {
               var n = {
                    s: 1,
                    n: 0,
                    d: 1
               };

               function e(t) {
                    function r() {
                         var r = Error.apply(this, arguments);
                         r.name = this.name = t, this.stack = r.stack, this.message = r.message
                    }

                    function n() {}
                    return n.prototype = Error.prototype, r.prototype = new n, r
               }
               var i = l.DivisionByZero = e("DivisionByZero"),
                    o = l.InvalidParameter = e("InvalidParameter");

               function a(t, r) {
                    return isNaN(t = parseInt(t, 10)) && u(), t * r
               }

               function u() {
                    throw new o
               }

               function s(t) {
                    for (var r = {}, n = t, e = 2, i = 4; i <= n;) {
                         for (; n % e == 0;) n /= e, r[e] = (r[e] || 0) + 1;
                         i += 1 + 2 * e++
                    }
                    return n !== t ? n > 1 && (r[n] = (r[n] || 0) + 1) : r[t] = (r[t] || 0) + 1, r
               }
               var c = function (t, r) {
                    var e, o = 0,
                         s = 1,
                         c = 1,
                         f = 0,
                         l = 0,
                         h = 0,
                         d = 1,
                         p = 1,
                         m = 0,
                         w = 1,
                         v = 1,
                         g = 1,
                         y = 1e7;
                    if (null == t);
                    else if (void 0 !== r) c = (o = t) * (s = r);
                    else switch (typeof t) {
                         case "object":
                              "d" in t && "n" in t ? (o = t.n, s = t.d, "s" in t && (o *= t.s)) : 0 in t ? (o = t[0], 1 in t && (s = t[1])) : u(), c = o * s;
                              break;
                         case "number":
                              if (t < 0 && (c = t, t = -t), t % 1 == 0) o = t;
                              else if (t > 0) {
                                   for (t >= 1 && (t /= p = Math.pow(10, Math.floor(1 + Math.log(t) / Math.LN10))); w <= y && g <= y;) {
                                        if (t === (e = (m + v) / (w + g))) {
                                             w + g <= y ? (o = m + v, s = w + g) : g > w ? (o = v, s = g) : (o = m, s = w);
                                             break
                                        }
                                        t > e ? (m += v, w += g) : (v += m, g += w), w > y ? (o = v, s = g) : (o = m, s = w)
                                   }
                                   o *= p
                              } else(isNaN(t) || isNaN(r)) && (s = o = NaN);
                              break;
                         case "string":
                              if (null === (w = t.match(/\d+|./g)) && u(), "-" === w[m] ? (c = -1, m++) : "+" === w[m] && m++, w.length === m + 1 ? l = a(w[m++], c) : "." === w[m + 1] || "." === w[m] ? ("." !== w[m] && (f = a(w[m++], c)), (++m + 1 === w.length || "(" === w[m + 1] && ")" === w[m + 3] || "'" === w[m + 1] && "'" === w[m + 3]) && (l = a(w[m], c), d = Math.pow(10, w[m].length), m++), ("(" === w[m] && ")" === w[m + 2] || "'" === w[m] && "'" === w[m + 2]) && (h = a(w[m + 1], c), p = Math.pow(10, w[m + 1].length) - 1, m += 3)) : "/" === w[m + 1] || ":" === w[m + 1] ? (l = a(w[m], c), d = a(w[m + 2], 1), m += 3) : "/" === w[m + 3] && " " === w[m + 1] && (f = a(w[m], c), l = a(w[m + 2], c), d = a(w[m + 4], 1), m += 5), w.length <= m) {
                                   c = o = h + (s = d * p) * f + p * l;
                                   break
                              }
                              default:
                                   u()
                    }
                    if (0 === s) throw new i;
                    n.s = c < 0 ? -1 : 1, n.n = Math.abs(o), n.d = Math.abs(s)
               };

               function f(t, r) {
                    if (!t) return r;
                    if (!r) return t;
                    for (;;) {
                         if (!(t %= r)) return r;
                         if (!(r %= t)) return t
                    }
               }

               function l(t, r) {
                    if (!(this instanceof l)) return new l(t, r);
                    c(t, r), t = l.REDUCE ? f(n.d, n.n) : 1, this.s = n.s, this.n = n.n / t, this.d = n.d / t
               }
               l.REDUCE = 1, l.prototype = {
                    s: 1,
                    n: 0,
                    d: 1,
                    abs: function () {
                         return new l(this.n, this.d)
                    },
                    neg: function () {
                         return new l(-this.s * this.n, this.d)
                    },
                    add: function (t, r) {
                         return c(t, r), new l(this.s * this.n * n.d + n.s * this.d * n.n, this.d * n.d)
                    },
                    sub: function (t, r) {
                         return c(t, r), new l(this.s * this.n * n.d - n.s * this.d * n.n, this.d * n.d)
                    },
                    mul: function (t, r) {
                         return c(t, r), new l(this.s * n.s * this.n * n.n, this.d * n.d)
                    },
                    div: function (t, r) {
                         return c(t, r), new l(this.s * n.s * this.n * n.d, this.d * n.n)
                    },
                    clone: function () {
                         return new l(this)
                    },
                    mod: function (t, r) {
                         return isNaN(this.n) || isNaN(this.d) ? new l(NaN) : void 0 === t ? new l(this.s * this.n % this.d, 1) : (c(t, r), 0 === n.n && 0 === this.d && l(0, 0), new l(this.s * (n.d * this.n) % (n.n * this.d), n.d * this.d))
                    },
                    gcd: function (t, r) {
                         return c(t, r), new l(f(n.n, this.n) * f(n.d, this.d), n.d * this.d)
                    },
                    lcm: function (t, r) {
                         return c(t, r), 0 === n.n && 0 === this.n ? new l : new l(n.n * this.n, f(n.n, this.n) * f(n.d, this.d))
                    },
                    ceil: function (t) {
                         return t = Math.pow(10, t || 0), isNaN(this.n) || isNaN(this.d) ? new l(NaN) : new l(Math.ceil(t * this.s * this.n / this.d), t)
                    },
                    floor: function (t) {
                         return t = Math.pow(10, t || 0), isNaN(this.n) || isNaN(this.d) ? new l(NaN) : new l(Math.floor(t * this.s * this.n / this.d), t)
                    },
                    round: function (t) {
                         return t = Math.pow(10, t || 0), isNaN(this.n) || isNaN(this.d) ? new l(NaN) : new l(Math.round(t * this.s * this.n / this.d), t)
                    },
                    inverse: function () {
                         return new l(this.s * this.d, this.n)
                    },
                    pow: function (t, r) {
                         if (c(t, r), 1 === n.d) return n.s < 0 ? new l(Math.pow(this.s * this.d, n.n), Math.pow(this.n, n.n)) : new l(Math.pow(this.s * this.n, n.n), Math.pow(this.d, n.n));
                         if (this.s < 0) return null;
                         var e = s(this.n),
                              i = s(this.d),
                              o = 1,
                              a = 1;
                         for (var u in e)
                              if ("1" !== u) {
                                   if ("0" === u) {
                                        o = 0;
                                        break
                                   }
                                   if (e[u] *= n.n, e[u] % n.d != 0) return null;
                                   e[u] /= n.d, o *= Math.pow(u, e[u])
                              } for (var u in i)
                              if ("1" !== u) {
                                   if (i[u] *= n.n, i[u] % n.d != 0) return null;
                                   i[u] /= n.d, a *= Math.pow(u, i[u])
                              } return n.s < 0 ? new l(a, o) : new l(o, a)
                    },
                    equals: function (t, r) {
                         return c(t, r), this.s * this.n * n.d == n.s * n.n * this.d
                    },
                    compare: function (t, r) {
                         c(t, r);
                         var e = this.s * this.n * n.d - n.s * n.n * this.d;
                         return (0 < e) - (e < 0)
                    },
                    simplify: function (t) {
                         if (isNaN(this.n) || isNaN(this.d)) return this;
                         var r = this.abs().toContinued();

                         function n(t) {
                              return 1 === t.length ? new l(t[0]) : n(t.slice(1)).inverse().add(t[0])
                         }
                         t = t || .001;
                         for (var e = 0; e < r.length; e++) {
                              var i = n(r.slice(0, e + 1));
                              if (i.sub(this.abs()).abs().valueOf() < t) return i.mul(this.s)
                         }
                         return this
                    },
                    divisible: function (t, r) {
                         return c(t, r), !(!(n.n * this.d) || this.n * n.d % (n.n * this.d))
                    },
                    valueOf: function () {
                         return this.s * this.n / this.d
                    },
                    toFraction: function (t) {
                         var r, n = "",
                              e = this.n,
                              i = this.d;
                         return this.s < 0 && (n += "-"), 1 === i ? n += e : (t && (r = Math.floor(e / i)) > 0 && (n += r, n += " ", e %= i), n += e, n += "/", n += i), n
                    },
                    toLatex: function (t) {
                         var r, n = "",
                              e = this.n,
                              i = this.d;
                         return this.s < 0 && (n += "-"), 1 === i ? n += e : (t && (r = Math.floor(e / i)) > 0 && (n += r, e %= i), n += "\\frac{", n += e, n += "}{", n += i, n += "}"), n
                    },
                    toContinued: function () {
                         var t, r = this.n,
                              n = this.d,
                              e = [];
                         if (isNaN(r) || isNaN(n)) return e;
                         do {
                              e.push(Math.floor(r / n)), t = r % n, r = n, n = t
                         } while (1 !== r);
                         return e
                    },
                    toString: function (t) {
                         var r, n = this.n,
                              e = this.d;
                         if (isNaN(n) || isNaN(e)) return "NaN";
                         l.REDUCE || (n /= r = f(n, e), e /= r), t = t || 15;
                         var i = function (t, r) {
                                   for (; r % 2 == 0; r /= 2);
                                   for (; r % 5 == 0; r /= 5);
                                   if (1 === r) return 0;
                                   for (var n = 10 % r, e = 1; 1 !== n; e++)
                                        if (n = 10 * n % r, e > 2e3) return 0;
                                   return e
                              }(0, e),
                              o = function (t, r, n) {
                                   for (var e = 1, i = function (t, r, n) {
                                             for (var e = 1; r > 0; t = t * t % n, r >>= 1) 1 & r && (e = e * t % n);
                                             return e
                                        }(10, n, r), o = 0; o < 300; o++) {
                                        if (e === i) return o;
                                        e = 10 * e % r, i = 10 * i % r
                                   }
                                   return 0
                              }(0, e, i),
                              a = -1 === this.s ? "-" : "";
                         if (a += n / e | 0, n %= e, (n *= 10) && (a += "."), i) {
                              for (var u = o; u--;) a += n / e | 0, n %= e, n *= 10;
                              a += "(";
                              for (u = i; u--;) a += n / e | 0, n %= e, n *= 10;
                              a += ")"
                         } else
                              for (u = t; n && u--;) a += n / e | 0, n %= e, n *= 10;
                         return a
                    }
               }, Object.defineProperty(l, "__esModule", {
                    value: !0
               }), l.default = l, l.Fraction = l, t.exports = l
          }()
     }(zn);
     var _n = L(zn.exports),
          kn = Mt("Fraction", [], (() => (_n.prototype.type = "Fraction", _n.prototype.isFraction = !0, _n.prototype.toJSON = function () {
               return {
                    mathjs: "Fraction",
                    n: this.s * this.n,
                    d: this.d
               }
          }, _n.fromJSON = function (t) {
               return new _n(t)
          }, _n)), {
               isClass: !0
          }),
          Mn = Mt("Matrix", [], (() => {
               function t() {
                    if (!(this instanceof t)) throw new SyntaxError("Constructor must be called with the new operator")
               }
               return t.prototype.type = "Matrix", t.prototype.isMatrix = !0, t.prototype.storage = function () {
                    throw new Error("Cannot invoke storage on a Matrix interface")
               }, t.prototype.datatype = function () {
                    throw new Error("Cannot invoke datatype on a Matrix interface")
               }, t.prototype.create = function (t, r) {
                    throw new Error("Cannot invoke create on a Matrix interface")
               }, t.prototype.subset = function (t, r, n) {
                    throw new Error("Cannot invoke subset on a Matrix interface")
               }, t.prototype.get = function (t) {
                    throw new Error("Cannot invoke get on a Matrix interface")
               }, t.prototype.set = function (t, r, n) {
                    throw new Error("Cannot invoke set on a Matrix interface")
               }, t.prototype.resize = function (t, r) {
                    throw new Error("Cannot invoke resize on a Matrix interface")
               }, t.prototype.reshape = function (t, r) {
                    throw new Error("Cannot invoke reshape on a Matrix interface")
               }, t.prototype.clone = function () {
                    throw new Error("Cannot invoke clone on a Matrix interface")
               }, t.prototype.size = function () {
                    throw new Error("Cannot invoke size on a Matrix interface")
               }, t.prototype.map = function (t, r) {
                    throw new Error("Cannot invoke map on a Matrix interface")
               }, t.prototype.forEach = function (t) {
                    throw new Error("Cannot invoke forEach on a Matrix interface")
               }, t.prototype[Symbol.iterator] = function () {
                    throw new Error("Cannot iterate a Matrix interface")
               }, t.prototype.toArray = function () {
                    throw new Error("Cannot invoke toArray on a Matrix interface")
               }, t.prototype.valueOf = function () {
                    throw new Error("Cannot invoke valueOf on a Matrix interface")
               }, t.prototype.format = function (t) {
                    throw new Error("Cannot invoke format on a Matrix interface")
               }, t.prototype.toString = function () {
                    throw new Error("Cannot invoke toString on a Matrix interface")
               }, t
          }), {
               isClass: !0
          }),
          Zn = Mt("DenseMatrix", ["Matrix"], (t => {
               var {
                    Matrix: r
               } = t;

               function n(t, r) {
                    if (!(this instanceof n)) throw new SyntaxError("Constructor must be called with the new operator");
                    if (r && !f(r)) throw new Error("Invalid datatype: " + r);
                    if (h(t)) "DenseMatrix" === t.type ? (this._data = P(t._data), this._size = P(t._size), this._datatype = r || t._datatype) : (this._data = t.toArray(), this._size = t.size(), this._datatype = r || t._datatype);
                    else if (t && l(t.data) && l(t.size)) this._data = t.data, this._size = t.size, wt(this._data, this._size), this._datatype = r || t.datatype;
                    else if (l(t)) this._data = m(t), this._size = pt(this._data), wt(this._data, this._size), this._datatype = r;
                    else {
                         if (t) throw new TypeError("Unsupported type of data (" + D(t) + ")");
                         this._data = [], this._size = [0], this._datatype = r
                    }
               }

               function e(t, r) {
                    if (!v(r)) throw new TypeError("Invalid index");
                    if (r.isScalar()) return t.get(r.min());
                    var e = r.size();
                    if (e.length !== t._size.length) throw new ht(e.length, t._size.length);
                    for (var o = r.min(), a = r.max(), u = 0, s = t._size.length; u < s; u++) vt(o[u], t._size[u]), vt(a[u], t._size[u]);
                    return new n(i(t._data, r, e.length, 0), t._datatype)
               }

               function i(t, r, n, e) {
                    var o = e === n - 1,
                         a = r.dimension(e);
                    return o ? a.map((function (r) {
                         return vt(r, t.length), t[r]
                    })).valueOf() : a.map((function (o) {
                         return vt(o, t.length), i(t[o], r, n, e + 1)
                    })).valueOf()
               }

               function u(t, r, n, e) {
                    if (!r || !0 !== r.isIndex) throw new TypeError("Invalid index");
                    var i, o = r.size(),
                         a = r.isScalar();
                    if (h(n) ? (i = n.size(), n = n.valueOf()) : i = pt(n), a) {
                         if (0 !== i.length) throw new TypeError("Scalar expected");
                         t.set(r.min(), n, e)
                    } else {
                         if (o.length < t._size.length) throw new ht(o.length, t._size.length, "<");
                         if (i.length < o.length) {
                              for (var u = 0, c = 0; 1 === o[u] && 1 === i[u];) u++;
                              for (; 1 === o[u];) c++, u++;
                              n = zt(n, o.length, c, i)
                         }
                         if (!q(o, i)) throw new ht(o, i, ">");
                         p(t, r.max().map((function (t) {
                              return t + 1
                         })), e);
                         var f = o.length;
                         s(t._data, r, n, f, 0)
                    }
                    return t
               }

               function s(t, r, n, e, i) {
                    var o = i === e - 1,
                         a = r.dimension(i);
                    o ? a.forEach((function (r, e) {
                         vt(r), t[r] = n[e[0]]
                    })) : a.forEach((function (o, a) {
                         vt(o), s(t[o], r, n[a[0]], e, i + 1)
                    }))
               }

               function c(t, r, n) {
                    if (0 === r.length) {
                         for (var e = t._data; l(e);) e = e[0];
                         return e
                    }
                    return t._size = r.slice(0), t._data = gt(t._data, t._size, n), t
               }

               function p(t, r, n) {
                    for (var e = t._size.slice(0), i = !1; e.length < r.length;) e.push(0), i = !0;
                    for (var o = 0, a = r.length; o < a; o++) r[o] > e[o] && (e[o] = r[o], i = !0);
                    i && c(t, e, n)
               }

               function m(t) {
                    for (var r = 0, n = t.length; r < n; r++) {
                         var e = t[r];
                         l(e) ? t[r] = m(e) : e && !0 === e.isMatrix && (t[r] = m(e.valueOf()))
                    }
                    return t
               }
               return n.prototype = new r, n.prototype.createDenseMatrix = function (t, r) {
                    return new n(t, r)
               }, n.prototype.type = "DenseMatrix", n.prototype.isDenseMatrix = !0, n.prototype.getDataType = function () {
                    return kt(this._data, D)
               }, n.prototype.storage = function () {
                    return "dense"
               }, n.prototype.datatype = function () {
                    return this._datatype
               }, n.prototype.create = function (t, r) {
                    return new n(t, r)
               }, n.prototype.subset = function (t, r, n) {
                    switch (arguments.length) {
                         case 1:
                              return e(this, t);
                         case 2:
                         case 3:
                              return u(this, t, r, n);
                         default:
                              throw new SyntaxError("Wrong number of arguments")
                    }
               }, n.prototype.get = function (t) {
                    if (!l(t)) throw new TypeError("Array expected");
                    if (t.length !== this._size.length) throw new ht(t.length, this._size.length);
                    for (var r = 0; r < t.length; r++) vt(t[r], this._size[r]);
                    for (var n = this._data, e = 0, i = t.length; e < i; e++) {
                         var o = t[e];
                         vt(o, n.length), n = n[o]
                    }
                    return n
               }, n.prototype.set = function (t, r, n) {
                    if (!l(t)) throw new TypeError("Array expected");
                    if (t.length < this._size.length) throw new ht(t.length, this._size.length, "<");
                    var e, i, o;
                    p(this, t.map((function (t) {
                         return t + 1
                    })), n);
                    var a = this._data;
                    for (e = 0, i = t.length - 1; e < i; e++) vt(o = t[e], a.length), a = a[o];
                    return vt(o = t[t.length - 1], a.length), a[o] = r, this
               }, n.prototype.resize = function (t, r, n) {
                    if (!d(t)) throw new TypeError("Array or Matrix expected");
                    var e = t.valueOf().map((t => Array.isArray(t) && 1 === t.length ? t[0] : t));
                    return c(n ? this.clone() : this, e, r)
               }, n.prototype.reshape = function (t, r) {
                    var n = r ? this.clone() : this;
                    n._data = bt(n._data, t);
                    var e = n._size.reduce(((t, r) => t * r));
                    return n._size = xt(t, e), n
               }, n.prototype.clone = function () {
                    return new n({
                         data: P(this._data),
                         size: P(this._size),
                         datatype: this._datatype
                    })
               }, n.prototype.size = function () {
                    return this._size.slice(0)
               }, n.prototype.map = function (t) {
                    var r = this,
                         e = function n(e, i) {
                              return l(e) ? e.map((function (t, r) {
                                   return n(t, i.concat(r))
                              })) : t(e, i, r)
                         }(this._data, []);
                    return new n(e, void 0 !== this._datatype ? kt(e, D) : void 0)
               }, n.prototype.forEach = function (t) {
                    var r = this;
                    ! function n(e, i) {
                         l(e) ? e.forEach((function (t, r) {
                              n(t, i.concat(r))
                         })) : t(e, i, r)
                    }(this._data, [])
               }, n.prototype[Symbol.iterator] = function* () {
                    yield* function* t(r, n) {
                         if (l(r))
                              for (var e = 0; e < r.length; e++) yield* t(r[e], n.concat(e));
                         else yield {
                              value: r,
                              index: n
                         }
                    }(this._data, [])
               }, n.prototype.rows = function () {
                    var t = [];
                    if (2 !== this.size().length) throw new TypeError("Rows can only be returned for a 2D matrix.");
                    var r = this._data;
                    for (var e of r) t.push(new n([e], this._datatype));
                    return t
               }, n.prototype.columns = function () {
                    var t = this,
                         r = [],
                         e = this.size();
                    if (2 !== e.length) throw new TypeError("Rows can only be returned for a 2D matrix.");
                    for (var i = this._data, o = function (e) {
                              var o = i.map((t => [t[e]]));
                              r.push(new n(o, t._datatype))
                         }, a = 0; a < e[1]; a++) o(a);
                    return r
               }, n.prototype.toArray = function () {
                    return P(this._data)
               }, n.prototype.valueOf = function () {
                    return this._data
               }, n.prototype.format = function (t) {
                    return ft(this._data, t)
               }, n.prototype.toString = function () {
                    return ft(this._data)
               }, n.prototype.toJSON = function () {
                    return {
                         mathjs: "DenseMatrix",
                         data: this._data,
                         size: this._size,
                         datatype: this._datatype
                    }
               }, n.prototype.diagonal = function (t) {
                    if (t) {
                         if (a(t) && (t = t.toNumber()), !o(t) || !$(t)) throw new TypeError("The parameter k must be an integer number")
                    } else t = 0;
                    for (var r = t > 0 ? t : 0, e = t < 0 ? -t : 0, i = this._size[0], u = this._size[1], s = Math.min(i - e, u - r), c = [], f = 0; f < s; f++) c[f] = this._data[f + e][f + r];
                    return new n({
                         data: c,
                         size: [s],
                         datatype: this._datatype
                    })
               }, n.diagonal = function (t, r, e, i) {
                    if (!l(t)) throw new TypeError("Array expected, size parameter");
                    if (2 !== t.length) throw new Error("Only two dimensions matrix are supported");
                    if (t = t.map((function (t) {
                              if (a(t) && (t = t.toNumber()), !o(t) || !$(t) || t < 1) throw new Error("Size values must be positive integers");
                              return t
                         })), e) {
                         if (a(e) && (e = e.toNumber()), !o(e) || !$(e)) throw new TypeError("The parameter k must be an integer number")
                    } else e = 0;
                    var u, s = e > 0 ? e : 0,
                         c = e < 0 ? -e : 0,
                         f = t[0],
                         d = t[1],
                         p = Math.min(f - c, d - s);
                    if (l(r)) {
                         if (r.length !== p) throw new Error("Invalid value array length");
                         u = function (t) {
                              return r[t]
                         }
                    } else if (h(r)) {
                         var m = r.size();
                         if (1 !== m.length || m[0] !== p) throw new Error("Invalid matrix length");
                         u = function (t) {
                              return r.get([t])
                         }
                    } else u = function () {
                         return r
                    };
                    i || (i = a(u(0)) ? u(0).mul(0) : 0);
                    var w = [];
                    if (t.length > 0) {
                         w = gt(w, t, i);
                         for (var v = 0; v < p; v++) w[v + c][v + s] = u(v)
                    }
                    return new n({
                         data: w,
                         size: [f, d]
                    })
               }, n.fromJSON = function (t) {
                    return new n(t)
               }, n.prototype.swapRows = function (t, r) {
                    if (!(o(t) && $(t) && o(r) && $(r))) throw new Error("Row index must be positive integers");
                    if (2 !== this._size.length) throw new Error("Only two dimensional matrix is supported");
                    return vt(t, this._size[0]), vt(r, this._size[0]), n._swapRows(t, r, this._data), this
               }, n._swapRows = function (t, r, n) {
                    var e = n[t];
                    n[t] = n[r], n[r] = e
               }, n
          }), {
               isClass: !0
          });

     function Wn(t, r, n) {
          return t && "function" == typeof t.map ? t.map((function (t) {
               return Wn(t, r)
          })) : r(t)
     }
     var En = "number, number";

     function Fn(t) {
          return Math.abs(t)
     }

     function Yn(t, r) {
          return t + r
     }

     function Gn(t, r) {
          return t * r
     }

     function Jn(t, r) {
          return t * t < 1 && r === 1 / 0 || t * t > 1 && r === -1 / 0 ? 0 : Math.pow(t, r)
     }

     function An(t) {
          var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
          return parseFloat(rt(t, r))
     }
     Fn.signature = "number", Yn.signature = En, Gn.signature = En, Jn.signature = En, An.signature = En;
     var Sn = "equalScalar",
          On = Mt(Sn, ["typed", "config"], (t => {
               var {
                    typed: r,
                    config: n
               } = t;
               return r(Sn, {
                    "boolean, boolean": function (t, r) {
                         return t === r
                    },
                    "number, number": function (t, r) {
                         return at(t, r, n.epsilon)
                    },
                    "BigNumber, BigNumber": function (t, r) {
                         return t.eq(r) || function (t, r, n) {
                              if (null == n) return t.eq(r);
                              if (t.eq(r)) return !0;
                              if (t.isNaN() || r.isNaN()) return !1;
                              if (t.isFinite() && r.isFinite()) {
                                   var e = t.minus(r).abs();
                                   if (e.isZero()) return !0;
                                   var i = t.constructor.max(t.abs(), r.abs());
                                   return e.lte(i.times(n))
                              }
                              return !1
                         }(t, r, n.epsilon)
                    },
                    "Fraction, Fraction": function (t, r) {
                         return t.equals(r)
                    },
                    "Complex, Complex": function (t, r) {
                         return function (t, r, n) {
                              return at(t.re, r.re, n) && at(t.im, r.im, n)
                         }(t, r, n.epsilon)
                    },
                    "Unit, Unit": function (t, r) {
                         if (!t.equalBase(r)) throw new Error("Cannot compare units with different base");
                         return this(t.value, r.value)
                    }
               })
          }));
     Mt(Sn, ["typed", "config"], (t => {
          var {
               typed: r,
               config: n
          } = t;
          return r(Sn, {
               "number, number": function (t, r) {
                    return at(t, r, n.epsilon)
               }
          })
     }));
     var Cn = Mt("SparseMatrix", ["typed", "equalScalar", "Matrix"], (t => {
          var {
               typed: r,
               equalScalar: n,
               Matrix: e
          } = t;

          function i(t, r) {
               if (!(this instanceof i)) throw new SyntaxError("Constructor must be called with the new operator");
               if (r && !f(r)) throw new Error("Invalid datatype: " + r);
               if (h(t)) ! function (t, r, n) {
                    "SparseMatrix" === r.type ? (t._values = r._values ? P(r._values) : void 0, t._index = P(r._index), t._ptr = P(r._ptr), t._size = P(r._size), t._datatype = n || r._datatype) : u(t, r.valueOf(), n || r._datatype)
               }(this, t, r);
               else if (t && l(t.index) && l(t.ptr) && l(t.size)) this._values = t.values, this._index = t.index, this._ptr = t.ptr, this._size = t.size, this._datatype = r || t.datatype;
               else if (l(t)) u(this, t, r);
               else {
                    if (t) throw new TypeError("Unsupported type of data (" + D(t) + ")");
                    this._values = [], this._index = [], this._ptr = [0], this._size = [0, 0], this._datatype = r
               }
          }

          function u(t, e, i) {
               t._values = [], t._index = [], t._ptr = [], t._datatype = i;
               var o = e.length,
                    a = 0,
                    u = n,
                    s = 0;
               if (f(i) && (u = r.find(n, [i, i]) || n, s = r.convert(0, i)), o > 0) {
                    var c = 0;
                    do {
                         t._ptr.push(t._index.length);
                         for (var h = 0; h < o; h++) {
                              var d = e[h];
                              if (l(d)) {
                                   if (0 === c && a < d.length && (a = d.length), c < d.length) {
                                        var p = d[c];
                                        u(p, s) || (t._values.push(p), t._index.push(h))
                                   }
                              } else 0 === c && a < 1 && (a = 1), u(d, s) || (t._values.push(d), t._index.push(h))
                         }
                         c++
                    } while (c < a)
               }
               t._ptr.push(t._index.length), t._size = [o, a]
          }

          function s(t, r) {
               if (!v(r)) throw new TypeError("Invalid index");
               if (r.isScalar()) return t.get(r.min());
               var n, e, o, a, u = r.size();
               if (u.length !== t._size.length) throw new ht(u.length, t._size.length);
               var s = r.min(),
                    c = r.max();
               for (n = 0, e = t._size.length; n < e; n++) vt(s[n], t._size[n]), vt(c[n], t._size[n]);
               var f = t._values,
                    l = t._index,
                    h = t._ptr,
                    d = r.dimension(0),
                    p = r.dimension(1),
                    m = [],
                    w = [];
               d.forEach((function (t, r) {
                    w[t] = r[0], m[t] = !0
               }));
               var g = f ? [] : void 0,
                    y = [],
                    b = [];
               return p.forEach((function (t) {
                    for (b.push(y.length), o = h[t], a = h[t + 1]; o < a; o++) n = l[o], !0 === m[n] && (y.push(w[n]), g && g.push(f[o]))
               })), b.push(y.length), new i({
                    values: g,
                    index: y,
                    ptr: b,
                    size: u,
                    datatype: t._datatype
               })
          }

          function c(t, r, n, e) {
               if (!r || !0 !== r.isIndex) throw new TypeError("Invalid index");
               var i, o = r.size(),
                    a = r.isScalar();
               if (h(n) ? (i = n.size(), n = n.toArray()) : i = pt(n), a) {
                    if (0 !== i.length) throw new TypeError("Scalar expected");
                    t.set(r.min(), n, e)
               } else {
                    if (1 !== o.length && 2 !== o.length) throw new ht(o.length, t._size.length, "<");
                    if (i.length < o.length) {
                         for (var u = 0, s = 0; 1 === o[u] && 1 === i[u];) u++;
                         for (; 1 === o[u];) s++, u++;
                         n = zt(n, o.length, s, i)
                    }
                    if (!q(o, i)) throw new ht(o, i, ">");
                    for (var c = r.min()[0], f = r.min()[1], l = i[0], d = i[1], p = 0; p < l; p++)
                         for (var m = 0; m < d; m++) {
                              var w = n[p][m];
                              t.set([p + c, m + f], w, e)
                         }
               }
               return t
          }

          function p(t, r, n, e) {
               if (n - r == 0) return n;
               for (var i = r; i < n; i++)
                    if (e[i] === t) return i;
               return r
          }

          function m(t, r, n, e, i, o, a) {
               i.splice(t, 0, e), o.splice(t, 0, r);
               for (var u = n + 1; u < a.length; u++) a[u]++
          }

          function w(t, e, i, o) {
               var a = o || 0,
                    u = n,
                    s = 0;
               f(t._datatype) && (u = r.find(n, [t._datatype, t._datatype]) || n, s = r.convert(0, t._datatype), a = r.convert(a, t._datatype));
               var c, l, h, d = !u(a, s),
                    p = t._size[0],
                    m = t._size[1];
               if (i > m) {
                    for (l = m; l < i; l++)
                         if (t._ptr[l] = t._values.length, d)
                              for (c = 0; c < p; c++) t._values.push(a), t._index.push(c);
                    t._ptr[i] = t._values.length
               } else i < m && (t._ptr.splice(i + 1, m - i), t._values.splice(t._ptr[i], t._values.length), t._index.splice(t._ptr[i], t._index.length));
               if (m = i, e > p) {
                    if (d) {
                         var w = 0;
                         for (l = 0; l < m; l++) {
                              t._ptr[l] = t._ptr[l] + w, h = t._ptr[l + 1] + w;
                              var v = 0;
                              for (c = p; c < e; c++, v++) t._values.splice(h + v, 0, a), t._index.splice(h + v, 0, c), w++
                         }
                         t._ptr[m] = t._values.length
                    }
               } else if (e < p) {
                    var g = 0;
                    for (l = 0; l < m; l++) {
                         t._ptr[l] = t._ptr[l] - g;
                         var y = t._ptr[l],
                              b = t._ptr[l + 1] - g;
                         for (h = y; h < b; h++)(c = t._index[h]) > e - 1 && (t._values.splice(h, 1), t._index.splice(h, 1), g++)
                    }
                    t._ptr[l] = t._values.length
               }
               return t._size[0] = e, t._size[1] = i, t
          }

          function g(t, r, n, e, i) {
               var o, a, u = e[0],
                    s = e[1],
                    c = [];
               for (o = 0; o < u; o++)
                    for (c[o] = [], a = 0; a < s; a++) c[o][a] = 0;
               for (a = 0; a < s; a++)
                    for (var f = n[a], l = n[a + 1], h = f; h < l; h++) c[o = r[h]][a] = t ? i ? P(t[h]) : t[h] : 1;
               return c
          }
          return i.prototype = new e, i.prototype.createSparseMatrix = function (t, r) {
               return new i(t, r)
          }, i.prototype.type = "SparseMatrix", i.prototype.isSparseMatrix = !0, i.prototype.getDataType = function () {
               return kt(this._values, D)
          }, i.prototype.storage = function () {
               return "sparse"
          }, i.prototype.datatype = function () {
               return this._datatype
          }, i.prototype.create = function (t, r) {
               return new i(t, r)
          }, i.prototype.density = function () {
               var t = this._size[0],
                    r = this._size[1];
               return 0 !== t && 0 !== r ? this._index.length / (t * r) : 0
          }, i.prototype.subset = function (t, r, n) {
               if (!this._values) throw new Error("Cannot invoke subset on a Pattern only matrix");
               switch (arguments.length) {
                    case 1:
                         return s(this, t);
                    case 2:
                    case 3:
                         return c(this, t, r, n);
                    default:
                         throw new SyntaxError("Wrong number of arguments")
               }
          }, i.prototype.get = function (t) {
               if (!l(t)) throw new TypeError("Array expected");
               if (t.length !== this._size.length) throw new ht(t.length, this._size.length);
               if (!this._values) throw new Error("Cannot invoke get on a Pattern only matrix");
               var r = t[0],
                    n = t[1];
               vt(r, this._size[0]), vt(n, this._size[1]);
               var e = p(r, this._ptr[n], this._ptr[n + 1], this._index);
               return e < this._ptr[n + 1] && this._index[e] === r ? this._values[e] : 0
          }, i.prototype.set = function (t, e, i) {
               if (!l(t)) throw new TypeError("Array expected");
               if (t.length !== this._size.length) throw new ht(t.length, this._size.length);
               if (!this._values) throw new Error("Cannot invoke set on a Pattern only matrix");
               var o = t[0],
                    a = t[1],
                    u = this._size[0],
                    s = this._size[1],
                    c = n,
                    h = 0;
               f(this._datatype) && (c = r.find(n, [this._datatype, this._datatype]) || n, h = r.convert(0, this._datatype)), (o > u - 1 || a > s - 1) && (w(this, Math.max(o + 1, u), Math.max(a + 1, s), i), u = this._size[0], s = this._size[1]), vt(o, u), vt(a, s);
               var d = p(o, this._ptr[a], this._ptr[a + 1], this._index);
               return d < this._ptr[a + 1] && this._index[d] === o ? c(e, h) ? function (t, r, n, e, i) {
                    n.splice(t, 1), e.splice(t, 1);
                    for (var o = r + 1; o < i.length; o++) i[o]--
               }(d, a, this._values, this._index, this._ptr) : this._values[d] = e : m(d, o, a, e, this._values, this._index, this._ptr), this
          }, i.prototype.resize = function (t, r, n) {
               if (!d(t)) throw new TypeError("Array or Matrix expected");
               var e = t.valueOf().map((t => Array.isArray(t) && 1 === t.length ? t[0] : t));
               if (2 !== e.length) throw new Error("Only two dimensions matrix are supported");
               return e.forEach((function (t) {
                    if (!o(t) || !$(t) || t < 0) throw new TypeError("Invalid size, must contain positive integers (size: " + ft(e) + ")")
               })), w(n ? this.clone() : this, e[0], e[1], r)
          }, i.prototype.reshape = function (t, r) {
               if (!l(t)) throw new TypeError("Array expected");
               if (2 !== t.length) throw new Error("Sparse matrices can only be reshaped in two dimensions");
               t.forEach((function (r) {
                    if (!o(r) || !$(r) || r <= -2 || 0 === r) throw new TypeError("Invalid size, must contain positive integers or -1 (size: " + ft(t) + ")")
               }));
               var n = this._size[0] * this._size[1];
               if (n !== (t = xt(t, n))[0] * t[1]) throw new Error("Reshaping sparse matrix will result in the wrong number of elements");
               var e = r ? this.clone() : this;
               if (this._size[0] === t[0] && this._size[1] === t[1]) return e;
               for (var i = [], a = 0; a < e._ptr.length; a++)
                    for (var u = 0; u < e._ptr[a + 1] - e._ptr[a]; u++) i.push(a);
               for (var s = e._values.slice(), c = e._index.slice(), f = 0; f < e._index.length; f++) {
                    var h = c[f],
                         d = i[f],
                         w = h * e._size[1] + d;
                    i[f] = w % t[1], c[f] = Math.floor(w / t[1])
               }
               e._values.length = 0, e._index.length = 0, e._ptr.length = t[1] + 1, e._size = t.slice();
               for (var v = 0; v < e._ptr.length; v++) e._ptr[v] = 0;
               for (var g = 0; g < s.length; g++) {
                    var y = c[g],
                         b = i[g],
                         x = s[g];
                    m(p(y, e._ptr[b], e._ptr[b + 1], e._index), y, b, x, e._values, e._index, e._ptr)
               }
               return e
          }, i.prototype.clone = function () {
               return new i({
                    values: this._values ? P(this._values) : void 0,
                    index: P(this._index),
                    ptr: P(this._ptr),
                    size: P(this._size),
                    datatype: this._datatype
               })
          }, i.prototype.size = function () {
               return this._size.slice(0)
          }, i.prototype.map = function (t, e) {
               if (!this._values) throw new Error("Cannot invoke map on a Pattern only matrix");
               var o = this;
               return function (t, e, o, a, u, s, c) {
                    var l = [],
                         h = [],
                         d = [],
                         p = n,
                         m = 0;
                    f(t._datatype) && (p = r.find(n, [t._datatype, t._datatype]) || n, m = r.convert(0, t._datatype));
                    for (var w = function (t, r, n) {
                              t = s(t, r, n), p(t, m) || (l.push(t), h.push(r))
                         }, v = a; v <= u; v++) {
                         d.push(l.length);
                         var g = t._ptr[v],
                              y = t._ptr[v + 1];
                         if (c)
                              for (var b = g; b < y; b++) {
                                   var x = t._index[b];
                                   x >= e && x <= o && w(t._values[b], x - e, v - a)
                              } else {
                                   for (var N = {}, z = g; z < y; z++) {
                                        N[t._index[z]] = t._values[z]
                                   }
                                   for (var _ = e; _ <= o; _++) {
                                        w(_ in N ? N[_] : 0, _ - e, v - a)
                                   }
                              }
                    }
                    return d.push(l.length), new i({
                         values: l,
                         index: h,
                         ptr: d,
                         size: [o - e + 1, u - a + 1]
                    })
               }(this, 0, this._size[0] - 1, 0, this._size[1] - 1, (function (r, n, e) {
                    return t(r, [n, e], o)
               }), e)
          }, i.prototype.forEach = function (t, r) {
               if (!this._values) throw new Error("Cannot invoke forEach on a Pattern only matrix");
               for (var n = this._size[0], e = this._size[1], i = 0; i < e; i++) {
                    var o = this._ptr[i],
                         a = this._ptr[i + 1];
                    if (r)
                         for (var u = o; u < a; u++) {
                              var s = this._index[u];
                              t(this._values[u], [s, i], this)
                         } else {
                              for (var c = {}, f = o; f < a; f++) {
                                   c[this._index[f]] = this._values[f]
                              }
                              for (var l = 0; l < n; l++) {
                                   t(l in c ? c[l] : 0, [l, i], this)
                              }
                         }
               }
          }, i.prototype[Symbol.iterator] = function* () {
               if (!this._values) throw new Error("Cannot iterate a Pattern only matrix");
               for (var t = this._size[1], r = 0; r < t; r++)
                    for (var n = this._ptr[r], e = this._ptr[r + 1], i = n; i < e; i++) {
                         var o = this._index[i];
                         yield {
                              value: this._values[i],
                              index: [o, r]
                         }
                    }
          }, i.prototype.toArray = function () {
               return g(this._values, this._index, this._ptr, this._size, !0)
          }, i.prototype.valueOf = function () {
               return g(this._values, this._index, this._ptr, this._size, !1)
          }, i.prototype.format = function (t) {
               for (var r = this._size[0], n = this._size[1], e = this.density(), i = "Sparse Matrix [" + ft(r, t) + " x " + ft(n, t) + "] density: " + ft(e, t) + "\n", o = 0; o < n; o++)
                    for (var a = this._ptr[o], u = this._ptr[o + 1], s = a; s < u; s++) {
                         i += "\n    (" + ft(this._index[s], t) + ", " + ft(o, t) + ") ==> " + (this._values ? ft(this._values[s], t) : "X")
                    }
               return i
          }, i.prototype.toString = function () {
               return ft(this.toArray())
          }, i.prototype.toJSON = function () {
               return {
                    mathjs: "SparseMatrix",
                    values: this._values,
                    index: this._index,
                    ptr: this._ptr,
                    size: this._size,
                    datatype: this._datatype
               }
          }, i.prototype.diagonal = function (t) {
               if (t) {
                    if (a(t) && (t = t.toNumber()), !o(t) || !$(t)) throw new TypeError("The parameter k must be an integer number")
               } else t = 0;
               var r = t > 0 ? t : 0,
                    n = t < 0 ? -t : 0,
                    e = this._size[0],
                    u = this._size[1],
                    s = Math.min(e - n, u - r),
                    c = [],
                    f = [],
                    l = [];
               l[0] = 0;
               for (var h = r; h < u && c.length < s; h++)
                    for (var d = this._ptr[h], p = this._ptr[h + 1], m = d; m < p; m++) {
                         var w = this._index[m];
                         if (w === h - r + n) {
                              c.push(this._values[m]), f[c.length - 1] = w - n;
                              break
                         }
                    }
               return l.push(c.length), new i({
                    values: c,
                    index: f,
                    ptr: l,
                    size: [s, 1]
               })
          }, i.fromJSON = function (t) {
               return new i(t)
          }, i.diagonal = function (t, e, u, s, c) {
               if (!l(t)) throw new TypeError("Array expected, size parameter");
               if (2 !== t.length) throw new Error("Only two dimensions matrix are supported");
               if (t = t.map((function (t) {
                         if (a(t) && (t = t.toNumber()), !o(t) || !$(t) || t < 1) throw new Error("Size values must be positive integers");
                         return t
                    })), u) {
                    if (a(u) && (u = u.toNumber()), !o(u) || !$(u)) throw new TypeError("The parameter k must be an integer number")
               } else u = 0;
               var d = n,
                    p = 0;
               f(c) && (d = r.find(n, [c, c]) || n, p = r.convert(0, c));
               var m, w = u > 0 ? u : 0,
                    v = u < 0 ? -u : 0,
                    g = t[0],
                    y = t[1],
                    b = Math.min(g - v, y - w);
               if (l(e)) {
                    if (e.length !== b) throw new Error("Invalid value array length");
                    m = function (t) {
                         return e[t]
                    }
               } else if (h(e)) {
                    var x = e.size();
                    if (1 !== x.length || x[0] !== b) throw new Error("Invalid matrix length");
                    m = function (t) {
                         return e.get([t])
                    }
               } else m = function () {
                    return e
               };
               for (var N = [], z = [], _ = [], k = 0; k < y; k++) {
                    _.push(N.length);
                    var M = k - w;
                    if (M >= 0 && M < b) {
                         var Z = m(M);
                         d(Z, p) || (z.push(M + v), N.push(Z))
                    }
               }
               return _.push(N.length), new i({
                    values: N,
                    index: z,
                    ptr: _,
                    size: [g, y]
               })
          }, i.prototype.swapRows = function (t, r) {
               if (!(o(t) && $(t) && o(r) && $(r))) throw new Error("Row index must be positive integers");
               if (2 !== this._size.length) throw new Error("Only two dimensional matrix is supported");
               return vt(t, this._size[0]), vt(r, this._size[0]), i._swapRows(t, r, this._size[1], this._values, this._index, this._ptr), this
          }, i._forEachRow = function (t, r, n, e, i) {
               for (var o = e[t], a = e[t + 1], u = o; u < a; u++) i(n[u], r[u])
          }, i._swapRows = function (t, r, n, e, i, o) {
               for (var a = 0; a < n; a++) {
                    var u = o[a],
                         s = o[a + 1],
                         c = p(t, u, s, i),
                         f = p(r, u, s, i);
                    if (c < s && f < s && i[c] === t && i[f] === r) {
                         if (e) {
                              var l = e[c];
                              e[c] = e[f], e[f] = l
                         }
                    } else if (c < s && i[c] === t && (f >= s || i[f] !== r)) {
                         var h = e ? e[c] : void 0;
                         i.splice(f, 0, r), e && e.splice(f, 0, h), i.splice(f <= c ? c + 1 : c, 1), e && e.splice(f <= c ? c + 1 : c, 1)
                    } else if (f < s && i[f] === r && (c >= s || i[c] !== t)) {
                         var d = e ? e[f] : void 0;
                         i.splice(c, 0, t), e && e.splice(c, 0, d), i.splice(c <= f ? f + 1 : f, 1), e && e.splice(c <= f ? f + 1 : f, 1)
                    }
               }
          }, i
     }), {
          isClass: !0
     });
     var Xn = Mt("number", ["typed"], (t => {
               var {
                    typed: r
               } = t, n = r("number", {
                    "": function () {
                         return 0
                    },
                    number: function (t) {
                         return t
                    },
                    string: function (t) {
                         if ("NaN" === t) return NaN;
                         var r, n, e = (n = (r = t).match(/(0[box])([0-9a-fA-F]*)\.([0-9a-fA-F]*)/)) ? {
                              input: r,
                              radix: {
                                   "0b": 2,
                                   "0o": 8,
                                   "0x": 16
                              } [n[1]],
                              integerPart: n[2],
                              fractionalPart: n[3]
                         } : null;
                         if (e) return function (t) {
                              for (var r = parseInt(t.integerPart, t.radix), n = 0, e = 0; e < t.fractionalPart.length; e++) n += parseInt(t.fractionalPart[e], t.radix) / Math.pow(t.radix, e + 1);
                              var i = r + n;
                              if (isNaN(i)) throw new SyntaxError('String "' + t.input + '" is no valid number');
                              return i
                         }(e);
                         var i = 0,
                              o = t.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);
                         o && (i = Number(o[2]), t = o[1]);
                         var a = Number(t);
                         if (isNaN(a)) throw new SyntaxError('String "' + t + '" is no valid number');
                         if (o) {
                              if (a > 2 ** i - 1) throw new SyntaxError('String "'.concat(t, '" is out of range'));
                              a >= 2 ** (i - 1) && (a -= 2 ** i)
                         }
                         return a
                    },
                    BigNumber: function (t) {
                         return t.toNumber()
                    },
                    Fraction: function (t) {
                         return t.valueOf()
                    },
                    Unit: function (t) {
                         throw new Error("Second argument with valueless unit expected")
                    },
                    null: function (t) {
                         return 0
                    },
                    "Unit, string | Unit": function (t, r) {
                         return t.toNumber(r)
                    },
                    "Array | Matrix": function (t) {
                         return Wn(t, this)
                    }
               });
               return n.fromJSON = function (t) {
                    return parseFloat(t.value)
               }, n
          })),
          In = Mt("fraction", ["typed", "Fraction"], (t => {
               var {
                    typed: r,
                    Fraction: n
               } = t;
               return r("fraction", {
                    number: function (t) {
                         if (!isFinite(t) || isNaN(t)) throw new Error(t + " cannot be represented as a fraction");
                         return new n(t)
                    },
                    string: function (t) {
                         return new n(t)
                    },
                    "number, number": function (t, r) {
                         return new n(t, r)
                    },
                    null: function (t) {
                         return new n(0)
                    },
                    BigNumber: function (t) {
                         return new n(t.toString())
                    },
                    Fraction: function (t) {
                         return t
                    },
                    Object: function (t) {
                         return new n(t)
                    },
                    "Array | Matrix": function (t) {
                         return Wn(t, this)
                    }
               })
          })),
          Bn = "matrix",
          Tn = Mt(Bn, ["typed", "Matrix", "DenseMatrix", "SparseMatrix"], (t => {
               var {
                    typed: r,
                    Matrix: n,
                    DenseMatrix: e,
                    SparseMatrix: i
               } = t;
               return r(Bn, {
                    "": function () {
                         return o([])
                    },
                    string: function (t) {
                         return o([], t)
                    },
                    "string, string": function (t, r) {
                         return o([], t, r)
                    },
                    Array: function (t) {
                         return o(t)
                    },
                    Matrix: function (t) {
                         return o(t, t.storage())
                    },
                    "Array | Matrix, string": o,
                    "Array | Matrix, string, string": o
               });

               function o(t, r, n) {
                    if ("dense" === r || "default" === r || void 0 === r) return new e(t, n);
                    if ("sparse" === r) return new i(t, n);
                    throw new TypeError("Unknown matrix type " + JSON.stringify(r) + ".")
               }
          })),
          jn = Mt("abs", ["typed"], (t => {
               var {
                    typed: r
               } = t;
               return r("abs", {
                    number: Fn,
                    Complex: function (t) {
                         return t.abs()
                    },
                    BigNumber: function (t) {
                         return t.abs()
                    },
                    Fraction: function (t) {
                         return t.abs()
                    },
                    "Array | Matrix": function (t) {
                         return Wn(t, this)
                    },
                    Unit: function (t) {
                         return t.abs()
                    }
               })
          })),
          Dn = "addScalar",
          Pn = Mt(Dn, ["typed"], (t => {
               var {
                    typed: r
               } = t;
               return r(Dn, {
                    "number, number": Yn,
                    "Complex, Complex": function (t, r) {
                         return t.add(r)
                    },
                    "BigNumber, BigNumber": function (t, r) {
                         return t.plus(r)
                    },
                    "Fraction, Fraction": function (t, r) {
                         return t.add(r)
                    },
                    "Unit, Unit": function (t, r) {
                         if (null === t.value || void 0 === t.value) throw new Error("Parameter x contains a unit with undefined value");
                         if (null === r.value || void 0 === r.value) throw new Error("Parameter y contains a unit with undefined value");
                         if (!t.equalBase(r)) throw new Error("Units do not match");
                         var n = t.clone();
                         return n.value = this(n.value, r.value), n.fixPrefix = !1, n
                    }
               })
          })),
          qn = Mt("algorithm11", ["typed", "equalScalar"], (t => {
               var {
                    typed: r,
                    equalScalar: n
               } = t;
               return function (t, e, i, o) {
                    var a = t._values,
                         u = t._index,
                         s = t._ptr,
                         c = t._size,
                         f = t._datatype;
                    if (!a) throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");
                    var l, h = c[0],
                         d = c[1],
                         p = n,
                         m = 0,
                         w = i;
                    "string" == typeof f && (l = f, p = r.find(n, [l, l]), m = r.convert(0, l), e = r.convert(e, l), w = r.find(i, [l, l]));
                    for (var v = [], g = [], y = [], b = 0; b < d; b++) {
                         y[b] = g.length;
                         for (var x = s[b], N = s[b + 1], z = x; z < N; z++) {
                              var _ = u[z],
                                   k = o ? w(e, a[z]) : w(a[z], e);
                              p(k, m) || (g.push(_), v.push(k))
                         }
                    }
                    return y[d] = g.length, t.createSparseMatrix({
                         values: v,
                         index: g,
                         ptr: y,
                         size: [h, d],
                         datatype: l
                    })
               }
          })),
          Rn = Mt("algorithm14", ["typed"], (t => {
               var {
                    typed: r
               } = t;
               return function (t, e, i, o) {
                    var a, u = t._data,
                         s = t._size,
                         c = t._datatype,
                         f = i;
                    "string" == typeof c && (a = c, e = r.convert(e, a), f = r.find(i, [a, a]));
                    var l = s.length > 0 ? n(f, 0, s, s[0], u, e, o) : [];
                    return t.createDenseMatrix({
                         data: l,
                         size: P(s),
                         datatype: a
                    })
               };

               function n(t, r, e, i, o, a, u) {
                    var s = [];
                    if (r === e.length - 1)
                         for (var c = 0; c < i; c++) s[c] = u ? t(a, o[c]) : t(o[c], a);
                    else
                         for (var f = 0; f < i; f++) s[f] = n(t, r + 1, e, e[r + 1], o[f], a, u);
                    return s
               }
          })),
          Un = Mt("algorithm12", ["typed", "DenseMatrix"], (t => {
               var {
                    typed: r,
                    DenseMatrix: n
               } = t;
               return function (t, e, i, o) {
                    var a = t._values,
                         u = t._index,
                         s = t._ptr,
                         c = t._size,
                         f = t._datatype;
                    if (!a) throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");
                    var l, h = c[0],
                         d = c[1],
                         p = i;
                    "string" == typeof f && (l = f, e = r.convert(e, l), p = r.find(i, [l, l]));
                    for (var m = [], w = [], v = [], g = 0; g < d; g++) {
                         for (var y = g + 1, b = s[g], x = s[g + 1], N = b; N < x; N++) {
                              var z = u[N];
                              w[z] = a[N], v[z] = y
                         }
                         for (var _ = 0; _ < h; _++) 0 === g && (m[_] = []), v[_] === y ? m[_][g] = o ? p(e, w[_]) : p(w[_], e) : m[_][g] = o ? p(e, 0) : p(0, e)
                    }
                    return new n({
                         data: m,
                         size: [h, d],
                         datatype: l
                    })
               }
          })),
          Ln = Mt("multiplyScalar", ["typed"], (t => {
               var {
                    typed: r
               } = t;
               return r("multiplyScalar", {
                    "number, number": Gn,
                    "Complex, Complex": function (t, r) {
                         return t.mul(r)
                    },
                    "BigNumber, BigNumber": function (t, r) {
                         return t.times(r)
                    },
                    "Fraction, Fraction": function (t, r) {
                         return t.mul(r)
                    },
                    "number | Fraction | BigNumber | Complex, Unit": function (t, r) {
                         var n = r.clone();
                         return n.value = null === n.value ? n._normalize(t) : this(n.value, t), n
                    },
                    "Unit, number | Fraction | BigNumber | Complex": function (t, r) {
                         var n = t.clone();
                         return n.value = null === n.value ? n._normalize(r) : this(n.value, r), n
                    },
                    "Unit, Unit": function (t, r) {
                         return t.multiply(r)
                    }
               })
          })),
          Hn = "multiply",
          Vn = Mt(Hn, ["typed", "matrix", "addScalar", "multiplyScalar", "equalScalar", "dot"], (t => {
               var {
                    typed: r,
                    matrix: n,
                    addScalar: e,
                    multiplyScalar: i,
                    equalScalar: o,
                    dot: a
               } = t, u = qn({
                    typed: r,
                    equalScalar: o
               }), s = Rn({
                    typed: r
               });

               function c(t, r) {
                    switch (t.length) {
                         case 1:
                              switch (r.length) {
                                   case 1:
                                        if (t[0] !== r[0]) throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");
                                        break;
                                   case 2:
                                        if (t[0] !== r[0]) throw new RangeError("Dimension mismatch in multiplication. Vector length (" + t[0] + ") must match Matrix rows (" + r[0] + ")");
                                        break;
                                   default:
                                        throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has " + r.length + " dimensions)")
                              }
                              break;
                         case 2:
                              switch (r.length) {
                                   case 1:
                                        if (t[1] !== r[0]) throw new RangeError("Dimension mismatch in multiplication. Matrix columns (" + t[1] + ") must match Vector length (" + r[0] + ")");
                                        break;
                                   case 2:
                                        if (t[1] !== r[0]) throw new RangeError("Dimension mismatch in multiplication. Matrix A columns (" + t[1] + ") must match Matrix B rows (" + r[0] + ")");
                                        break;
                                   default:
                                        throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has " + r.length + " dimensions)")
                              }
                              break;
                         default:
                              throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has " + t.length + " dimensions)")
                    }
               }

               function f(t, n) {
                    if ("dense" !== n.storage()) throw new Error("Support for SparseMatrix not implemented");
                    return function (t, n) {
                         var o, a = t._data,
                              u = t._size,
                              s = t._datatype,
                              c = n._data,
                              f = n._size,
                              l = n._datatype,
                              h = u[0],
                              d = f[1],
                              p = e,
                              m = i;
                         s && l && s === l && "string" == typeof s && (o = s, p = r.find(e, [o, o]), m = r.find(i, [o, o]));
                         for (var w = [], v = 0; v < d; v++) {
                              for (var g = m(a[0], c[0][v]), y = 1; y < h; y++) g = p(g, m(a[y], c[y][v]));
                              w[v] = g
                         }
                         return t.createDenseMatrix({
                              data: w,
                              size: [d],
                              datatype: o
                         })
                    }(t, n)
               }
               var l = r("_multiplyMatrixVector", {
                         "DenseMatrix, any": function (t, n) {
                              var o, a = t._data,
                                   u = t._size,
                                   s = t._datatype,
                                   c = n._data,
                                   f = n._datatype,
                                   l = u[0],
                                   h = u[1],
                                   d = e,
                                   p = i;
                              s && f && s === f && "string" == typeof s && (o = s, d = r.find(e, [o, o]), p = r.find(i, [o, o]));
                              for (var m = [], w = 0; w < l; w++) {
                                   for (var v = a[w], g = p(v[0], c[0]), y = 1; y < h; y++) g = d(g, p(v[y], c[y]));
                                   m[w] = g
                              }
                              return t.createDenseMatrix({
                                   data: m,
                                   size: [l],
                                   datatype: o
                              })
                         },
                         "SparseMatrix, any": function (t, n) {
                              var a = t._values,
                                   u = t._index,
                                   s = t._ptr,
                                   c = t._datatype;
                              if (!a) throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");
                              var f, l = n._data,
                                   h = n._datatype,
                                   d = t._size[0],
                                   p = n._size[0],
                                   m = [],
                                   w = [],
                                   v = [],
                                   g = e,
                                   y = i,
                                   b = o,
                                   x = 0;
                              c && h && c === h && "string" == typeof c && (f = c, g = r.find(e, [f, f]), y = r.find(i, [f, f]), b = r.find(o, [f, f]), x = r.convert(0, f));
                              var N = [],
                                   z = [];
                              v[0] = 0;
                              for (var _ = 0; _ < p; _++) {
                                   var k = l[_];
                                   if (!b(k, x))
                                        for (var M = s[_], Z = s[_ + 1], W = M; W < Z; W++) {
                                             var E = u[W];
                                             z[E] ? N[E] = g(N[E], y(k, a[W])) : (z[E] = !0, w.push(E), N[E] = y(k, a[W]))
                                        }
                              }
                              for (var F = w.length, Y = 0; Y < F; Y++) {
                                   var G = w[Y];
                                   m[Y] = N[G]
                              }
                              return v[1] = w.length, t.createSparseMatrix({
                                   values: m,
                                   index: w,
                                   ptr: v,
                                   size: [d, 1],
                                   datatype: f
                              })
                         }
                    }),
                    d = r("_multiplyMatrixMatrix", {
                         "DenseMatrix, DenseMatrix": function (t, n) {
                              var o, a = t._data,
                                   u = t._size,
                                   s = t._datatype,
                                   c = n._data,
                                   f = n._size,
                                   l = n._datatype,
                                   h = u[0],
                                   d = u[1],
                                   p = f[1],
                                   m = e,
                                   w = i;
                              s && l && s === l && "string" == typeof s && (o = s, m = r.find(e, [o, o]), w = r.find(i, [o, o]));
                              for (var v = [], g = 0; g < h; g++) {
                                   var y = a[g];
                                   v[g] = [];
                                   for (var b = 0; b < p; b++) {
                                        for (var x = w(y[0], c[0][b]), N = 1; N < d; N++) x = m(x, w(y[N], c[N][b]));
                                        v[g][b] = x
                                   }
                              }
                              return t.createDenseMatrix({
                                   data: v,
                                   size: [h, p],
                                   datatype: o
                              })
                         },
                         "DenseMatrix, SparseMatrix": function (t, n) {
                              var a = t._data,
                                   u = t._size,
                                   s = t._datatype,
                                   c = n._values,
                                   f = n._index,
                                   l = n._ptr,
                                   h = n._size,
                                   d = n._datatype;
                              if (!c) throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");
                              var p, m = u[0],
                                   w = h[1],
                                   v = e,
                                   g = i,
                                   y = o,
                                   b = 0;
                              s && d && s === d && "string" == typeof s && (p = s, v = r.find(e, [p, p]), g = r.find(i, [p, p]), y = r.find(o, [p, p]), b = r.convert(0, p));
                              for (var x = [], N = [], z = [], _ = n.createSparseMatrix({
                                        values: x,
                                        index: N,
                                        ptr: z,
                                        size: [m, w],
                                        datatype: p
                                   }), k = 0; k < w; k++) {
                                   z[k] = N.length;
                                   var M = l[k],
                                        Z = l[k + 1];
                                   if (Z > M)
                                        for (var W = 0, E = 0; E < m; E++) {
                                             for (var F = E + 1, Y = void 0, G = M; G < Z; G++) {
                                                  var J = f[G];
                                                  W !== F ? (Y = g(a[E][J], c[G]), W = F) : Y = v(Y, g(a[E][J], c[G]))
                                             }
                                             W !== F || y(Y, b) || (N.push(E), x.push(Y))
                                        }
                              }
                              return z[w] = N.length, _
                         },
                         "SparseMatrix, DenseMatrix": function (t, n) {
                              var a = t._values,
                                   u = t._index,
                                   s = t._ptr,
                                   c = t._datatype;
                              if (!a) throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");
                              var f, l = n._data,
                                   h = n._datatype,
                                   d = t._size[0],
                                   p = n._size[0],
                                   m = n._size[1],
                                   w = e,
                                   v = i,
                                   g = o,
                                   y = 0;
                              c && h && c === h && "string" == typeof c && (f = c, w = r.find(e, [f, f]), v = r.find(i, [f, f]), g = r.find(o, [f, f]), y = r.convert(0, f));
                              for (var b = [], x = [], N = [], z = t.createSparseMatrix({
                                        values: b,
                                        index: x,
                                        ptr: N,
                                        size: [d, m],
                                        datatype: f
                                   }), _ = [], k = [], M = 0; M < m; M++) {
                                   N[M] = x.length;
                                   for (var Z = M + 1, W = 0; W < p; W++) {
                                        var E = l[W][M];
                                        if (!g(E, y))
                                             for (var F = s[W], Y = s[W + 1], G = F; G < Y; G++) {
                                                  var J = u[G];
                                                  k[J] !== Z ? (k[J] = Z, x.push(J), _[J] = v(E, a[G])) : _[J] = w(_[J], v(E, a[G]))
                                             }
                                   }
                                   for (var A = N[M], S = x.length, O = A; O < S; O++) {
                                        var C = x[O];
                                        b[O] = _[C]
                                   }
                              }
                              return N[m] = x.length, z
                         },
                         "SparseMatrix, SparseMatrix": function (t, n) {
                              var o, a = t._values,
                                   u = t._index,
                                   s = t._ptr,
                                   c = t._datatype,
                                   f = n._values,
                                   l = n._index,
                                   h = n._ptr,
                                   d = n._datatype,
                                   p = t._size[0],
                                   m = n._size[1],
                                   w = a && f,
                                   v = e,
                                   g = i;
                              c && d && c === d && "string" == typeof c && (o = c, v = r.find(e, [o, o]), g = r.find(i, [o, o]));
                              for (var y, b, x, N, z, _, k, M, Z = w ? [] : void 0, W = [], E = [], F = t.createSparseMatrix({
                                        values: Z,
                                        index: W,
                                        ptr: E,
                                        size: [p, m],
                                        datatype: o
                                   }), Y = w ? [] : void 0, G = [], J = 0; J < m; J++) {
                                   E[J] = W.length;
                                   var A = J + 1;
                                   for (z = h[J], _ = h[J + 1], N = z; N < _; N++)
                                        if (M = l[N], w)
                                             for (b = s[M], x = s[M + 1], y = b; y < x; y++) k = u[y], G[k] !== A ? (G[k] = A, W.push(k), Y[k] = g(f[N], a[y])) : Y[k] = v(Y[k], g(f[N], a[y]));
                                        else
                                             for (b = s[M], x = s[M + 1], y = b; y < x; y++) k = u[y], G[k] !== A && (G[k] = A, W.push(k));
                                   if (w)
                                        for (var S = E[J], O = W.length, C = S; C < O; C++) {
                                             var X = W[C];
                                             Z[C] = Y[X]
                                        }
                              }
                              return E[m] = W.length, F
                         }
                    });
               return r(Hn, function (t, r) {
                    for (var n in r) R(r, n) && (t[n] = r[n]);
                    return t
               }({
                    "Array, Array": function (t, r) {
                         c(pt(t), pt(r));
                         var e = this(n(t), n(r));
                         return h(e) ? e.valueOf() : e
                    },
                    "Matrix, Matrix": function (t, r) {
                         var n = t.size(),
                              e = r.size();
                         return c(n, e), 1 === n.length ? 1 === e.length ? function (t, r, n) {
                              if (0 === n) throw new Error("Cannot multiply two empty vectors");
                              return a(t, r)
                         }(t, r, n[0]) : f(t, r) : 1 === e.length ? l(t, r) : d(t, r)
                    },
                    "Matrix, Array": function (t, r) {
                         return this(t, n(r))
                    },
                    "Array, Matrix": function (t, r) {
                         return this(n(t, r.storage()), r)
                    },
                    "SparseMatrix, any": function (t, r) {
                         return u(t, r, i, !1)
                    },
                    "DenseMatrix, any": function (t, r) {
                         return s(t, r, i, !1)
                    },
                    "any, SparseMatrix": function (t, r) {
                         return u(r, t, i, !0)
                    },
                    "any, DenseMatrix": function (t, r) {
                         return s(r, t, i, !0)
                    },
                    "Array, any": function (t, r) {
                         return s(n(t), r, i, !1).valueOf()
                    },
                    "any, Array": function (t, r) {
                         return s(n(r), t, i, !0).valueOf()
                    },
                    "any, any": i,
                    "any, any, ...any": function (t, r, n) {
                         for (var e = this(t, r), i = 0; i < n.length; i++) e = this(e, n[i]);
                         return e
                    }
               }, i.signatures))
          })),
          $n = Mt("sqrt", ["config", "typed", "Complex"], (t => {
               var {
                    config: r,
                    typed: n,
                    Complex: e
               } = t;
               return n("sqrt", {
                    number: i,
                    Complex: function (t) {
                         return t.sqrt()
                    },
                    BigNumber: function (t) {
                         return !t.isNegative() || r.predictable ? t.sqrt() : i(t.toNumber())
                    },
                    "Array | Matrix": function (t) {
                         return Wn(t, this)
                    },
                    Unit: function (t) {
                         return t.pow(.5)
                    }
               });

               function i(t) {
                    return isNaN(t) ? NaN : t >= 0 || r.predictable ? Math.sqrt(t) : new e(t, 0).sqrt()
               }
          })),
          Kn = "conj",
          Qn = Mt(Kn, ["typed"], (t => {
               var {
                    typed: r
               } = t;
               return r(Kn, {
                    number: function (t) {
                         return t
                    },
                    BigNumber: function (t) {
                         return t
                    },
                    Complex: function (t) {
                         return t.conjugate()
                    },
                    "Array | Matrix": function (t) {
                         return Wn(t, this)
                    }
               })
          })),
          te = "identity",
          re = Mt(te, ["typed", "config", "matrix", "BigNumber", "DenseMatrix", "SparseMatrix"], (t => {
               var {
                    typed: r,
                    config: n,
                    matrix: e,
                    BigNumber: i,
                    DenseMatrix: o,
                    SparseMatrix: u
               } = t;
               return r(te, {
                    "": function () {
                         return "Matrix" === n.matrix ? e([]) : []
                    },
                    string: function (t) {
                         return e(t)
                    },
                    "number | BigNumber": function (t) {
                         return c(t, t, "Matrix" === n.matrix ? "dense" : void 0)
                    },
                    "number | BigNumber, string": function (t, r) {
                         return c(t, t, r)
                    },
                    "number | BigNumber, number | BigNumber": function (t, r) {
                         return c(t, r, "Matrix" === n.matrix ? "dense" : void 0)
                    },
                    "number | BigNumber, number | BigNumber, string": function (t, r, n) {
                         return c(t, r, n)
                    },
                    Array: function (t) {
                         return s(t)
                    },
                    "Array, string": function (t, r) {
                         return s(t, r)
                    },
                    Matrix: function (t) {
                         return s(t.valueOf(), t.storage())
                    },
                    "Matrix, string": function (t, r) {
                         return s(t.valueOf(), r)
                    }
               });

               function s(t, r) {
                    switch (t.length) {
                         case 0:
                              return r ? e(r) : [];
                         case 1:
                              return c(t[0], t[0], r);
                         case 2:
                              return c(t[0], t[1], r);
                         default:
                              throw new Error("Vector containing two values expected")
                    }
               }

               function c(t, r, n) {
                    var e = a(t) || a(r) ? i : null;
                    if (a(t) && (t = t.toNumber()), a(r) && (r = r.toNumber()), !$(t) || t < 1) throw new Error("Parameters in function identity must be positive integers");
                    if (!$(r) || r < 1) throw new Error("Parameters in function identity must be positive integers");
                    var s = e ? new i(1) : 1,
                         c = e ? new e(0) : 0,
                         f = [t, r];
                    if (n) {
                         if ("sparse" === n) return u.diagonal(f, s, 0, c);
                         if ("dense" === n) return o.diagonal(f, s, 0, c);
                         throw new TypeError('Unknown matrix type "'.concat(n, '"'))
                    }
                    for (var l = gt([], f, c), h = t < r ? t : r, d = 0; d < h; d++) l[d][d] = s;
                    return l
               }
          }));
     var ne = "size",
          ee = Mt(ne, ["typed", "config", "?matrix"], (t => {
               var {
                    typed: r,
                    config: n,
                    matrix: e
               } = t;
               return r(ne, {
                    Matrix: function (t) {
                         return t.create(t.size())
                    },
                    Array: pt,
                    string: function (t) {
                         return "Array" === n.matrix ? [t.length] : e([t.length])
                    },
                    "number | Complex | BigNumber | Unit | boolean | null": function (t) {
                         return "Array" === n.matrix ? [] : e ? e([]) : function () {
                              throw new Error('No "matrix" implementation available')
                         }()
                    }
               })
          })),
          ie = "zeros",
          oe = Mt(ie, ["typed", "config", "matrix", "BigNumber"], (t => {
               var {
                    typed: r,
                    config: n,
                    matrix: e,
                    BigNumber: i
               } = t;
               return r(ie, {
                    "": function () {
                         return "Array" === n.matrix ? o([]) : o([], "default")
                    },
                    "...number | BigNumber | string": function (t) {
                         if ("string" == typeof t[t.length - 1]) {
                              var r = t.pop();
                              return o(t, r)
                         }
                         return "Array" === n.matrix ? o(t) : o(t, "default")
                    },
                    Array: o,
                    Matrix: function (t) {
                         var r = t.storage();
                         return o(t.valueOf(), r)
                    },
                    "Array | Matrix, string": function (t, r) {
                         return o(t.valueOf(), r)
                    }
               });

               function o(t, r) {
                    var n = function (t) {
                         var r = !1;
                         return t.forEach((function (t, n, e) {
                              a(t) && (r = !0, e[n] = t.toNumber())
                         })), r
                    }(t) ? new i(0) : 0;
                    if (function (t) {
                              t.forEach((function (t) {
                                   if ("number" != typeof t || !$(t) || t < 0) throw new Error("Parameters in function zeros must be positive integers")
                              }))
                         }(t), r) {
                         var o = e(r);
                         return t.length > 0 ? o.resize(t, n) : o
                    }
                    var u = [];
                    return t.length > 0 ? gt(u, t, n) : u
               }
          })),
          ae = Mt("pow", ["typed", "config", "identity", "multiply", "matrix", "fraction", "number", "Complex"], (t => {
               var {
                    typed: r,
                    config: n,
                    identity: e,
                    multiply: i,
                    matrix: o,
                    number: a,
                    fraction: u,
                    Complex: s
               } = t;
               return r("pow", {
                    "number, number": c,
                    "Complex, Complex": function (t, r) {
                         return t.pow(r)
                    },
                    "BigNumber, BigNumber": function (t, r) {
                         return r.isInteger() || t >= 0 || n.predictable ? t.pow(r) : new s(t.toNumber(), 0).pow(r.toNumber(), 0)
                    },
                    "Fraction, Fraction": function (t, r) {
                         var e = t.pow(r);
                         if (null != e) return e;
                         if (n.predictable) throw new Error("Result of pow is non-rational and cannot be expressed as a fraction");
                         return c(t.valueOf(), r.valueOf())
                    },
                    "Array, number": f,
                    "Array, BigNumber": function (t, r) {
                         return f(t, r.toNumber())
                    },
                    "Matrix, number": l,
                    "Matrix, BigNumber": function (t, r) {
                         return l(t, r.toNumber())
                    },
                    "Unit, number | BigNumber": function (t, r) {
                         return t.pow(r)
                    }
               });

               function c(t, r) {
                    if (n.predictable && !$(r) && t < 0) try {
                         var e = u(r),
                              i = a(e);
                         if ((r === i || Math.abs((r - i) / r) < 1e-14) && e.d % 2 == 1) return (e.n % 2 == 0 ? 1 : -1) * Math.pow(-t, r)
                    } catch (t) {}
                    return n.predictable && (t < -1 && r === 1 / 0 || t > -1 && t < 0 && r === -1 / 0) ? NaN : $(r) || t >= 0 || n.predictable ? Jn(t, r) : t * t < 1 && r === 1 / 0 || t * t > 1 && r === -1 / 0 ? 0 : new s(t, 0).pow(r, 0)
               }

               function f(t, r) {
                    if (!$(r) || r < 0) throw new TypeError("For A^b, b must be a positive integer (value is " + r + ")");
                    var n = pt(t);
                    if (2 !== n.length) throw new Error("For A^b, A must be 2 dimensional (A has " + n.length + " dimensions)");
                    if (n[0] !== n[1]) throw new Error("For A^b, A must be square (size is " + n[0] + "x" + n[1] + ")");
                    for (var o = e(n[0]).valueOf(), a = t; r >= 1;) 1 == (1 & r) && (o = i(a, o)), r >>= 1, a = i(a, a);
                    return o
               }

               function l(t, r) {
                    return o(f(t.valueOf(), r))
               }
          }));

     function ue(t, r, n) {
          return r in t ? Object.defineProperty(t, r, {
               value: n,
               enumerable: !0,
               configurable: !0,
               writable: !0
          }) : t[r] = n, t
     }

     function se(t, r) {
          var n = Object.keys(t);
          if (Object.getOwnPropertySymbols) {
               var e = Object.getOwnPropertySymbols(t);
               r && (e = e.filter((function (r) {
                    return Object.getOwnPropertyDescriptor(t, r).enumerable
               }))), n.push.apply(n, e)
          }
          return n
     }

     function ce(t) {
          for (var r = 1; r < arguments.length; r++) {
               var n = null != arguments[r] ? arguments[r] : {};
               r % 2 ? se(Object(n), !0).forEach((function (r) {
                    ue(t, r, n[r])
               })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : se(Object(n)).forEach((function (r) {
                    Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r))
               }))
          }
          return t
     }
     var fe = "Number of decimals in function round must be an integer",
          le = "round",
          he = Mt(le, ["typed", "matrix", "equalScalar", "zeros", "BigNumber", "DenseMatrix"], (t => {
               var {
                    typed: r,
                    matrix: n,
                    equalScalar: e,
                    zeros: i,
                    BigNumber: o,
                    DenseMatrix: a
               } = t, u = qn({
                    typed: r,
                    equalScalar: e
               }), s = Un({
                    typed: r,
                    DenseMatrix: a
               }), c = Rn({
                    typed: r
               });
               return r(le, ce(ce({}, de), {}, {
                    Complex: function (t) {
                         return t.round()
                    },
                    "Complex, number": function (t, r) {
                         if (r % 1) throw new TypeError(fe);
                         return t.round(r)
                    },
                    "Complex, BigNumber": function (t, r) {
                         if (!r.isInteger()) throw new TypeError(fe);
                         var n = r.toNumber();
                         return t.round(n)
                    },
                    "number, BigNumber": function (t, r) {
                         if (!r.isInteger()) throw new TypeError(fe);
                         return new o(t).toDecimalPlaces(r.toNumber())
                    },
                    BigNumber: function (t) {
                         return t.toDecimalPlaces(0)
                    },
                    "BigNumber, BigNumber": function (t, r) {
                         if (!r.isInteger()) throw new TypeError(fe);
                         return t.toDecimalPlaces(r.toNumber())
                    },
                    Fraction: function (t) {
                         return t.round()
                    },
                    "Fraction, number": function (t, r) {
                         if (r % 1) throw new TypeError(fe);
                         return t.round(r)
                    },
                    "Array | Matrix": function (t) {
                         return Wn(t, this)
                    },
                    "SparseMatrix, number | BigNumber": function (t, r) {
                         return u(t, r, this, !1)
                    },
                    "DenseMatrix, number | BigNumber": function (t, r) {
                         return c(t, r, this, !1)
                    },
                    "number | Complex | BigNumber, SparseMatrix": function (t, r) {
                         return e(t, 0) ? i(r.size(), r.storage()) : s(r, t, this, !0)
                    },
                    "number | Complex | BigNumber, DenseMatrix": function (t, r) {
                         return e(t, 0) ? i(r.size(), r.storage()) : c(r, t, this, !0)
                    },
                    "Array, number | BigNumber": function (t, r) {
                         return c(n(t), r, this, !1).valueOf()
                    },
                    "number | Complex | BigNumber, Array": function (t, r) {
                         return c(n(r), t, this, !0).valueOf()
                    }
               }))
          })),
          de = {
               number: An,
               "number, number": function (t, r) {
                    if (!$(r)) throw new TypeError(fe);
                    if (r < 0 || r > 15) throw new Error("Number of decimals in function round must be in the range of 0-15");
                    return An(t, r)
               }
          },
          pe = Mt("atan", ["typed"], (t => {
               var {
                    typed: r
               } = t;
               return r("atan", {
                    number: function (t) {
                         return Math.atan(t)
                    },
                    Complex: function (t) {
                         return t.atan()
                    },
                    BigNumber: function (t) {
                         return t.atan()
                    },
                    "Array | Matrix": function (t) {
                         return Wn(t, this)
                    }
               })
          })),
          me = Mt("cos", ["typed"], (t => {
               var {
                    typed: r
               } = t;
               return r("cos", {
                    number: Math.cos,
                    Complex: function (t) {
                         return t.cos()
                    },
                    BigNumber: function (t) {
                         return t.cos()
                    },
                    Unit: function (t) {
                         if (!t.hasBase(t.constructor.BASE_UNITS.ANGLE)) throw new TypeError("Unit in function cos is no angle");
                         return this(t.value)
                    },
                    "Array | Matrix": function (t) {
                         return Wn(t, this)
                    }
               })
          })),
          we = Mt("sin", ["typed"], (t => {
               var {
                    typed: r
               } = t;
               return r("sin", {
                    number: Math.sin,
                    Complex: function (t) {
                         return t.sin()
                    },
                    BigNumber: function (t) {
                         return t.sin()
                    },
                    Unit: function (t) {
                         if (!t.hasBase(t.constructor.BASE_UNITS.ANGLE)) throw new TypeError("Unit in function sin is no angle");
                         return this(t.value)
                    },
                    "Array | Matrix": function (t) {
                         return Wn(t, this)
                    }
               })
          })),
          ve = Mt("tan", ["typed"], (t => {
               var {
                    typed: r
               } = t;
               return r("tan", {
                    number: Math.tan,
                    Complex: function (t) {
                         return t.tan()
                    },
                    BigNumber: function (t) {
                         return t.tan()
                    },
                    Unit: function (t) {
                         if (!t.hasBase(t.constructor.BASE_UNITS.ANGLE)) throw new TypeError("Unit in function tan is no angle");
                         return this(t.value)
                    },
                    "Array | Matrix": function (t) {
                         return Wn(t, this)
                    }
               })
          })),
          ge = Mt("dot", ["typed", "addScalar", "multiplyScalar", "conj", "size"], (t => {
               var {
                    typed: r,
                    addScalar: n,
                    multiplyScalar: e,
                    conj: i,
                    size: o
               } = t;
               return r("dot", {
                    "Array | DenseMatrix, Array | DenseMatrix": function (t, o) {
                         var s = a(t, o),
                              c = h(t) ? t._data : t,
                              f = h(t) ? t._datatype : void 0,
                              l = h(o) ? o._data : o,
                              d = h(o) ? o._datatype : void 0,
                              p = 2 === u(t).length,
                              m = 2 === u(o).length,
                              w = n,
                              v = e;
                         if (f && d && f === d && "string" == typeof f) {
                              var g = f;
                              w = r.find(n, [g, g]), v = r.find(e, [g, g])
                         }
                         if (!p && !m) {
                              for (var y = v(i(c[0]), l[0]), b = 1; b < s; b++) y = w(y, v(i(c[b]), l[b]));
                              return y
                         }
                         if (!p && m) {
                              for (var x = v(i(c[0]), l[0][0]), N = 1; N < s; N++) x = w(x, v(i(c[N]), l[N][0]));
                              return x
                         }
                         if (p && !m) {
                              for (var z = v(i(c[0][0]), l[0]), _ = 1; _ < s; _++) z = w(z, v(i(c[_][0]), l[_]));
                              return z
                         }
                         if (p && m) {
                              for (var k = v(i(c[0][0]), l[0][0]), M = 1; M < s; M++) k = w(k, v(i(c[M][0]), l[M][0]));
                              return k
                         }
                    },
                    "SparseMatrix, SparseMatrix": function (t, r) {
                         a(t, r);
                         var i = t._index,
                              o = t._values,
                              u = r._index,
                              s = r._values,
                              c = 0,
                              f = n,
                              l = e,
                              h = 0,
                              d = 0;
                         for (; h < i.length && d < u.length;) {
                              var p = i[h],
                                   m = u[d];
                              p < m ? h++ : p > m ? d++ : p === m && (c = f(c, l(o[h], s[d])), h++, d++)
                         }
                         return c
                    }
               });

               function a(t, r) {
                    var n, e, i = u(t),
                         o = u(r);
                    if (1 === i.length) n = i[0];
                    else {
                         if (2 !== i.length || 1 !== i[1]) throw new RangeError("Expected a column vector, instead got a matrix of size (" + i.join(", ") + ")");
                         n = i[0]
                    }
                    if (1 === o.length) e = o[0];
                    else {
                         if (2 !== o.length || 1 !== o[1]) throw new RangeError("Expected a column vector, instead got a matrix of size (" + o.join(", ") + ")");
                         e = o[0]
                    }
                    if (n !== e) throw new RangeError("Vectors must have equal length (" + n + " != " + e + ")");
                    if (0 === n) throw new RangeError("Cannot calculate the dot product of empty vectors");
                    return n
               }

               function u(t) {
                    return h(t) ? t.size() : o(t)
               }
          })),
          ye = Nn({}),
          be = yn({
               config: U
          }),
          xe = Mn({}),
          Ne = kn({}),
          ze = Zn({
               Matrix: xe
          }),
          _e = St({
               BigNumber: be,
               Complex: ye,
               DenseMatrix: ze,
               Fraction: Ne
          }),
          ke = On({
               config: U,
               typed: _e
          }),
          Me = Xn({
               typed: _e
          }),
          Ze = Ln({
               typed: _e
          }),
          We = pe({
               typed: _e
          }),
          Ee = In({
               Fraction: Ne,
               typed: _e
          }),
          Fe = Pn({
               typed: _e
          }),
          Ye = $n({
               Complex: ye,
               config: U,
               typed: _e
          }),
          Ge = Qn({
               typed: _e
          }),
          Je = me({
               typed: _e
          }),
          Ae = we({
               typed: _e
          }),
          Se = Cn({
               Matrix: xe,
               equalScalar: ke,
               typed: _e
          }),
          Oe = Tn({
               DenseMatrix: ze,
               Matrix: xe,
               SparseMatrix: Se,
               typed: _e
          }),
          Ce = jn({
               typed: _e
          }),
          Xe = re({
               BigNumber: be,
               DenseMatrix: ze,
               SparseMatrix: Se,
               config: U,
               matrix: Oe,
               typed: _e
          }),
          Ie = ee({
               matrix: Oe,
               config: U,
               typed: _e
          }),
          Be = he({
               BigNumber: be,
               DenseMatrix: ze,
               equalScalar: ke,
               matrix: Oe,
               typed: _e,
               zeros: oe({
                    BigNumber: be,
                    config: U,
                    matrix: Oe,
                    typed: _e
               })
          }),
          Te = ae({
               Complex: ye,
               config: U,
               fraction: Ee,
               identity: Xe,
               matrix: Oe,
               multiply: Vn({
                    addScalar: Fe,
                    dot: ge({
                         addScalar: Fe,
                         conj: Ge,
                         multiplyScalar: Ze,
                         size: Ie,
                         typed: _e
                    }),
                    equalScalar: ke,
                    matrix: Oe,
                    multiplyScalar: Ze,
                    typed: _e
               }),
               number: Me,
               typed: _e
          }),
          je = ve({
               typed: _e
          }),
          De = {};
     Object.defineProperty(De, "__esModule", {
          value: !0
     });
     var Pe = De.Base64 = void 0,
          qe = function () {
               function t() {
                    this.b64c = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", this.b64u = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", this.b64pad = "="
               }
               return t.prototype.encode = function (t) {
                    var r = unescape(encodeURIComponent(t));
                    return this.encodeData(r, r.length, this.b64c)
               }, t.prototype.urlEncode = function (t) {
                    var r = unescape(encodeURIComponent(t));
                    return this.encodeData(r, r.length, this.b64u)
               }, t.prototype.decode = function (t) {
                    var r, n, e, i, o, a = "";
                    for (r = 0; r < t.length - 3; r += 4) n = this.charIndex(t.charAt(r + 0)), e = this.charIndex(t.charAt(r + 1)), i = this.charIndex(t.charAt(r + 2)), o = this.charIndex(t.charAt(r + 3)), a += String.fromCharCode(n << 2 | e >>> 4), t.charAt(r + 2) !== this.b64pad && (a += String.fromCharCode(e << 4 & 240 | i >>> 2 & 15)), t.charAt(r + 3) !== this.b64pad && (a += String.fromCharCode(i << 6 & 192 | o));
                    return a = decodeURIComponent(escape(a))
               }, t.prototype.urlSniff = function (t) {
                    return t.indexOf("-") >= 0 || t.indexOf("_") >= 0
               }, t.prototype.encodeData = function (t, r, n) {
                    var e = "",
                         i = 0;
                    for (i = 0; i <= r - 3; i += 3) e += n.charAt(t.charCodeAt(i) >>> 2), e += n.charAt((3 & t.charCodeAt(i)) << 4 | t.charCodeAt(i + 1) >>> 4), e += n.charAt((15 & t.charCodeAt(i + 1)) << 2 | t.charCodeAt(i + 2) >>> 6), e += n.charAt(63 & t.charCodeAt(i + 2));
                    return r % 3 == 2 ? (e += n.charAt(t.charCodeAt(i) >>> 2), e += n.charAt((3 & t.charCodeAt(i)) << 4 | t.charCodeAt(i + 1) >>> 4), e += n.charAt((15 & t.charCodeAt(i + 1)) << 2), e += this.b64pad) : r % 3 == 1 && (e += n.charAt(t.charCodeAt(i) >>> 2), e += n.charAt((3 & t.charCodeAt(i)) << 4), e += this.b64pad, e += this.b64pad), e
               }, t.prototype.charIndex = function (t) {
                    return "+" === t ? 62 : "/" === t ? 63 : this.b64u.indexOf(t)
               }, t
          }();
     Pe = De.Base64 = qe;
     var Re = function () {
               function t() {}
               return t.t = function (t, r) {
                    var n = new Pe,
                         e = "";
                    return t[0].map((function (t) {
                         e += String(r[n.decode(t)])
                    })), e += ".", t[1].map((function (t) {
                         e += String(r[n.decode(t)])
                    })), Number(e)
               }, t.mt = [
                    [
                         [
                              ["cmFk", "cmFk"],
                              ["c2lu", "bW9k", "bGJo", "bW9k", "cmFk", "ZXhw", "c2lu", "dGFu", "dGFu", "c2lu", "bW9k", "dGFu"]
                         ],
                         [
                              ["Y29z", "YWJz", "bW9k"],
                              ["bGJo", "YWJz", "dW5k", "cmFk", "dGFu", "dGFu", "YWJz", "c2lu", "c2lu", "YWJz", "cmFk", "c2lu"]
                         ],
                         [
                              ["dW5k", "dW5k"],
                              ["ZGZt", "ZGZt", "dW5k", "dGFu", "Y29z", "ZGZt", "cmFk", "dW5k", "bW9k", "ZGZt", "ZGZt", "dGFu"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "dW5k", "YWJz", "cmFk", "c2lu", "dGFu", "dW5k", "dW5k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "ZXhw", "c2lu", "ZXhw", "dW5k", "bGJo", "cmFk", "ZGZt", "dGFu"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "bW9k", "ZGZt", "YWJz", "ZXhw", "dGFu", "bW9k", "ZXhw"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "c2lu", "cmFk", "Y29z", "cmFk", "cmFk", "ZGZt", "ZGZt"]
                         ]
                    ],
                    [
                         [
                              ["ZXhw", "dGFu"],
                              ["c2lu", "ZGZt", "YWJz", "c2lu", "cmFk", "ZXhw", "bW9k", "Y29z", "bW9k", "YWJz", "dGFu", "bW9k"]
                         ],
                         [
                              ["Y29z", "ZGZt", "ZGZt"],
                              ["YWJz", "cmFk", "Y29z", "c2lu", "cmFk", "bW9k", "Y29z", "bGJo", "cmFk", "YWJz", "bGJo", "Y29z"]
                         ],
                         [
                              ["Y29z", "YWJz", "dGFu"],
                              ["ZGZt", "bW9k", "YWJz", "YWJz", "YWJz", "ZGZt", "bGJo", "YWJz", "bW9k", "Y29z", "bW9k", "bW9k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "dW5k", "dGFu", "YWJz", "dGFu", "cmFk", "c2lu"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "ZXhw", "bGJo", "bGJo", "Y29z", "bW9k", "Y29z"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "bW9k", "cmFk", "Y29z", "ZXhw", "ZGZt", "cmFk", "c2lu"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "cmFk", "dGFu"]
                         ]
                    ],
                    [
                         [
                              ["Y29z", "Y29z", "dGFu"],
                              ["bW9k", "cmFk", "bGJo", "YWJz", "c2lu", "dW5k", "cmFk", "bGJo", "YWJz", "ZXhw", "dW5k", "Y29z"]
                         ],
                         [
                              ["bW9k", "bGJo"],
                              ["dW5k", "ZGZt", "ZXhw", "dGFu", "c2lu", "bGJo", "dW5k", "bW9k", "Y29z", "dGFu", "cmFk", "bW9k"]
                         ],
                         [
                              ["ZXhw", "ZXhw"],
                              ["ZXhw", "Y29z", "dW5k", "dGFu", "cmFk", "dW5k", "YWJz", "c2lu", "bGJo", "Y29z", "ZXhw", "cmFk"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "bGJo", "dW5k", "bW9k", "ZGZt", "bGJo", "cmFk"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "dGFu", "YWJz", "Y29z", "ZXhw", "ZGZt", "Y29z", "YWJz"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "ZXhw", "dW5k", "dGFu", "dGFu", "dW5k", "bW9k", "ZXhw"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "ZXhw", "YWJz", "dGFu", "YWJz", "bGJo", "ZXhw"]
                         ]
                    ],
                    [
                         [
                              ["ZGZt"],
                              ["c2lu", "ZXhw", "dW5k", "dW5k", "ZXhw", "cmFk", "Y29z", "dW5k", "ZGZt", "c2lu", "dGFu", "Y29z"]
                         ],
                         [
                              ["Y29z", "YWJz"],
                              ["c2lu", "cmFk", "bGJo", "cmFk", "c2lu", "ZXhw", "bGJo", "dGFu", "ZGZt", "bW9k", "bGJo", "bGJo"]
                         ],
                         [
                              ["dW5k"],
                              ["cmFk", "YWJz", "Y29z", "bW9k", "bW9k", "ZXhw", "bW9k", "ZGZt", "YWJz", "dW5k", "Y29z", "dW5k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "bW9k", "ZGZt", "YWJz", "ZXhw", "Y29z", "ZGZt"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "YWJz", "Y29z", "ZXhw", "Y29z", "ZGZt", "bW9k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "dW5k", "YWJz", "c2lu", "bW9k", "ZGZt", "dW5k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "ZXhw", "c2lu", "dW5k", "dGFu", "dW5k"]
                         ]
                    ],
                    [
                         [
                              ["ZGZt"],
                              ["ZXhw", "c2lu", "bW9k", "ZGZt", "bW9k", "c2lu", "bGJo", "bGJo", "Y29z", "Y29z", "ZGZt", "Y29z"]
                         ],
                         [
                              ["Y29z", "Y29z"],
                              ["bGJo", "bW9k", "ZGZt", "YWJz", "YWJz", "Y29z", "cmFk", "bGJo", "YWJz", "bGJo", "YWJz", "dGFu"]
                         ],
                         [
                              ["dW5k"],
                              ["dGFu", "ZGZt", "bW9k", "dW5k", "dGFu", "cmFk", "dGFu", "cmFk", "bW9k", "dW5k", "Y29z", "dW5k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "bW9k", "cmFk", "bW9k", "cmFk", "ZGZt", "bGJo"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "Y29z", "bGJo", "bW9k", "cmFk", "dW5k", "bW9k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "ZGZt", "ZXhw", "ZXhw", "YWJz", "YWJz", "cmFk"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "c2lu", "Y29z", "c2lu"]
                         ]
                    ],
                    [
                         [
                              ["ZGZt", "ZXhw"],
                              ["ZXhw", "ZGZt", "YWJz", "ZGZt", "cmFk", "ZGZt", "cmFk", "ZGZt", "ZGZt", "ZGZt", "ZXhw", "ZXhw"]
                         ],
                         [
                              ["Y29z", "Y29z", "ZXhw"],
                              ["bGJo", "ZGZt", "Y29z", "ZXhw", "bW9k", "dGFu", "ZGZt", "ZGZt", "dW5k", "dGFu", "ZGZt", "c2lu"]
                         ],
                         [
                              ["dW5k", "c2lu"],
                              ["ZXhw", "c2lu", "YWJz", "dGFu", "ZXhw", "bW9k", "bGJo", "dGFu", "bW9k", "dW5k", "dGFu", "dW5k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "c2lu", "dW5k", "YWJz", "cmFk", "bGJo", "ZGZt", "bGJo"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "bGJo", "Y29z", "bGJo", "ZXhw", "Y29z", "Y29z", "dGFu"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "dGFu", "bGJo", "bGJo", "c2lu", "Y29z", "bW9k", "ZXhw"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "c2lu", "cmFk", "Y29z", "bW9k", "ZGZt", "dW5k", "bGJo"]
                         ]
                    ],
                    [
                         [
                              ["ZGZt", "ZXhw"],
                              ["Y29z", "c2lu", "bW9k", "dW5k", "ZXhw", "YWJz", "ZXhw", "dGFu", "bW9k", "ZXhw", "dW5k", "Y29z"]
                         ],
                         [
                              ["Y29z", "Y29z", "ZXhw"],
                              ["dW5k", "bW9k", "dW5k", "bGJo", "bW9k", "bGJo", "c2lu", "cmFk", "cmFk", "cmFk", "c2lu", "dGFu"]
                         ],
                         [
                              ["dW5k", "c2lu"],
                              ["Y29z", "bW9k", "cmFk", "ZGZt", "dGFu", "bW9k", "c2lu", "Y29z", "YWJz", "YWJz", "Y29z", "ZGZt"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "c2lu", "dW5k", "ZXhw", "ZXhw", "cmFk", "Y29z", "cmFk"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "bGJo", "Y29z", "ZGZt", "bW9k", "cmFk", "YWJz", "cmFk"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "dGFu", "bGJo", "c2lu", "YWJz", "dW5k", "c2lu", "bW9k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "c2lu", "dGFu", "dW5k", "bW9k", "bGJo", "bW9k", "Y29z"]
                         ]
                    ],
                    [
                         [
                              ["cmFk", "cmFk"],
                              ["c2lu", "cmFk", "ZGZt", "ZXhw", "bW9k", "YWJz", "c2lu", "dW5k", "dGFu", "YWJz", "cmFk", "dGFu"]
                         ],
                         [
                              ["Y29z", "YWJz", "bW9k"],
                              ["bGJo", "YWJz", "dW5k", "bGJo", "cmFk", "cmFk", "dW5k", "YWJz", "ZXhw", "ZGZt", "Y29z", "Y29z"]
                         ],
                         [
                              ["dW5k", "dW5k"],
                              ["ZGZt", "ZGZt", "dW5k", "cmFk", "ZGZt", "c2lu", "cmFk", "YWJz", "dW5k", "bGJo", "ZGZt", "ZXhw"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "dW5k", "YWJz", "cmFk", "Y29z", "ZXhw", "dGFu", "dGFu"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "ZXhw", "c2lu", "ZXhw", "dW5k", "dW5k", "dW5k", "bW9k", "dW5k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "bW9k", "ZGZt", "YWJz", "ZXhw", "dGFu", "c2lu", "ZXhw"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "c2lu", "cmFk", "Y29z", "cmFk", "dW5k", "ZGZt", "dGFu"]
                         ]
                    ],
                    [
                         [
                              ["ZXhw", "dGFu"],
                              ["c2lu", "ZGZt", "ZXhw", "bW9k", "ZXhw", "c2lu", "YWJz", "cmFk", "cmFk", "Y29z", "bW9k", "ZXhw"]
                         ],
                         [
                              ["Y29z", "ZGZt", "ZGZt"],
                              ["YWJz", "cmFk", "c2lu", "Y29z", "YWJz", "ZGZt", "YWJz", "dW5k", "dW5k", "Y29z", "dW5k", "Y29z"]
                         ],
                         [
                              ["Y29z", "YWJz", "dGFu"],
                              ["ZGZt", "bW9k", "YWJz", "ZGZt", "c2lu", "YWJz", "dW5k", "dW5k", "YWJz", "ZXhw", "bW9k", "Y29z"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "dW5k", "dGFu", "YWJz", "YWJz", "ZGZt", "dW5k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "ZXhw", "bGJo", "bGJo", "YWJz", "dGFu", "dW5k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "bW9k", "cmFk", "Y29z", "ZXhw", "dW5k", "ZXhw", "cmFk"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "YWJz"]
                         ]
                    ],
                    [
                         [
                              ["Y29z", "Y29z", "dGFu"],
                              ["bW9k", "cmFk", "bGJo", "dGFu", "dW5k", "Y29z", "bGJo", "ZGZt", "bGJo", "bW9k", "ZGZt", "c2lu"]
                         ],
                         [
                              ["bW9k", "bGJo"],
                              ["dW5k", "ZGZt", "ZXhw", "YWJz", "c2lu", "ZXhw", "ZGZt", "bW9k", "ZXhw", "dW5k", "ZGZt", "bW9k"]
                         ],
                         [
                              ["ZXhw", "ZXhw"],
                              ["ZXhw", "Y29z", "dW5k", "ZXhw", "dGFu", "YWJz", "dW5k", "ZXhw", "dGFu", "dGFu", "dW5k", "c2lu"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "bGJo", "dW5k", "bW9k", "ZGZt", "ZGZt", "YWJz"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "dGFu", "YWJz", "Y29z", "ZXhw", "ZGZt", "YWJz", "ZXhw"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "ZXhw", "dW5k", "dGFu", "dGFu", "dW5k", "bW9k", "ZGZt"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "ZXhw", "YWJz", "dGFu", "YWJz", "bGJo", "bW9k"]
                         ]
                    ],
                    [
                         [
                              ["ZGZt"],
                              ["c2lu", "ZXhw", "dW5k", "dW5k", "dGFu", "dW5k", "ZXhw", "c2lu", "ZXhw", "bW9k", "ZGZt", "ZXhw"]
                         ],
                         [
                              ["Y29z", "YWJz"],
                              ["c2lu", "cmFk", "bGJo", "cmFk", "YWJz", "bGJo", "ZGZt", "dGFu", "ZGZt", "dW5k", "ZXhw", "dW5k"]
                         ],
                         [
                              ["dW5k"],
                              ["cmFk", "YWJz", "Y29z", "bW9k", "bGJo", "bGJo", "c2lu", "c2lu", "ZGZt", "dW5k", "bGJo", "c2lu"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "bW9k", "ZGZt", "YWJz", "ZXhw", "YWJz", "ZXhw"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "YWJz", "Y29z", "ZXhw", "Y29z", "dW5k", "YWJz"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "dW5k", "YWJz", "c2lu", "bW9k", "dW5k", "YWJz"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "ZXhw", "c2lu", "dW5k", "dGFu", "dW5k"]
                         ]
                    ],
                    [
                         [
                              ["ZGZt"],
                              ["ZXhw", "c2lu", "bW9k", "ZGZt", "cmFk", "bW9k", "ZGZt", "cmFk", "bGJo", "dGFu", "ZGZt", "ZXhw"]
                         ],
                         [
                              ["Y29z", "Y29z"],
                              ["bGJo", "bW9k", "ZGZt", "YWJz", "dGFu", "bW9k", "bGJo", "YWJz", "bGJo", "dGFu", "YWJz", "bGJo"]
                         ],
                         [
                              ["dW5k"],
                              ["dGFu", "ZGZt", "bW9k", "dW5k", "bGJo", "c2lu", "bW9k", "ZGZt", "dW5k", "dW5k", "ZXhw", "bGJo"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "bW9k", "cmFk", "bW9k", "cmFk", "dW5k", "dGFu"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "Y29z", "bGJo", "bW9k", "cmFk", "bGJo", "Y29z"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "ZGZt", "ZXhw", "ZXhw", "YWJz", "ZXhw", "c2lu"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "c2lu", "Y29z", "c2lu"]
                         ]
                    ],
                    [
                         [
                              ["ZGZt", "ZXhw"],
                              ["ZXhw", "cmFk", "bW9k", "ZGZt", "dW5k", "dGFu", "dW5k", "cmFk", "dW5k", "dGFu", "dGFu", "dW5k"]
                         ],
                         [
                              ["Y29z", "Y29z", "ZXhw"],
                              ["bGJo", "ZGZt", "Y29z", "ZXhw", "cmFk", "cmFk", "c2lu", "ZXhw", "Y29z", "c2lu", "dW5k", "ZXhw"]
                         ],
                         [
                              ["dW5k", "c2lu"],
                              ["ZXhw", "c2lu", "YWJz", "bGJo", "YWJz", "c2lu", "bW9k", "dW5k", "bGJo", "ZXhw", "c2lu", "ZGZt"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "c2lu", "dW5k", "YWJz", "cmFk", "YWJz", "Y29z", "ZGZt"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "bGJo", "Y29z", "bGJo", "dGFu", "c2lu", "bW9k", "cmFk"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "dGFu", "bGJo", "bGJo", "c2lu", "YWJz", "YWJz", "ZXhw"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "c2lu", "cmFk", "Y29z", "bW9k", "ZGZt", "YWJz", "bW9k"]
                         ]
                    ],
                    [
                         [
                              ["ZGZt", "ZXhw"],
                              ["c2lu", "bGJo", "dW5k", "dW5k", "cmFk", "dGFu", "Y29z", "bGJo", "bGJo", "ZXhw", "dGFu", "Y29z"]
                         ],
                         [
                              ["Y29z", "Y29z", "ZXhw"],
                              ["dW5k", "bW9k", "dW5k", "bGJo", "bGJo", "dGFu", "c2lu", "c2lu", "ZGZt", "c2lu", "dGFu", "cmFk"]
                         ],
                         [
                              ["dW5k", "c2lu"],
                              ["Y29z", "bW9k", "ZGZt", "Y29z", "bGJo", "bGJo", "cmFk", "cmFk", "dW5k", "Y29z", "ZXhw", "dGFu"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "Y29z", "c2lu", "dW5k", "ZXhw", "YWJz", "dW5k", "bW9k", "ZGZt"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "bGJo", "Y29z", "ZGZt", "cmFk", "bW9k", "cmFk", "bW9k"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "c2lu", "dGFu", "bGJo", "c2lu", "YWJz", "dW5k", "ZGZt", "Y29z"]
                         ],
                         [
                              ["c2lu"],
                              ["c2lu", "c2lu", "c2lu", "c2lu", "YWJz", "c2lu", "dGFu", "dW5k", "bW9k", "dW5k", "dW5k", "cmFk"]
                         ]
                    ]
               ], t
          }(),
          Ue = function () {
               function t() {}
               return t.a = {
                    sin: 0,
                    cos: 1,
                    abs: 2,
                    exp: 3,
                    tan: 4,
                    mod: 5,
                    rad: 6,
                    dfm: 7,
                    und: 8,
                    lbh: 9
               }, t
          }(),
          Le = function () {},
          He = function () {},
          Ve = function () {};

     function $e(r, n, e) {
          var i, o = new t;
          n.esqure, i = Boolean(e) ? 2.119954578078467 : 2.14675498;
          var a = ri(r.X, r.Y, i, n);
          return o.B = a[0], o.L = a[1], o.H = 0, o
     }

     function Ke(t, n) {
          var e = new r,
               i = new He;
          i.dX = -3457e3, i.dY = 0, i.dMl = 2.1199932653;
          var o = new Le;
          o.a = 6378245, o.b = 6356863.0188, o.fe = 1 / 298.3;
          var a = ti(t.B, t.L, i, o);
          return e.X = a[0], e.Y = a[1], e.Z = 0, e
     }

     function Qe(r, n) {
          var e = new t,
               i = (121 + 28 / 60) / 180 * Math.PI,
               o = ri(r.X, r.Y, i, n);
          return e.B = o[0], e.L = o[1], e.H = 0, e
     }

     function ti(t, r, n, e) {
          var i, o, a, u, s, c, f, l, h, d, p, m = Ye(e.a * e.a - e.b * e.b) / e.a,
               w = Ye(e.a * e.a - e.b * e.b) / e.b,
               v = function (t, r, n, e, i, o) {
                    var a = o / Ye(1 - e * e * Ae(t) * Ae(t)),
                         u = je(t),
                         s = i * Je(t),
                         c = n + a / 2 * u * Je(t) * Je(t) * r * r + a / 24 * u * Je(t) * Je(t) * Je(t) * Je(t) * (5 - u * u + 9 * s * s + 4 * Number(Te(s, 4))) * Number(Te(r, 4)) + a / 720 * u * Je(t) * Number(Te(Je(t), 5)) * (61 - 58 * u * u + Number(Te(u, 4))) * Number(Te(r, 6)),
                         f = a * Je(t) * r + a / 6 * Number(Te(Je(t), 3)) * (1 - u * u + s * s) * r * r * r + a / 120 * Number(Te(Je(t), 5)) * (5 - 18 * u * u + Number(Te(u, 4)) + 14 * s * s - 58 * s * s * u * u) * Number(Te(r, 5));
                    return [c, f]
               }(t, r - n.dMl, (i = t, o = e.a, h = (c = 5 * (a = m) * a * (s = 3 * a * a * (u = o * (1 - a * a)) / 2) / 4) / 8 + 3 * (f = 7 * a * a * c / 6) / 16 + 7 * (l = 9 * a * a * f / 8) / 32, d = f / 32 + l / 16, p = l / 128, (u + s / 2 + 3 * c / 8 + 5 * f / 16 + 35 * l / 128) * i - (s / 2 + c / 2 + 15 * f / 32 + 7 * l / 16) * Ae(2 * i) / 2 + h * Ae(4 * i) / 4 - d * Ae(6 * i) / 6 + p * Ae(8 * i) / 8), m, w, e.a);
          return [v[0] + n.dX, v[1] + n.dY]
     }

     function ri(t, r, n, e) {
          var i = Ye(e.esqure),
               o = i / Ye(1 - e.esqure),
               a = function (t, r, n) {
                    var e, i, o, a, u, s, c, f, l, h, d, p, m;
                    c = (i = 3 * n * n * (e = r * (1 - n * n)) / 2) / 2 + (o = 5 * n * n * i / 4) / 2 + 15 * (a = 7 * n * n * o / 6) / 32 + 7 * (u = 9 * n * n * a / 8) / 16, f = o / 8 + 3 * a / 16 + 7 * u / 32, l = a / 32 + u / 16, h = u / 128, d = t / (s = e + i / 2 + 3 * o / 8 + 5 * a / 16 + 35 * u / 128);
                    for (; m = -c * Ae(2 * d) / 2 + f * Ae(4 * d) / 4 - l * Ae(6 * d) / 6 + h * Ae(8 * d) / 8, !(Ce(d - (p = (t - m) / s)) <= 1e-11);) d = p;
                    return p
               }(t, e.a, i);
          return function (t, r, n, e, i, o) {
               var a, u, s, c, f, l;
               return a = t / Ye(1 - e * e * Ae(r) * Ae(r)), u = t * (1 - e * e) / Number(Te(1 - e * e * Ae(r) * Ae(r), 1.5)), s = i * i * Je(r) * Je(r), c = je(r), f = r - c * n * n / (2 * u * a) + c * Number(Te(n, 4)) * (5 + 3 * c * c + s * s - 9 * c * c * s * s) / (24 * u * Number(Te(a, 3))) - c * Number(Te(n, 6)) * (61 + 90 * c * c + 45 * Number(Te(c, 4))) / (720 * u * Math.pow(a, 5)), l = o + n / (a * Je(r)) - Number(Te(n, 3)) * (1 + 2 * c * c + s * s) / (6 * Number(Te(a, 3)) * Je(r)) + Number(Te(n, 5)) * (5 + 28 * c * c + 24 * Number(Te(c, 4)) + 6 * s * s + 8 * c * c * s * s) / (120 * Number(Te(a, 5)) * Je(r)), [f, l]
          }(e.a, a, r, i, o, n)
     }

     function ni(t, n) {
          var e, i = new r;
          return e = n.a / Ye(1 - n.esqure * Ae(t.B) * Ae(t.B)), i.X = (e + t.H) * Je(t.B) * Je(t.L), i.Y = (e + t.H) * Je(t.B) * Ae(t.L), i.Z = (e * (1 - n.esqure) + t.H) * Ae(t.B), i
     }

     function ei(t, n) {
          var e = new r,
               i = new Ve,
               o = [t.X, t.Y, t.Z],
               a = [];
          switch (n) {
               case 1:
                    i.d4 = Re.t(Re.mt[0][0], Ue.a), i.d6 = Re.t(Re.mt[0][1], Ue.a), i.d13 = Re.t(Re.mt[0][2], Ue.a), i.d1000 = Re.t(Re.mt[0][3], Ue.a), i.d18 = Re.t(Re.mt[0][4], Ue.a), i.d27 = Re.t(Re.mt[0][5], Ue.a), i.d25 = -Re.t(Re.mt[0][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case 2:
                    i.d4 = Re.t(Re.mt[1][0], Ue.a), i.d6 = Re.t(Re.mt[1][1], Ue.a), i.d13 = Re.t(Re.mt[1][2], Ue.a), i.d1000 = -Re.t(Re.mt[1][3], Ue.a), i.d18 = Re.t(Re.mt[1][4], Ue.a), i.d27 = Re.t(Re.mt[1][5], Ue.a), i.d25 = -Re.t(Re.mt[1][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case 3:
                    i.d4 = Re.t(Re.mt[2][0], Ue.a), i.d6 = Re.t(Re.mt[2][1], Ue.a), i.d13 = Re.t(Re.mt[2][2], Ue.a), i.d1000 = -Re.t(Re.mt[2][3], Ue.a), i.d18 = Re.t(Re.mt[2][4], Ue.a), i.d27 = Re.t(Re.mt[2][5], Ue.a), i.d25 = -Re.t(Re.mt[2][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case 4:
                    i.d4 = -Re.t(Re.mt[3][0], Ue.a), i.d6 = Re.t(Re.mt[3][1], Ue.a), i.d13 = Re.t(Re.mt[3][2], Ue.a), i.d1000 = -Re.t(Re.mt[3][3], Ue.a), i.d18 = Re.t(Re.mt[3][4], Ue.a), i.d27 = Re.t(Re.mt[3][5], Ue.a), i.d25 = -Re.t(Re.mt[3][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case 5:
                    i.d4 = -Re.t(Re.mt[4][0], Ue.a), i.d6 = Re.t(Re.mt[4][1], Ue.a), i.d13 = Re.t(Re.mt[4][2], Ue.a), i.d1000 = -Re.t(Re.mt[4][3], Ue.a), i.d18 = Re.t(Re.mt[4][4], Ue.a), i.d27 = Re.t(Re.mt[4][5], Ue.a), i.d25 = -Re.t(Re.mt[4][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case 6:
                    i.d4 = -Re.t(Re.mt[5][0], Ue.a), i.d6 = -Re.t(Re.mt[5][1], Ue.a), i.d13 = -Re.t(Re.mt[5][2], Ue.a), i.d1000 = -Re.t(Re.mt[5][3], Ue.a), i.d18 = -Re.t(Re.mt[5][4], Ue.a), i.d27 = -Re.t(Re.mt[5][5], Ue.a), i.d25 = Re.t(Re.mt[5][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case 7:
                    i.d4 = -Re.t(Re.mt[6][0], Ue.a), i.d6 = -Re.t(Re.mt[6][1], Ue.a), i.d13 = -Re.t(Re.mt[6][2], Ue.a), i.d1000 = -Re.t(Re.mt[6][3], Ue.a), i.d18 = -Re.t(Re.mt[6][4], Ue.a), i.d27 = -Re.t(Re.mt[6][5], Ue.a), i.d25 = Re.t(Re.mt[6][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case -1:
                    i.d4 = -Re.t(Re.mt[7][0], Ue.a), i.d6 = -Re.t(Re.mt[7][1], Ue.a), i.d13 = -Re.t(Re.mt[7][2], Ue.a), i.d1000 = -Re.t(Re.mt[7][3], Ue.a), i.d18 = -Re.t(Re.mt[7][4], Ue.a), i.d27 = -Re.t(Re.mt[7][5], Ue.a), i.d25 = Re.t(Re.mt[7][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case -2:
                    i.d4 = -Re.t(Re.mt[8][0], Ue.a), i.d6 = -Re.t(Re.mt[8][1], Ue.a), i.d13 = -Re.t(Re.mt[8][2], Ue.a), i.d1000 = Re.t(Re.mt[8][3], Ue.a), i.d18 = -Re.t(Re.mt[8][4], Ue.a), i.d27 = -Re.t(Re.mt[8][5], Ue.a), i.d25 = -Re.t(Re.mt[8][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case -3:
                    i.d4 = -Re.t(Re.mt[9][0], Ue.a), i.d6 = -Re.t(Re.mt[9][1], Ue.a), i.d13 = -Re.t(Re.mt[9][2], Ue.a), i.d1000 = Re.t(Re.mt[9][3], Ue.a), i.d18 = -Re.t(Re.mt[9][4], Ue.a), i.d27 = -Re.t(Re.mt[9][5], Ue.a), i.d25 = Re.t(Re.mt[9][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case -4:
                    i.d4 = Re.t(Re.mt[10][0], Ue.a), i.d6 = -Re.t(Re.mt[10][1], Ue.a), i.d13 = -Re.t(Re.mt[10][2], Ue.a), i.d1000 = Re.t(Re.mt[10][3], Ue.a), i.d18 = -Re.t(Re.mt[10][4], Ue.a), i.d27 = -Re.t(Re.mt[10][5], Ue.a), i.d25 = Re.t(Re.mt[10][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case -5:
                    i.d4 = Re.t(Re.mt[11][0], Ue.a), i.d6 = -Re.t(Re.mt[11][1], Ue.a), i.d13 = -Re.t(Re.mt[11][2], Ue.a), i.d1000 = Re.t(Re.mt[11][3], Ue.a), i.d18 = -Re.t(Re.mt[11][4], Ue.a), i.d27 = -Re.t(Re.mt[11][5], Ue.a), i.d25 = Re.t(Re.mt[11][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case -6:
                    i.d4 = Re.t(Re.mt[12][0], Ue.a), i.d6 = Re.t(Re.mt[12][1], Ue.a), i.d13 = Re.t(Re.mt[12][2], Ue.a), i.d1000 = Re.t(Re.mt[12][3], Ue.a), i.d18 = Re.t(Re.mt[12][4], Ue.a), i.d27 = Re.t(Re.mt[12][5], Ue.a), i.d25 = -Re.t(Re.mt[12][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2];
                    break;
               case -7:
                    i.d4 = Re.t(Re.mt[13][0], Ue.a), i.d6 = Re.t(Re.mt[13][1], Ue.a), i.d13 = Re.t(Re.mt[13][2], Ue.a), i.d1000 = Re.t(Re.mt[13][3], Ue.a), i.d18 = Re.t(Re.mt[13][4], Ue.a), i.d27 = Re.t(Re.mt[13][5], Ue.a), i.d25 = -Re.t(Re.mt[13][6], Ue.a), a[0] = i.d4 + (1 + i.d1000) * (o[0] + i.d25 * o[1] - i.d27 * o[2]), a[1] = i.d6 + (1 + i.d1000) * (o[0] * -i.d25 + i.d18 * o[2] + o[1]), a[2] = i.d13 + (1 + i.d1000) * (o[0] * i.d27 + o[2] - i.d18 * o[1]), e.X = a[0], e.Y = a[1], e.Z = a[2]
          }
          return e
     }

     function ii(r, n) {
          var e, i, o, a = new t;
          for (a.L = We(r.Y / r.X), a.L < 0 && (a.L += 3.14159265358979), i = We(r.Z / Ye(r.X * r.X + r.Y * r.Y)), a.B = 0, o = Ce(i - a.B); o > 1e-8;) a.B = i, e = n.a / Ye(1 - n.esqure * Ae(a.B) * Ae(a.B)), a.H = r.Z / Ae(a.B) - e * (1 - n.esqure), i = We(r.Z * (e + a.H) / (Ye(r.X * r.X + r.Y * r.Y) * (e * (1 - n.esqure) + a.H))), o = Ce(i - a.B);
          return a.B = i, e = n.a / Ye(1 - n.esqure * Ae(a.B) * Math.sin(a.B)), a.H = Math.sqrt(r.X * r.X + r.Y * r.Y) / Math.cos(a.B) - e, a
     }

     function oi(t) {
          var r = t < 0 ? -1 : 1;
          t = Ce(t);
          var n = Be((t + 1e-5) / 1e4);
          (t -= 1e4 * n) < 0 && (n -= 1, t += 1e4);
          var e = Be((t + 1e-5) / 100);
          return (t -= 100 * e) < 0 && (e -= 1, t += 100), t = r * (3600 * n + 60 * e + t) / 206264.80624709636
     }

     function ai(t) {
          var r = (t *= 206264.80624709636) < 0 ? -1 : 1;
          t = Ce(t);
          var n = Be(t / 3600 + 1e-7);
          (t -= 3600 * n) < 0 && (n -= 1, t += 3600);
          var e = Be(t / 60 + 1e-4);
          return (t -= 60 * e) < 0 && (e -= 1, t += 60), (t = 1e4 * n + 100 * e + t) * r
     }

     function ui(t) {
          var r = Be(t),
               n = 60 * (t - r),
               e = Be(n),
               i = 60 * (n - e),
               o = "";
          o = 0 === e ? "00" : e < 10 ? "0" + e : e.toString();
          var a = "";
          a = 0 === i ? "00" : i < 10 ? "0" + i : i.toString();
          var u = r.toString() + o + a;
          return Number(u)
     }
     var si = function () {
               function e() {}
               return e.prototype.CoordTran = function (e, i, o) {
                    var a = new t,
                         u = new r,
                         s = new r;
                    u.X = e + 3457087.2659, u.Y = i + 256.8247, u.Z = o;
                    var c = new n;
                    c.a = 6378137, c.esqure = .0066943800229;
                    var f = new n;
                    f.a = 6378245, f.esqure = .006693421622965943, (a = $e(u, c, 1)).H = o, s = ni(a, c);
                    new r;
                    var l = new t;
                    ai((l = ii(ei(s, 1), f)).B), ai(l.L);
                    var h = Ke(l),
                         d = new r;
                    return d.X = h.X, d.Y = h.Y, d.Z = l.H, d
               }, e
          }(),
          ci = function () {
               function e() {}
               return e.prototype.CoordTran = function (e, i, o) {
                    var a = new r;
                    a.X = i, a.Y = e, a.Z = o, a.X += 3457087.2659, a.Y += 256.8247;
                    var u = new n;
                    u.a = 6378137, u.esqure = .0066943800229;
                    var s = new n;
                    s.a = 6378137, s.esqure = .00669437999013;
                    var c = new t,
                         f = new t;
                    new r, new r;
                    a.Z = 0, (c = $e(a, u, 1)).H = o, f = ii(ei(ni(c, u), 4), s);
                    var l = new r;
                    return l.Y = this.lattran(ai(f.B)), l.X = this.lontran(ai(f.L)), l.Z = f.H, l
               }, e.prototype.lattran = function (t) {
                    var r, n = String(t),
                         e = 0,
                         i = 0;
                    return r = Number(n.substring(0, 2)), n.length > 2 && (e = Number(n.substring(2, 4))), n.length > 4 && (i = Number(n.substring(4))), r + (i / 60 + e) / 60
               }, e.prototype.lontran = function (t) {
                    var r, n = String(t),
                         e = 0,
                         i = 0;
                    return r = Number(n.substring(0, 3)), n.length > 3 && (e = Number(n.substring(3, 5))), n.length > 5 && (i = Number(n.substring(5))), r + (i / 60 + e) / 60
               }, e
          }(),
          fi = function () {
               function e() {}
               return e.prototype.CoordTran = function (e, i, o) {
                    var a = new r,
                         u = new t,
                         s = new n;
                    s.a = 6378137, s.esqure = .0066943800229;
                    var c = new n;
                    c.a = 6378245, c.esqure = .006693421622965943, a.X = e + 3457e3, a.Y = i, a.Z = o, u = Qe(a, c);
                    var f = new t;
                    new r, new r;
                    u.H = o, f = ii(ei(ni(u, c), -1), s);
                    var l = new He;
                    l.dX = -3457087.2659, l.dY = -256.8247, l.dMl = 2.119954578078467;
                    var h = new Le;
                    h.a = 6378137, h.b = 6356752.314140356, h.fe = 1 / 298.257223563;
                    var d = ti(f.B, f.L, l, h),
                         p = new r;
                    return p.X = d[0], p.Y = d[1], p.Z = f.H, p
               }, e
          }();
     return {
          a: ci,
          b: function () {
               function e() {}
               return e.prototype.CoordTran = function (e, i, o) {
                    e = this.changeToDFM(e), i = this.changeToDFM(i);
                    var a = new n;
                    a.a = 6378137, a.esqure = .00669437999013;
                    var u = new n;
                    u.a = 6378137, u.esqure = .0066943800229;
                    var s = new t,
                         c = new t;
                    new r, new r;
                    i = oi(i), e = oi(e), c.B = i, c.L = e, c.H = o, s = ii(ei(ni(c, a), -4), u);
                    var f = new He;
                    f.dX = -3457087.2659, f.dY = -256.8247, f.dMl = 2.119954578078467;
                    var l = new Le;
                    l.a = 6378137, l.b = 6356752.314140356, l.fe = 1 / 298.257223563;
                    var h = ti(s.B, s.L, f, l),
                         d = new r;
                    return d.Y = h[0], d.X = h[1], d
               }, e.prototype.changeToDFM = function (t) {
                    var r = Be(t),
                         n = 60 * (t - r),
                         e = Be(n),
                         i = 60 * (n - e),
                         o = "";
                    o = 0 === e ? "00" : e < 10 ? "0" + e : e.toString();
                    var a = "";
                    a = 0 === i ? "00" : i < 10 ? "0" + i : i.toString();
                    var u = r.toString() + o + a;
                    return Number(u)
               }, e
          }(),
          c: fi,
          d: si,
          e: function (e, i, o) {
               var a = new t,
                    u = new r,
                    s = new r;
               u.X = e + 3457087.2659, u.Y = i + 256.8247, u.Z = o;
               var c = new n;
               c.a = 6378137, c.esqure = .0066943800229;
               var f = new n;
               f.a = 6378245, f.esqure = .006693421622965943, (a = $e(u, c, 1)).H = o, s = ni(a, c), new r;
               var l = new t;
               ai((l = ii(ei(s, 1), f)).B), ai(l.L);
               var h = Ke(l),
                    d = new r;
               return d.X = h.X, d.Y = h.Y, d.Z = l.H, d
          },
          f: function (e, i, o) {
               var a = new r,
                    u = new t,
                    s = new n;
               s.a = 6378137, s.esqure = .0066943800229;
               var c = new n;
               c.a = 6378245, c.esqure = .006693421622965943, a.X = e + 3457e3, a.Y = i, a.Z = o, u = Qe(a, c);
               var f = new t;
               new r, new r, u.H = o, f = ii(ei(ni(u, c), -1), s);
               var l = new He;
               l.dX = -3457087.2659, l.dY = -256.8247, l.dMl = 2.119954578078467;
               var h = new Le;
               h.a = 6378137, h.b = 6356752.314140356, h.fe = 1 / 298.257223563;
               var d = ti(f.B, f.L, l, h),
                    p = new r;
               return p.X = d[0], p.Y = d[1], p.Z = f.H, p
          },
          g: function (e, i, o) {
               e = ui(e), i = ui(i);
               var a = new n;
               a.a = 6378137, a.esqure = .00669437999013;
               var u = new n;
               u.a = 6378137, u.esqure = .0066943800229;
               var s = new t,
                    c = new t;
               new r, new r, i = oi(i), e = oi(e), c.B = i, c.L = e, c.H = o, s = ii(ei(ni(c, a), -4), u);
               var f = new He;
               f.dX = -3457087.2659, f.dY = -256.8247, f.dMl = 2.119954578078467;
               var l = new Le;
               l.a = 6378137, l.b = 6356752.314140356, l.fe = 1 / 298.257223563;
               var h = ti(s.B, s.L, f, l),
                    d = new r;
               return d.Y = h[0], d.X = h[1], d
          },
          h: function (e, i, o) {
               var a = new r;
               a.X = i, a.Y = e, a.Z = o, a.X += 3457087.2659, a.Y += 256.8247;
               var u = new n;
               u.a = 6378137, u.esqure = .0066943800229;
               var s = new n;
               s.a = 6378137, s.esqure = .00669437999013;
               var c = new t,
                    f = new t;
               new r, new r, a.Z = 0, (c = $e(a, u, 1)).H = o, f = ii(ei(ni(c, u), 4), s);
               var l = new r;
               return l.Y = function (t) {
                    var r = String(t),
                         n = 0,
                         e = 0,
                         i = 0;
                    n = Number(r.substring(0, 2)), r.length > 2 && (e = Number(r.substring(2, 4)));
                    r.length > 4 && (i = Number(r.substring(4)));
                    return n + (i / 60 + e) / 60
               }(ai(f.B)), l.X = function (t) {
                    var r = String(t),
                         n = 0,
                         e = 0,
                         i = 0;
                    n = Number(r.substring(0, 3)), r.length > 3 && (e = Number(r.substring(3, 5)));
                    r.length > 5 && (i = Number(r.substring(5)));
                    return n + (i / 60 + e) / 60
               }(ai(f.L)), l.Z = f.H, l
          }
     }
}));
//# sourceMappingURL=CoordTran.min.js.map
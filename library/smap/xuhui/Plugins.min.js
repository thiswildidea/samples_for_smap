! function (e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : e.Plugins = t()
}(this, function () {
    "use strict";
    var e = (t.prototype._addListener = function (e, t, r) {
        if (this.emit("newListener", e, t), this.events.has(e)) {
            var i = this.events.get(e);
            r ? i.unshift(t) : i.push(t)
        } else this.events.set(e, [t]);
        var n = this.getMaxListeners();
        if (0 < n && this.listenerCount(e) > n) {
            var o = new Error("Possible EventEmitter memory leak detected.\n         " + this.listenerCount(e) + " " + e.toString() + " listeners.\n         Use emitter.setMaxListeners() to increase limit");
            o.name = "MaxListenersExceededWarning", console.warn(o)
        }
        return this
    }, t.prototype.addListener = function (e, t) {
        return this._addListener(e, t, !1)
    }, t.prototype.emit = function (e) {
        for (var t = [], r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
        if (this.events.has(e)) {
            for (var i = 0, n = this.events.get(e).slice(); i < n.length; i++) {
                var o = n[i];
                try {
                    o.apply(this, t)
                } catch (e) {
                    this.emit("error", e)
                }
            }
            return !0
        }
        if ("error" === e) throw 0 < t.length ? t[0] : Error("Unhandled error.");
        return !1
    }, t.prototype.eventNames = function () {
        return Array.from(this.events.keys())
    }, t.prototype.getMaxListeners = function () {
        return this.maxListeners || t.defaultMaxListeners
    }, t.prototype.listenerCount = function (e) {
        return this.events.has(e) ? this.events.get(e).length : 0
    }, t.prototype._listeners = function (e, t, r) {
        if (!e.events.has(t)) return [];
        var i = e.events.get(t);
        return r ? this.unwrapListeners(i) : i.slice(0)
    }, t.prototype.unwrapListeners = function (e) {
        for (var t = new Array(e.length), r = 0; r < e.length; r++) t[r] = e[r].listener || e[r];
        return t
    }, t.prototype.listeners = function (e) {
        return this._listeners(this, e, !0)
    }, t.prototype.rawListeners = function (e) {
        return this._listeners(this, e, !1)
    }, t.prototype.off = function (e, t) {
        return this.removeListener(e, t)
    }, t.prototype.on = function (e, t) {
        return this.addListener(e, t)
    }, t.prototype.once = function (e, t) {
        var r = this.onceWrap(e, t);
        return this.on(e, r), this
    }, t.prototype.onceWrap = function (e, t) {
        function r() {
            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
            this.context.removeListener(this.eventName, this.rawListener), this.listener.apply(this.context, e)
        }
        var i = {
                eventName: e,
                listener: t,
                rawListener: r,
                context: this
            },
            n = r.bind(i);
        return (i.rawListener = n).listener = t, n
    }, t.prototype.prependListener = function (e, t) {
        return this._addListener(e, t, !0)
    }, t.prototype.prependOnceListener = function (e, t) {
        var r = this.onceWrap(e, t);
        return this.prependListener(e, r), this
    }, t.prototype.removeAllListeners = function (e) {
        var t = this;
        if (void 0 === this.events) return this;
        if (this.events.has(e)) {
            var r = this.events.get(e).slice();
            this.events.delete(e);
            for (var i = 0, n = r; i < n.length; i++) {
                var o = n[i];
                this.emit("removeListener", e, o)
            }
        } else this.eventNames().map(function (e) {
            t.removeAllListeners(e)
        });
        return this
    }, t.prototype.removeListener = function (e, t) {
        if (this.events.has(e)) {
            var r = this.events.get(e); - 1 !== r.indexOf(t) && (r.splice(r.indexOf(t), 1), this.emit("removeListener", e, t), 0 === r.length && this.events.delete(e))
        }
        return this
    }, t.prototype.setMaxListeners = function (e) {
        return this.maxListeners = e, this
    }, t.defaultMaxListeners = 50, t);

    function t() {
        this.events = new Map
    }
    var p = (r.jsapi = "http://10.201.37.225:8080/smiapi/arcgis", r.jsapiversion4X = "4.16", r);

    function r() {}
    var a = p.jsapiversion4X,
        n = "next";

    function o(e) {
        if (null === e && (e = a), e.toString().toLowerCase() === n) return n;
        var t = e && e.match(/^(\d)\.(\d+)/);
        return t && {
            major: parseInt(t[1], 10),
            minor: parseInt(t[2], 10)
        }
    }

    function l(e) {
        return void 0 === e && (e = a), p.jsapi + "/" + e + "/init.js"
    }

    function s(e) {
        var t = document.createElement("link");
        return t.rel = "stylesheet", t.href = e, t
    }

    function c(e, t) {
        if (t) {
            var r = document.querySelector(t);
            r.parentNode.insertBefore(e, r)
        } else document.head.appendChild(e)
    }

    function u(e) {
        return document.querySelector('link[href*="' + e + '"]')
    }

    function d(e) {
        return !e || o(e) ? function (e) {
            void 0 === e && (e = a), null === e && (e = a);
            var t = l(e),
                r = t.substring(0, t.indexOf("init.js")),
                i = o(e);
            return i === n || 3 !== i.major ? r + "esri/themes/light/main.css" : r + (i.minor <= 10 ? "js/" : "") + "esri/css/esri.css"
        }(e) : e
    }

    function y(e, t) {
        var r = d(e),
            i = u(r);
        if (i || c(i = s(r), t), 4 === function (e) {
                null === e && (e = a);
                var t = e && e.match(/^(\d)\.(\d+)/);
                return t && {
                    major: parseInt(t[1], 10),
                    minor: parseInt(t[2], 10)
                }
            }(e).major) {
            var n = r.substring(0, r.indexOf("esri/themes/")) + "esri/themes/gis/css/gis.css",
                o = u(n);
            o || c(o = s(n), t)
        }
        return i
    }
    var B = {
            Promise: "undefined" != typeof window ? window.Promise : void 0
        },
        i = {};

    function f(e, t, r) {
        var i, n, o, a;
        r && (o = r, a = function (e) {
            o(e.error || new Error("There was an error attempting to load " + n.src)), n.removeEventListener("error", a, !1)
        }, (n = e).addEventListener("error", a, !1), i = a);
        var l = function () {
            t(e), e.removeEventListener("load", l, !1), i && e.removeEventListener("error", i, !1)
        };
        e.addEventListener("load", l, !1)
    }

    function h() {
        return document.querySelector("script[data-shsmi]")
    }

    function v() {
        var e = window.require;
        return e && e.on
    }

    function b(e) {
        void 0 === e && (e = {});
        var s = {};
        [i, e].forEach(function (e) {
            for (var t in e) Object.prototype.hasOwnProperty.call(e, t) && (s[t] = e[t])
        });
        var c = s.version,
            u = s.url || l(c);
        return new B.Promise(function (e, t) {
            var r, i, n = h();
            if (n) {
                var o = n.getAttribute("src");
                o !== u ? t(new Error("The ArcGIS API for JavaScript is already loaded (" + o + ").")) : v() ? e(n) : f(n, e, t)
            } else if (v()) t(new Error("The ArcGIS API for JavaScript is already loaded."));
            else {
                var a = s.css;
                if (a) y(!0 === a ? c : a, s.insertCssBefore);
                else y(null, s.insertCssBefore);
                if (s.dojoConfig) window.dojoConfig = s.dojoConfig;
                else {
                    var l = {
                        async: !0,
                        packages: [{
                            location: p.jsapi + "/extensions",
                            name: "82B44794-5CE0-A64A-9047F07CAF08BD2C"
                        }, {
                            location: p.jsapi + "/extensions/geolocation",
                            name: "geolocate",
                            main: "geolocate"
                        }],
                        deps: ["@dojo/framework/shim/main"],
                        has: {
                            "esri-promise-compatibility": 1,
                            "esri-featurelayer-webgl": 1
                        }
                    };
                    window.dojoConfig = l
                }
                r = u, (i = document.createElement("script")).type = "text/javascript", i.src = r, i.setAttribute("data-shsmi", "loading"), f(n = i, function () {
                    n.setAttribute("data-shsmi", "loaded"), e(n)
                }, t), document.head.appendChild(n)
            }
        })
    }

    function m(t) {
        return new B.Promise(function (r, e) {
            var i = window.require.on("error", e);
            window.require(t, function () {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                i.remove(), r(e)
            })
        })
    }

    function P(e, t) {
        if (void 0 === t && (t = {}), v()) return m(e);
        var r = h(),
            i = r && r.getAttribute("src");
        return !t.url && i && (t.url = i), b(t).then(function () {
            return m(e)
        })
    }
    var x = (w.prototype.S4 = function () {
        return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
    }, w.prototype.get_uuid = function () {
        return this.S4() + this.S4() + "-" + this.S4() + "-" + this.S4() + "-" + this.S4() + "-" + this.S4() + this.S4() + this.S4()
    }, w);

    function w() {
        this.uuid = this.get_uuid()
    }
    var g, L, C = (g = function (e, t) {
            return (g = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            g(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        R = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        k = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        A = (C(S, L = e), S.prototype.add = function (n) {
            var o = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/A60907A5-C7CC-FC45-C83A29B58E3F5EB6", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = new t(o.view, n.lineStrings, n.options);
                o.arcLineRendererArray.push([(new x).uuid, i]), r.add(o.view, i)
            }).catch(function (e) {
                console.error(e)
            })
        }, S.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.arcLineRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                })
            })
        }, S.prototype.setaltitude = function (t) {
            this.arcLineRendererArray && this.arcLineRendererArray.map(function (e) {
                e[1].setaltitude(t)
            })
        }, S.prototype.init = function (t) {
            return R(this, void 0, void 0, function () {
                return k(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, S);

    function S(e) {
        var t = L.call(this) || this;
        return t.arcLineRendererArray = [], t.view = null, t.init(e), t
    }
    var z, F, E = (z = function (e, t) {
            return (z = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            z(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        I = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        _ = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        O = (E(M, F = e), M.prototype.add = function (n) {
            var o = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/45F857C8-303E-9546-9A173A5DACF5B67D", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = new t(n.lineStrings, n.options);
                o.arcLineRendererArray.push([(new x).uuid, i]), r.add(o.view, i)
            }).catch(function (e) {
                console.error(e)
            })
        }, M.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.arcLineRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                })
            })
        }, M.prototype.setaltitude = function (t) {
            this.arcLineRendererArray && this.arcLineRendererArray.map(function (e) {
                e[1].setaltitude(t)
            })
        }, M.prototype.init = function (t) {
            return I(this, void 0, void 0, function () {
                return _(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, M);

    function M(e) {
        var t = F.call(this) || this;
        return t.arcLineRendererArray = [], t.view = null, t.init(e), t
    }
    var j, D, W = (j = function (e, t) {
            return (j = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            j(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        T = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        G = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Z = (W(H, D = e), H.prototype.add = function (n) {
            var o = this;
            void 0 === n && (n = {}), P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/6EB9F731-BBCF-C348-D5F8B690E99E091A", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = new t(o.view, n.center, n.radius, n.height, n.textureurl);
                r.add(o.view, i), o.auroraRendererArray.push([(new x).uuid, i])
            }).catch(function (e) {
                console.error(e)
            })
        }, H.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.auroraRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                }), r.auroraRendererArray = []
            })
        }, H.prototype.init = function (t) {
            return T(this, void 0, void 0, function () {
                return G(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, H);

    function H(e) {
        var t = D.call(this) || this;
        return t.auroraRendererArray = [], t.view = null, t.init(e), t
    }
    var q = (J.maploaded = "maploaded", J.zoomchanged = "zoomchanged", J.extentchanged = "extentchanged", J.centerchanged = "centerchanged", J.blur = "blur", J.click = "click", J.doubleclick = "doubleclick", J.drag = "drag", J.focus = "focus", J.hold = "hold", J.keydown = "key-down", J.keyup = "key-up", J.mousewheel = "mouse-wheel", J.pointerdown = "pointer-down", J.pointerenter = "pointer-enter", J.pointerleave = "pointer-leave", J.pointermove = "pointer-move", J.pointerup = "pointer-up", J.resize = "pointer-up", J.popupvisible = "popup-visible", J);

    function J() {}
    var X, Y, U = (X = function (e, t) {
            return (X = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            X(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        N = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        V = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        $ = (U(Q, Y = e), Q.prototype.add = function (a) {
            var l = this;
            void 0 === a && (a = {}), P(["esri/layers/GraphicsLayer", "esri/Graphic", "esri/layers/FeatureLayer"]).then(function (e) {
                var t = e[0],
                    n = e[1],
                    r = e[2];
                if (l.view) {
                    var i = null;
                    if (a.boundaryType && (i = l.view.map.findLayerById(a.boundaryType)), i || a.url && (i = new r({
                            url: a.url,
                            id: a.boundaryType,
                            title: a.boundaryType,
                            visible: !1
                        }), l.view.map.add(i)), i) {
                        var o = i.createQuery();
                        o.where = a.boundaryDefinition, i.queryFeatures(o).then(function (e) {
                            if (0 < e.features.length) {
                                var r, i = l.view.map.findLayerById(l.displayedLayerid);
                                void 0 === i && (i = new t({
                                    title: l.displayedLayerid + "边界",
                                    id: l.displayedLayerid,
                                    listMode: "hide"
                                }), l.view.map.add(i)), r = void 0 !== a.symbol ? a.symbol : {
                                    type: "simple-fill",
                                    color: [255, 255, 255, 0],
                                    outline: {
                                        color: [255, 255, 0, 1],
                                        width: "5px"
                                    }
                                }, e.features.map(function (e) {
                                    var t = new n({
                                        geometry: e.geometry,
                                        symbol: r,
                                        attributes: e.attributes
                                    });
                                    i.add(t)
                                })
                            }
                        })
                    }
                }
            }).catch(function (e) {
                console.error(e)
            })
        }, Q.prototype.remove = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && this.view.map.remove(e)
        }, Q.prototype.show = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !0)
        }, Q.prototype.hide = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !1)
        }, Q.prototype.init = function (t) {
            return N(this, void 0, void 0, function () {
                var i = this;
                return V(this, function (e) {
                    return this.displayedLayerid = (new x).uuid, this.view = t, this.view.on(q.click, function (r) {
                        i.view.hitTest(r).then(function (t) {
                            return N(i, void 0, void 0, function () {
                                return V(this, function (e) {
                                    return 0 < t.results.length && t.results[0].graphic.layer.id === this.displayedLayerid && this.emit(q.click, t.results[0].graphic, r.mapPoint), [2]
                                })
                            })
                        })
                    }), this.view.on(q.pointermove, function (r) {
                        i.view.hitTest(r).then(function (t) {
                            return N(i, void 0, void 0, function () {
                                return V(this, function (e) {
                                    return 0 < t.results.length && t.results[0].graphic.layer.id === this.displayedLayerid && this.emit(q.pointermove, t.results[0].graphic, r.mapPoint), [2]
                                })
                            })
                        })
                    }), [2]
                })
            })
        }, Q);

    function Q(e) {
        var t = Y.call(this) || this;
        return t.displayedLayerid = "", t.view = null, t.init(e), t
    }
    var K, ee, te = (K = function (e, t) {
            return (K = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            K(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        re = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        ie = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        ne = (te(oe, ee = e), oe.prototype.add = function (n) {
            var o = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/2F6637EA-8119-A957-B8685F98373F16C0", "esri/views/3d/externalRenderers"]).then(function (e) {
                var r = e[0],
                    i = e[1];
                n.points.forEach(function (e) {
                    var t = new r(o.view, e, n.options);
                    i.add(o.view, t), o.cloudRendererRendererArray.push([(new x).uuid, t])
                })
            }).catch(function (e) {
                console.error(e)
            })
        }, oe.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.cloudRendererRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                })
            })
        }, oe.prototype.init = function (t) {
            return re(this, void 0, void 0, function () {
                return ie(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, oe);

    function oe(e) {
        var t = ee.call(this) || this;
        return t.cloudRendererRendererArray = [], t.view = null, t.init(e), t
    }
    var ae, le, se = ((ae = function (e, t) {
        return (ae = Object.setPrototypeOf || {
                __proto__: []
            }
            instanceof Array && function (e, t) {
                e.__proto__ = t
            } || function (e, t) {
                for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
            })(e, t)
    }, function (e, t) {
        function r() {
            this.constructor = e
        }
        ae(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
    })(ce, le = e), ce.prototype.add = function (o) {
        var a = this;
        P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/Mesh", "82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/Extrusion", "esri/views/3d/externalRenderers"]).then(function (e) {
            var t = e[0],
                r = e[1],
                i = e[2],
                n = o.config;
            n.data = o.datas, a.mode = o.mode, n.mode = a.mode, n.slice = a.slice, n.stack = a.stack, "mesh" === a.mode ? (n.height = 1e3, a.contourMapLayerRenderer = new t(a.view, n)) : (n.height = 3e3, a.contourMapLayerRenderer = new r(a.view, n)), i.add(a.view, a.contourMapLayerRenderer)
        })
    }, ce.prototype.remove = function (e) {
        var t = this;
        P(["esri/views/3d/externalRenderers"]).then(function (e) {
            e[0].remove(t.view, t.contourMapLayerRenderer)
        })
    }, ce.prototype.init = function (e) {
        this.view = e
    }, ce);

    function ce(e) {
        var t = le.call(this) || this;
        return t.contourMapLayerRendererArray = [], t.contourMapLayerRenderer = null, t.mode = "mesh", t.slice = 0, t.stack = 0, t.view = null, t.init(e), t
    }
    var ue, pe, de = (ue = function (e, t) {
            return (ue = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            ue(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        ye = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        fe = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        he = (de(ve, pe = e), ve.prototype.add = function (n) {
            var o = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/FE81CC3A-24C4-EDC0-7922F5CE22CD1E23", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = new t(o.view, n.lineStrings, n.options);
                o.arcLineRendererArray.push([(new x).uuid, i]), r.add(o.view, i)
            }).catch(function (e) {
                console.error(e)
            })
        }, ve.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.arcLineRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                })
            })
        }, ve.prototype.setaltitude = function (t) {
            this.arcLineRendererArray && this.arcLineRendererArray.map(function (e) {
                e[1].setaltitude(t)
            })
        }, ve.prototype.init = function (t) {
            return ye(this, void 0, void 0, function () {
                return fe(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, ve);

    function ve(e) {
        var t = pe.call(this) || this;
        return t.arcLineRendererArray = [], t.view = null, t.init(e), t
    }
    var be, me, we = (be = function (e, t) {
            return (be = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            be(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        ge = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        xe = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Le = (we(Ce, me = e), Ce.prototype.drawcircle = function () {
            var p = this;
            P(["esri/views/draw/Draw", "esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/Point", "esri/geometry/geometryEngine"]).then(function (e) {
                var t = e[0],
                    a = e[1],
                    r = e[2],
                    l = e[3],
                    s = e[4];
                p.emit("drawbegin", "circle"), p.drawtool = new t({
                    view: p.view
                }), p.drawtool.reset();
                var c = p.view.map.findLayerById(p.displayedLayerid);
                null == c && (c = new r({
                    id: p.displayedLayerid,
                    title: "绘制结果显示层",
                    listMode: "hide"
                }), p.view.map.add(c));
                var i = (new x).uuid,
                    u = p.view.map.findLayerById(i);
                u || (u = new r({
                    id: p.displayedLayerid,
                    title: "绘制圆实时追踪显示层",
                    listMode: "hide"
                }), p.view.map.add(u));
                var n = p.drawtool.create("circle", {
                    mode: "click"
                });
                p.view.focus(), n.on("vertex-add", function (e) {
                    if (2 === e.vertices.length) {
                        u.removeAll();
                        var t = new l({
                                x: e.vertices[0][0],
                                y: e.vertices[0][1],
                                spatialReference: p.view.spatialReference
                            }),
                            r = new l({
                                x: e.vertices[1][0],
                                y: e.vertices[1][1],
                                spatialReference: p.view.spatialReference
                            }),
                            i = s.distance(t, r, "meters"),
                            n = s.buffer(t, i, "meters"),
                            o = new a({
                                geometry: n,
                                symbol: p.polygonsymbol
                            });
                        u.add(o)
                    }
                }), n.on("vertex-remove", function (e) {
                    console.log(e)
                }), n.on("cursor-update", function (e) {
                    if (2 === e.vertices.length) {
                        u.removeAll();
                        var t = new l({
                                x: e.vertices[0][0],
                                y: e.vertices[0][1],
                                spatialReference: p.view.spatialReference
                            }),
                            r = new l({
                                x: e.vertices[1][0],
                                y: e.vertices[1][1],
                                spatialReference: p.view.spatialReference
                            }),
                            i = s.distance(t, r, "meters"),
                            n = s.buffer(t, i, "meters"),
                            o = new a({
                                geometry: n,
                                symbol: p.polygonsymbol
                            });
                        u.add(o)
                    }
                }), n.on("redo", function (e) {
                    console.log(e)
                }), n.on("undo", function (e) {
                    console.log(e)
                }), n.on("draw-complete", function (e) {
                    if (2 === e.vertices.length) {
                        var t = new l({
                                x: e.vertices[0][0],
                                y: e.vertices[0][1],
                                spatialReference: p.view.spatialReference
                            }),
                            r = new l({
                                x: e.vertices[1][0],
                                y: e.vertices[1][1],
                                spatialReference: p.view.spatialReference
                            }),
                            i = s.distance(t, r, "meters"),
                            n = s.buffer(t, i, "meters"),
                            o = new a({
                                geometry: n,
                                symbol: p.polygonsymbol
                            });
                        p.view.map.remove(u), c.add(o), p.emit("drawcomplete", o, "circle")
                    }
                })
            })
        }, Ce.prototype.drawrectangle = function () {
            var p = this;
            P(["esri/views/draw/Draw", "esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/Polygon"]).then(function (e) {
                var t = e[0],
                    l = e[1],
                    r = e[2],
                    s = e[3];
                p.emit("drawbegin", "rectangle"), p.drawtool = new t({
                    view: p.view
                }), p.drawtool.reset();
                var c = p.view.map.findLayerById(p.displayedLayerid);
                c || (c = new r({
                    id: p.displayedLayerid,
                    title: "绘制结果显示层",
                    listMode: "hide"
                }), p.view.map.add(c));
                var i = (new x).uuid,
                    u = p.view.map.findLayerById(i);
                null == u && (u = new r({
                    id: p.displayedLayerid,
                    title: "绘制矩形追踪实时显示层",
                    listMode: "hide"
                }), p.view.map.add(u));
                var n = p.drawtool.create("rectangle", {
                    mode: "click"
                });
                p.view.focus(), n.on("vertex-add", function (e) {
                    if (2 === e.vertices.length) {
                        u.removeAll();
                        var t = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[1][0] : e.vertices[0][0],
                            r = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[1][1] : e.vertices[0][1],
                            i = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[0][0] : e.vertices[1][0],
                            n = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[0][1] : e.vertices[1][1],
                            o = new s({
                                hasZ: !0,
                                hasM: !0,
                                rings: [
                                    [
                                        [t, r],
                                        [i, r],
                                        [i, n],
                                        [t, n],
                                        [t, r]
                                    ]
                                ],
                                spatialReference: p.view.spatialReference
                            }),
                            a = new l({
                                geometry: o,
                                symbol: p.polygonsymbol
                            });
                        u.add(a)
                    }
                }), n.on("vertex-remove", function (e) {
                    console.log(e)
                }), n.on("cursor-update", function (e) {
                    if (2 === e.vertices.length) {
                        u.removeAll();
                        var t = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[1][0] : e.vertices[0][0],
                            r = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[1][1] : e.vertices[0][1],
                            i = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[0][0] : e.vertices[1][0],
                            n = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[0][1] : e.vertices[1][1],
                            o = new s({
                                hasZ: !0,
                                hasM: !0,
                                rings: [
                                    [
                                        [t, r],
                                        [i, r],
                                        [i, n],
                                        [t, n],
                                        [t, r]
                                    ]
                                ],
                                spatialReference: p.view.spatialReference
                            }),
                            a = new l({
                                geometry: o,
                                symbol: p.polygonsymbol
                            });
                        u.add(a)
                    }
                }), n.on("redo", function (e) {
                    console.log(e)
                }), n.on("undo", function (e) {
                    console.log(e)
                }), n.on("draw-complete", function (e) {
                    if (2 === e.vertices.length) {
                        var t = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[1][0] : e.vertices[0][0],
                            r = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[1][1] : e.vertices[0][1],
                            i = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[0][0] : e.vertices[1][0],
                            n = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[0][1] : e.vertices[1][1],
                            o = new s({
                                hasZ: !0,
                                hasM: !0,
                                rings: [
                                    [
                                        [t, r],
                                        [i, r],
                                        [i, n],
                                        [t, n],
                                        [t, r]
                                    ]
                                ],
                                spatialReference: p.view.spatialReference
                            }),
                            a = new l({
                                geometry: o,
                                symbol: p.polygonsymbol
                            });
                        p.view.map.remove(u), c.add(a), p.emit("drawcomplete", a, "rectangle")
                    }
                })
            })
        }, Ce.prototype.drawPoint = function () {
            var s = this;
            P(["esri/views/draw/Draw", "esri/Graphic", "esri/layers/GraphicsLayer"]).then(function (e) {
                var t = e[0],
                    i = e[1],
                    r = e[2];
                s.emit("drawbegin", "point"), s.drawtool = new t({
                    view: s.view
                }), s.drawtool.reset();
                var n = s.view.map.findLayerById(s.displayedLayerid);
                n || (n = new r({
                    id: s.displayedLayerid,
                    title: "绘制结果显示层",
                    listMode: "hide"
                }), s.view.map.add(n));
                var o = (new x).uuid,
                    a = s.view.map.findLayerById(o);
                null == a && (a = new r({
                    id: s.displayedLayerid,
                    title: "绘制点移动实时追踪显示层",
                    listMode: "hide"
                }), s.view.map.add(a));
                var l = s.drawtool.create("point", {
                    mode: "click"
                });
                s.view.focus(), l.on("vertex-add", function (e) {
                    console.log(e)
                }), l.on("vertex-remove", function (e) {
                    console.log(e)
                }), l.on("cursor-update", function (e) {
                    a.removeAll();
                    var t = {
                            type: "point",
                            x: e.vertices[0][0],
                            y: e.vertices[0][1],
                            spatialReference: s.view.spatialReference
                        },
                        r = new i({
                            geometry: t,
                            symbol: s.marksymbol
                        });
                    a.add(r)
                }), l.on("redo", function (e) {
                    console.log(e)
                }), l.on("undo", function (e) {
                    console.log(e)
                }), l.on("draw-complete", function (e) {
                    var t = {
                            type: "point",
                            x: e.vertices[0][0],
                            y: e.vertices[0][1],
                            spatialReference: s.view.spatialReference
                        },
                        r = new i({
                            geometry: t,
                            symbol: s.marksymbol
                        });
                    s.view.map.remove(a), n.add(r), s.emit("drawcomplete", r, "point")
                })
            })
        }, Ce.prototype.drawMultipoint = function () {
            var u = this;
            P(["esri/views/draw/Draw", "esri/views/draw/PointDrawAction", "esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/Polygon", "esri/geometry/geometryEngine"]).then(function (e) {
                var t = e[0],
                    n = (e[1], e[2]),
                    r = e[3];
                e[4], e[5], u.emit("drawbegin", "multipoint"), u.drawtool = new t({
                    view: u.view
                }), u.drawtool.reset();
                var o = u.view.map.findLayerById(u.displayedLayerid);
                o || (o = new r({
                    id: u.displayedLayerid,
                    title: "绘制结果显示层",
                    listMode: "hide"
                }), u.view.map.add(o));
                var i = (new x).uuid,
                    a = u.view.map.findLayerById(i);
                null == a && (a = new r({
                    id: u.displayedLayerid,
                    title: "绘制多点临时显示层",
                    listMode: "hide"
                }), u.view.map.add(a));
                var l = (new x).uuid,
                    s = u.view.map.findLayerById(l);
                null == s && (s = new r({
                    id: u.displayedLayerid,
                    title: "绘制多点移动追踪显示层",
                    listMode: "hide"
                }), u.view.map.add(s));
                var c = u.drawtool.create("multipoint", {
                    mode: "click"
                });
                u.view.focus(), c.on("vertex-add", function (e) {
                    a.removeAll(), e.vertices.map(function (e) {
                        var t = {
                                type: "point",
                                x: e[0],
                                y: e[1],
                                spatialReference: u.view.spatialReference
                            },
                            r = new n({
                                geometry: t,
                                symbol: u.marksymbol
                            });
                        a.add(r)
                    })
                }), c.on("vertex-remove", function (e) {
                    console.log(e)
                }), c.on("cursor-update", function (e) {
                    s.removeAll(), e.vertices.map(function (e) {
                        var t = {
                                type: "point",
                                x: e[0],
                                y: e[1],
                                spatialReference: u.view.spatialReference
                            },
                            r = new n({
                                geometry: t,
                                symbol: u.marksymbol
                            });
                        s.add(r)
                    })
                }), c.on("redo", function (e) {
                    console.log(e)
                }), c.on("undo", function (e) {
                    console.log(e)
                }), c.on("draw-complete", function (e) {
                    var i = [];
                    e.vertices.map(function (e) {
                        var t = {
                                type: "point",
                                x: e[0],
                                y: e[1],
                                spatialReference: u.view.spatialReference
                            },
                            r = new n({
                                geometry: t,
                                symbol: u.marksymbol
                            });
                        i.push(r), o.add(r)
                    }), u.view.map.remove(a), u.view.map.remove(s), u.emit("drawcomplete", i, "multipoint")
                })
            })
        }, Ce.prototype.drawPolyline = function () {
            var u = this;
            P(["esri/views/draw/Draw", "esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/geometryEngine"]).then(function (e) {
                var t = e[0],
                    a = e[1],
                    r = e[2],
                    l = e[3];
                u.emit("drawbegin", "polyline"), u.drawtool = new t({
                    view: u.view
                }), u.drawtool.reset();
                var s = u.view.map.findLayerById(u.displayedLayerid);
                s || (s = new r({
                    id: u.displayedLayerid,
                    title: "绘制结果显示层",
                    listMode: "hide"
                }), u.view.map.add(s));
                var i = (new x).uuid,
                    c = u.view.map.findLayerById(i);
                null == c && (c = new r({
                    id: u.displayedLayerid,
                    title: "绘制线实时追踪显示层",
                    listMode: "hide"
                }), u.view.map.add(c));
                var n = u.drawtool.create("polyline");
                u.view.focus(), n.on(["vertex-add", "vertex-remove", "cursor-update", "redo", "undo"], function (e) {
                    if (1 < e.vertices.length) {
                        var t = e.vertices;
                        c.removeAll();
                        var r = new a({
                                geometry: {
                                    type: "polyline",
                                    paths: t,
                                    spatialReference: u.view.spatialReference
                                },
                                symbol: u.polylinesymbol
                            }),
                            i = function (e) {
                                var t = e.clone(),
                                    r = t.removePoint(0, t.paths[0].length - 1),
                                    i = t.getPoint(0, t.paths[0].length - 1);
                                return {
                                    type: "polyline",
                                    spatialReference: u.view.spatialReference,
                                    hasZ: !1,
                                    paths: [
                                        [
                                            [i.x, i.y],
                                            [r.x, r.y]
                                        ]
                                    ]
                                }
                            };
                        if (function (e) {
                                if (!(e.paths[0].length < 3)) {
                                    var t = e.clone(),
                                        r = i(e);
                                    return t.removePoint(0, t.paths[0].length - 1), l.crosses(r, t)
                                }
                            }(r.geometry)) {
                            var n = new a({
                                geometry: i(r.geometry),
                                symbol: u.polylinesymbol
                            });
                            n && c.addMany([r, n]), n && e.preventDefault()
                        } else c.add(r)
                    }
                }), n.on("draw-complete", function (e) {
                    if (1 < e.vertices.length) {
                        var t = e.vertices;
                        c.removeAll();
                        var r = new a({
                                geometry: {
                                    type: "polyline",
                                    paths: t,
                                    spatialReference: u.view.spatialReference
                                },
                                symbol: u.polylinesymbol
                            }),
                            i = function (e) {
                                var t = e.clone(),
                                    r = t.removePoint(0, t.paths[0].length - 1),
                                    i = t.getPoint(0, t.paths[0].length - 1);
                                return {
                                    type: "polyline",
                                    spatialReference: u.view.spatialReference,
                                    hasZ: !1,
                                    paths: [
                                        [
                                            [i.x, i.y],
                                            [r.x, r.y]
                                        ]
                                    ]
                                }
                            },
                            n = null;
                        if (function (e) {
                                if (!(e.paths[0].length < 3)) {
                                    var t = e.clone(),
                                        r = i(e);
                                    return t.removePoint(0, t.paths[0].length - 1), l.crosses(r, t)
                                }
                            }(r.geometry)) {
                            var o = new a({
                                geometry: i(r.geometry),
                                symbol: u.polylinesymbol
                            });
                            o && (s.addMany([r, o]), n = new a({
                                geometry: l.union(r.geometry, o.geometry),
                                symbol: u.polylinesymbol
                            })), o && e.preventDefault()
                        } else n = r, s.add(r);
                        u.view.map.remove(c), u.emit("drawcomplete", n, "polyline")
                    }
                })
            })
        }, Ce.prototype.drawPolygon = function () {
            var s = this;
            P(["esri/views/draw/Draw", "esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/geometryEngine"]).then(function (e) {
                var t = e[0],
                    n = e[1],
                    r = e[2];
                e[3], s.emit("drawbegin", "polygon"), s.drawtool = new t({
                    view: s.view
                }), s.drawtool.reset();
                var o = s.view.map.findLayerById(s.displayedLayerid);
                o || (o = new r({
                    id: s.displayedLayerid,
                    title: "绘制结果显示层",
                    listMode: "hide"
                }), s.view.map.add(o));
                var i = (new x).uuid,
                    a = s.view.map.findLayerById(i);
                null == a && (a = new r({
                    id: s.displayedLayerid,
                    title: "绘制多边形实时追踪显示层",
                    listMode: "hide"
                }), s.view.map.add(a));
                var l = s.drawtool.create("polygon");
                s.view.focus(), l.on(["vertex-add", "vertex-remove", "cursor-update", "redo", "undo"], function (e) {
                    var t = e.vertices;
                    a.removeAll();
                    var r = {
                            type: "polygon",
                            rings: t,
                            spatialReference: s.view.spatialReference
                        },
                        i = new n({
                            geometry: r,
                            symbol: s.polygonsymbol
                        });
                    a.add(i)
                }), l.on("draw-complete", function (e) {
                    var t = e.vertices;
                    a.removeAll();
                    var r = {
                            type: "polygon",
                            rings: t,
                            spatialReference: s.view.spatialReference
                        },
                        i = new n({
                            geometry: r,
                            symbol: s.polygonsymbol
                        });
                    s.view.map.remove(a), o.add(i), s.emit("drawcomplete", i, "polygon")
                })
            })
        }, Ce.prototype.reset = function () {
            this.drawtool && this.drawtool.reset()
        }, Ce.prototype.clean = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && this.view.map.remove(e)
        }, Ce.prototype.show = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !0)
        }, Ce.prototype.hide = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !1)
        }, Ce.prototype.init = function (r) {
            return ge(this, void 0, void 0, function () {
                var t = this;
                return xe(this, function (e) {
                    return this.displayedLayerid = (new x).uuid, this.view = r, "2d" === this.view.type ? (this.polygonsymbol = {
                        type: "simple-fill",
                        color: [255, 255, 255, .6],
                        style: "solid",
                        outline: {
                            color: [255, 255, 0, .8],
                            width: 2
                        }
                    }, this.polylinesymbol = {
                        type: "simple-line",
                        color: [255, 255, 255, .6],
                        width: "4px",
                        style: "solid"
                    }, this.marksymbol = {
                        type: "simple-marker",
                        style: "circle",
                        color: [255, 255, 0, .6],
                        size: "24px",
                        outline: {
                            color: [255, 255, 0, .8],
                            width: 2
                        }
                    }) : (this.polygonsymbol = {
                        type: "polygon-3d",
                        symbolLayers: [{
                            type: "extrude",
                            castShadows: !1,
                            size: 100,
                            material: {
                                color: [255, 255, 255, .4]
                            },
                            edges: {
                                type: "solid",
                                color: [50, 50, 50, .5]
                            }
                        }]
                    }, this.polylinesymbol = {
                        type: "line-3d",
                        symbolLayers: [{
                            type: "path",
                            anchor: "center",
                            Values: "center",
                            profile: "quad",
                            width: 2,
                            height: 10,
                            material: {
                                color: [255, 255, 255, .4]
                            },
                            cap: "square",
                            join: "miter",
                            castShadows: !1,
                            profileRotation: "heading"
                        }]
                    }, this.marksymbol = {
                        type: "point-3d",
                        symbolLayers: [{
                            type: "object",
                            width: 20,
                            height: 20,
                            depth: 20,
                            resource: {
                                primitive: "sphere"
                            },
                            material: {
                                color: [0, 0, 255, .8]
                            }
                        }],
                        verticalOffset: {
                            screenLength: 60,
                            maxWorldLength: 1e3,
                            minWorldLength: 20
                        },
                        callout: {
                            type: "line",
                            size: 1.5,
                            color: "white",
                            border: {
                                color: "black"
                            }
                        }
                    }), this.view.on(q.click, function (e) {
                        t.view.hitTest(e).then(function (e) {
                            return ge(t, void 0, void 0, function () {
                                return xe(this, function (e) {
                                    return [2]
                                })
                            })
                        })
                    }), this.view.on(q.pointermove, function (e) {
                        t.view.hitTest(e).then(function (e) {
                            return ge(t, void 0, void 0, function () {
                                return xe(this, function (e) {
                                    return [2]
                                })
                            })
                        })
                    }), [2]
                })
            })
        }, Ce);

    function Ce(e) {
        var t = me.call(this) || this;
        return t.marksymbol = null, t.polylinesymbol = null, t.polygonsymbol = null, t.displayedLayerid = "", t.view = null, t.drawtool = null, t.drawlayerscollection = [], t.init(e), t
    }
    var Re, ke, Ae = (Re = function (e, t) {
            return (Re = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            Re(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Se = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        ze = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Fe = (Ae(Ee, ke = e), Ee.prototype.add = function (n) {
            var o = this;
            void 0 === n && (n = {}), P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/82B44794-5CE0-A64A-9047F07CAF08BD2C", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = new t(o.view, n.center, n.radius, n.height, n.textureurl, n.scale);
                r.add(o.view, i), o.dynamicCylinderfenceRendererArray.push([(new x).uuid, i])
            }).catch(function (e) {
                console.error(e)
            })
        }, Ee.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.dynamicCylinderfenceRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                }), r.dynamicCylinderfenceRendererArray = []
            })
        }, Ee.prototype.init = function (t) {
            return Se(this, void 0, void 0, function () {
                return ze(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, Ee);

    function Ee(e) {
        var t = ke.call(this) || this;
        return t.dynamicCylinderfenceRendererArray = [], t.view = null, t.init(e), t
    }
    var Ie, _e, Be = (Ie = function (e, t) {
            return (Ie = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            Ie(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Pe = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Oe = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Me = (Be(je, _e = e), je.prototype.add = function (n) {
            var o = this;
            void 0 === n && (n = {}), P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/95CEAB7E-A2ED-576F-64F0B53B2C6A134F", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1];
                if (n.points && n.texturestart && n.texturestarend && n.height) {
                    n.view = o.view;
                    var i = new t(n);
                    r.add(o.view, i), o.dynamicPolygonRendererArray.push([(new x).uuid, i])
                }
            }).catch(function (e) {
                console.error(e)
            })
        }, je.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.dynamicPolygonRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                }), r.dynamicPolygonRendererArray = []
            })
        }, je.prototype.init = function (t) {
            return Pe(this, void 0, void 0, function () {
                return Oe(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, je);

    function je(e) {
        var t = _e.call(this) || this;
        return t.dynamicPolygonRendererArray = [], t.view = null, t.init(e), t
    }
    var De, We, Te = (De = function (e, t) {
            return (De = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            De(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Ge = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Ze = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        He = (Te(qe, We = e), qe.prototype.add = function (n) {
            var o = this;
            void 0 === n && (n = {}), P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/789A68E1-657F-D870-37F9E6DF554E1C27", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = new t(o.view, n.center, n.radius, n.height, n.textureurl, n.scale);
                r.add(o.view, i), o.dynamicSquarefenceRendererArray.push([(new x).uuid, i])
            }).catch(function (e) {
                console.error(e)
            })
        }, qe.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.dynamicSquarefenceRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                }), r.dynamicSquarefenceRendererArray = []
            })
        }, qe.prototype.init = function (t) {
            return Ge(this, void 0, void 0, function () {
                return Ze(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, qe);

    function qe(e) {
        var t = We.call(this) || this;
        return t.dynamicSquarefenceRendererArray = [], t.view = null, t.init(e), t
    }
    var Je, Xe, Ye = (Je = function (e, t) {
            return (Je = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            Je(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Ue = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Ne = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Ve = (Ye($e, Xe = e), $e.prototype.add = function (a) {
            var l = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/599EFB79-18C9-DC0A-E2C9FC2F2316C660"]).then(function (e) {
                var t = e[0],
                    r = document.getElementsByClassName("esri-view-surface")[0],
                    i = document.getElementById(l.displayedLayerid);
                null !== i && r.removeChild(i);
                var n = [];
                l.datas = a.datas, a.datas.forEach(function (e, t) {
                    n.push({
                        name: "Top10",
                        type: "effectScatter",
                        coordinateSystem: "arcgis",
                        zlevel: 2,
                        showEffectOn: "render",
                        rippleEffect: {
                            brushType: "stroke"
                        },
                        legendHoverLink: !0,
                        hoverAnimation: !0,
                        symbol: null == e.symbol || void 0 === e.symbol ? "diamond" : e.symbol,
                        cursor: "pointer",
                        label: {
                            normal: {
                                show: !0,
                                position: null == e.labelposition || void 0 === e.labelposition ? "right" : e.labelposition,
                                formatter: "{b}"
                            }
                        },
                        tooltip: {
                            padding: 10,
                            backgroundColor: "#222",
                            borderColor: "#777",
                            borderWidth: 1
                        },
                        symbolSize: function (e) {
                            return e[2] / 8
                        },
                        itemStyle: {
                            normal: {
                                color: e.color,
                                shadowBlur: 10,
                                shadowColor: "#333"
                            }
                        },
                        data: [{
                            name: e.name,
                            value: [e.x, e.y].concat([e.value])
                        }]
                    })
                });
                var o = {
                    title: {
                        text: "",
                        subtext: "",
                        left: "center",
                        textStyle: {
                            color: "#fff"
                        }
                    },
                    series: n
                };
                new t(l.view, "", l.displayedLayerid).setChartOption(o)
            })
        }, $e.prototype.update = function (a) {
            var l = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/599EFB79-18C9-DC0A-E2C9FC2F2316C660"]).then(function (e) {
                var t = e[0],
                    r = document.getElementsByClassName("esri-view-surface")[0],
                    i = document.getElementById(l.displayedLayerid);
                null !== i && r.removeChild(i);
                var n = [];
                l.datas = a.datas, a.datas.forEach(function (e, t) {
                    n.push({
                        name: "Top10",
                        type: "effectScatter",
                        coordinateSystem: "arcgis",
                        zlevel: 2,
                        showEffectOn: "render",
                        rippleEffect: {
                            brushType: "stroke"
                        },
                        legendHoverLink: !0,
                        hoverAnimation: !0,
                        symbol: null == e.symbol || void 0 === e.symbol ? "diamond" : e.symbol,
                        cursor: "pointer",
                        label: {
                            normal: {
                                show: !0,
                                position: null == e.labelposition || void 0 === e.labelposition ? "right" : e.labelposition,
                                formatter: "{b}"
                            }
                        },
                        tooltip: {
                            padding: 10,
                            backgroundColor: "#222",
                            borderColor: "#777",
                            borderWidth: 1
                        },
                        symbolSize: function (e) {
                            return e[2] / 8
                        },
                        itemStyle: {
                            normal: {
                                color: e.color,
                                shadowBlur: 10,
                                shadowColor: "#333"
                            }
                        },
                        data: [{
                            name: e.name,
                            value: [e.x, e.y].concat([e.value])
                        }]
                    })
                });
                var o = {
                    title: {
                        text: "",
                        subtext: "",
                        left: "center",
                        textStyle: {
                            color: "#fff"
                        }
                    },
                    series: n
                };
                new t(l.view, "", l.displayedLayerid).setChartOption(o)
            })
        }, $e.prototype.delete = function () {
            var e = document.getElementsByClassName("esri-view-surface")[0],
                t = document.getElementById(this.displayedLayerid);
            null !== t && e.removeChild(t)
        }, $e.prototype.init = function (t) {
            return Ue(this, void 0, void 0, function () {
                var s = this;
                return Ne(this, function (e) {
                    return this.view = t, this.displayedLayerid = (new x).uuid, P(["esri/geometry/Point", "esri/geometry/SpatialReference", "esri/geometry/support/webMercatorUtils"]).then(function (e) {
                        var a = e[0],
                            l = e[1];
                        e[2], s.view.on(q.click, function (i) {
                            if (s.datas.length) {
                                var r = s.datas.map(function (e) {
                                        var t = new a({
                                                x: e.x,
                                                y: e.y,
                                                spatialReference: l.WebMercator
                                            }),
                                            r = s.view.toScreen(t);
                                        return Math.sqrt((r.x - i.x) * (r.x - i.x) + (r.y - i.y) * (r.y - i.y))
                                    }),
                                    n = 0;
                                r.forEach(function (e, t) {
                                    e < r[n] && (n = t)
                                }), 35 < r[n] || s.emit(q.click, s.datas[n], i.mapPoint)
                            }
                        }), s.view.on(q.doubleclick, function (i) {
                            if (s.datas.length) {
                                var r = s.datas.map(function (e) {
                                        var t = new a({
                                                x: e.x,
                                                y: e.y,
                                                spatialReference: l.WebMercator
                                            }),
                                            r = s.view.toScreen(t);
                                        return Math.sqrt((r.x - i.x) * (r.x - i.x) + (r.y - i.y) * (r.y - i.y))
                                    }),
                                    n = 0;
                                r.forEach(function (e, t) {
                                    e < r[n] && (n = t)
                                }), 35 < r[n] || s.emit(q.doubleclick, s.datas[n], i.mapPoint)
                            }
                        }), s.view.on(q.pointermove, function (o) {
                            s.view.hitTest(o).then(function (t) {
                                return Ue(s, void 0, void 0, function () {
                                    var r, i, n = this;
                                    return Ne(this, function (e) {
                                        if (0 < t.results.length && t.results[0].graphic.layer.id === this.displayedLayerid) {
                                            if (!this.datas.length) return [2];
                                            if (r = this.datas.map(function (e) {
                                                    var t = new a({
                                                            x: e.x,
                                                            y: e.y,
                                                            spatialReference: l.WebMercator
                                                        }),
                                                        r = n.view.toScreen(t);
                                                    return Math.sqrt((r.x - o.x) * (r.x - o.x) + (r.y - o.y) * (r.y - o.y))
                                                }), i = 0, r.forEach(function (e, t) {
                                                    e < r[i] && (i = t)
                                                }), 35 < r[i]) return [2];
                                            this.emit(q.pointermove, this.datas[i], this.view.toMap({
                                                x: o.x,
                                                y: o.y
                                            }))
                                        }
                                        return [2]
                                    })
                                })
                            })
                        })
                    }), [2]
                })
            })
        }, $e);

    function $e(e) {
        var t = Xe.call(this) || this;
        return t.displayedLayerid = "", t.view = null, t.datas = null, t.init(e), t
    }
    var Qe, Ke, et = (Qe = function (e, t) {
            return (Qe = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            Qe(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        tt = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        rt = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        it = (et(nt, Ke = e), nt.prototype.add = function (i) {
            var n = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/FC5376C9-9F1D-905F-3BCD66C6DF4ED973", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1];
                i.options.fragmentShaderSource = n.fragmentShaderSource, n.electricShieldOptionsRenderer = new t(n.view, i.points, i.options), r.add(n.view, n.electricShieldOptionsRenderer)
            }).catch(function (e) {
                console.error(e)
            })
        }, nt.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.electricShieldOptionsRenderer && t.remove(r.view, r.electricShieldOptionsRenderer)
            })
        }, nt.prototype.setMaterialColor = function (e) {
            this.electricShieldOptionsRenderer && this.electricShieldOptionsRenderer.setMaterialColor(e)
        }, nt.prototype.setwireframe = function () {
            this.electricShieldOptionsRenderer && this.electricShieldOptionsRenderer.setwireframe()
        }, nt.prototype.setaltitude = function (e) {
            this.electricShieldOptionsRenderer && this.electricShieldOptionsRenderer.setaltitude(e)
        }, nt.prototype.setscaleZ = function (e) {
            this.electricShieldOptionsRenderer && this.electricShieldOptionsRenderer.setscaleZ(e)
        }, nt.prototype.setopacity = function (e) {
            this.electricShieldOptionsRenderer && this.electricShieldOptionsRenderer.setopacity(e)
        }, nt.prototype.init = function (t) {
            return tt(this, void 0, void 0, function () {
                return rt(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, nt);

    function nt(e) {
        var t = Ke.call(this) || this;
        return t.electricShieldOptionsRenderer = null, t.view = null, t.fragmentShaderSource = "\n                #if __VERSION__ == 100\n                 #extension GL_OES_standard_derivatives : enable\n                #endif\n                uniform vec3 color;\n                uniform float opacity;\n                uniform float time;\n                varying vec2 vUv;\n                #define pi 3.1415926535\n                #define PI2RAD 0.01745329252\n                #define TWO_PI (2. * PI)\n                float rands(float p){\n                    return fract(sin(p) * 10000.0);\n                }\n                float noise(vec2 p){\n                    float t = time / 20000.0;\n                    if(t > 1.0) t -= floor(t);\n                    return rands(p.x * 14. + p.y * sin(t) * 0.5);\n                }\n                vec2 sw(vec2 p){\n                    return vec2(floor(p.x), floor(p.y));\n                }\n                vec2 se(vec2 p){\n                    return vec2(ceil(p.x), floor(p.y));\n                }\n                vec2 nw(vec2 p){\n                    return vec2(floor(p.x), ceil(p.y));\n                }\n                vec2 ne(vec2 p){\n                    return vec2(ceil(p.x), ceil(p.y));\n                }\n                float smoothNoise(vec2 p){\n                    vec2 inter = smoothstep(0.0, 1.0, fract(p));\n                    float s = mix(noise(sw(p)), noise(se(p)), inter.x);\n                    float n = mix(noise(nw(p)), noise(ne(p)), inter.x);\n                    return mix(s, n, inter.y);\n                }\n                float fbm(vec2 p){\n                    float z = 2.0;\n                    float rz = 0.0;\n                    vec2 bp = p;\n                    for(float i = 1.0; i < 6.0; i++){\n                    rz += abs((smoothNoise(p) - 0.5)* 2.0) / z;\n                    z *= 2.0;\n                    p *= 2.0;\n                    }\n                    return rz;\n                }\n                void main() {\n                    vec2 uv = vUv;\n                    vec2 uv2 = vUv;\n                    if (uv.y < 0.5) {\n                    discard;\n                    }\n                    uv *= 4.;\n                    float rz = fbm(uv);\n                    uv /= exp(mod(time * 2.0, pi));\n                    rz *= pow(15., 0.9);\n                    gl_FragColor = mix(vec4(color, opacity) / rz, vec4(color, 0.1), 0.2);\n                    if (uv2.x < 0.05) {\n                    gl_FragColor = mix(vec4(color, 0.1), gl_FragColor, uv2.x / 0.05);\n                    }\n                    if (uv2.x > 0.95){\n                    gl_FragColor = mix(gl_FragColor, vec4(color, 0.1), (uv2.x - 0.95) / 0.05);\n                    }\n                }", t.init(e), t
    }
    var ot, at, lt = (ot = function (e, t) {
            return (ot = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            ot(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        st = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        ct = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        ut = (lt(pt, at = e), pt.prototype.add = function (i) {
            var n = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/7EDA07DC-CD90-EEBB-1E7A9898658F0046", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1];
                n.esriheatMap3dLayerRenderer = new t(n.view, i.options), r.add(n.view, n.esriheatMap3dLayerRenderer)
            }).catch(function (e) {
                console.error(e)
            })
        }, pt.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.esriheatMap3dLayerRenderer && t.remove(r.view, r.esriheatMap3dLayerRenderer)
            })
        }, pt.prototype.setMaterialColor = function (e) {
            this.esriheatMap3dLayerRenderer && this.esriheatMap3dLayerRenderer.setMaterialColor(e)
        }, pt.prototype.setwireframe = function () {
            this.esriheatMap3dLayerRenderer && this.esriheatMap3dLayerRenderer.setwireframe()
        }, pt.prototype.setaltitude = function (e) {
            this.esriheatMap3dLayerRenderer && this.esriheatMap3dLayerRenderer.setaltitude(e)
        }, pt.prototype.setscaleZ = function (e) {
            this.esriheatMap3dLayerRenderer && this.esriheatMap3dLayerRenderer.setscaleZ(e)
        }, pt.prototype.setopacity = function (e) {
            this.esriheatMap3dLayerRenderer && this.esriheatMap3dLayerRenderer.setopacity(e)
        }, pt.prototype.init = function (t) {
            return st(this, void 0, void 0, function () {
                return ct(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, pt);

    function pt(e) {
        var t = at.call(this) || this;
        return t.esriheatMap3dLayerRenderer = null, t.view = null, t.init(e), t
    }
    var dt, yt, ft = (dt = function (e, t) {
            return (dt = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            dt(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        ht = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        vt = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        bt = (ft(mt, yt = e), mt.prototype.add = function (r) {
            var i = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/E7C20471-74B0-5705-FD3D0A9B63BC21A6", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                e[1], i.rainRendererRenderer = new t(i.view, r.options), i.rainRendererRenderer.add()
            }).catch(function (e) {
                console.error(e)
            })
        }, mt.prototype.remove = function () {
            var t = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                e[0], t.rainRendererRenderer && t.rainRendererRenderer.remove()
            })
        }, mt.prototype.init = function (t) {
            return ht(this, void 0, void 0, function () {
                return vt(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, mt);

    function mt(e) {
        var t = yt.call(this) || this;
        return t.rainRendererRenderer = null, t.view = null, t.init(e), t
    }
    var wt, gt, xt = (wt = function (e, t) {
            return (wt = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            wt(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Lt = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Ct = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Rt = (xt(kt, gt = e), kt.prototype.add = function (r) {
            var i = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/0CBBFBAF-B7E4-50A1-39B34C8C9A007129", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                e[1], i.esriSnowRenderer = new t(i.view, r.options), i.esriSnowRenderer.add()
            }).catch(function (e) {
                console.error(e)
            })
        }, kt.prototype.remove = function () {
            var t = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                e[0], t.esriSnowRenderer && t.esriSnowRenderer.remove()
            })
        }, kt.prototype.init = function (t) {
            return Lt(this, void 0, void 0, function () {
                return Ct(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, kt);

    function kt(e) {
        var t = gt.call(this) || this;
        return t.esriSnowRenderer = null, t.view = null, t.init(e), t
    }
    var At, St, zt = (At = function (e, t) {
            return (At = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            At(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Ft = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Et = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        It = (zt(_t, St = e), _t.prototype.add = function (r) {
            var i = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/weatherEffects", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                e[1], i.weatherEffectsRenderer = new t(i.view, r.options), i.weatherEffectsRenderer.add(r.options.weather)
            }).catch(function (e) {
                console.error(e)
            })
        }, _t.prototype.remove = function () {
            var t = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                e[0], t.weatherEffectsRenderer && t.weatherEffectsRenderer.remove()
            })
        }, _t.prototype.init = function (t) {
            return Ft(this, void 0, void 0, function () {
                return Et(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, _t);

    function _t(e) {
        var t = St.call(this) || this;
        return t.weatherEffectsRenderer = null, t.view = null, t.init(e), t
    }
    var Bt, Pt, Ot = (Bt = function (e, t) {
            return (Bt = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            Bt(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Mt = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        jt = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Dt = (Ot(Wt, Pt = e), Wt.prototype.createFeatureGroup = function (_) {
            return Mt(this, void 0, void 0, function () {
                var t, r, i, o, n, a, l, s, c, u, p, d, y, f, h, v, b, m, w, g, x, L, C, R, k, A, S, z, F, E, I = this;
                return jt(this, function (e) {
                    switch (e.label) {
                        case 0:
                            return [4, P(["esri/layers/FeatureLayer", "esri/layers/support/LabelClass", "esri/Graphic", "esri/geometry/Point", "esri/geometry/Circle", "esri/symbols/PictureMarkerSymbol", "esri/geometry/Polyline", "esri/geometry/Polygon"])];
                        case 1:
                            return t = e.sent(), r = t[0], i = t[1], o = t[2], n = t[3], a = t[4], t[5], l = t[6], s = t[7], (c = this.view.map.findLayerById(this.displayedLayerid)) && (this.view.map.remove(c), this.mapoverlayersflayer = []), u = [], "group" === _.type ? ((p = [{
                                name: "objectId",
                                alias: "objectId",
                                type: "oid"
                            }, {
                                name: "uuid",
                                alias: "唯一标识",
                                type: "string"
                            }]).push({
                                name: "style",
                                alias: "样式",
                                type: "string"
                            }), _.datafiled.forEach(function (e) {
                                p.push(e)
                            }), "marker" === _.overlaytype.toLowerCase() ? (_.renderer ? d = _.renderer : (d = {
                                type: "unique-value",
                                field: "style",
                                uniqueValueInfos: []
                            }, _.style.forEach(function (e) {
                                d.uniqueValueInfos.push({
                                    value: e.style,
                                    label: e.style,
                                    symbol: e.symbol
                                })
                            })), y = new r({
                                id: this.displayedLayerid,
                                title: "Overlayer-marker-" + this.displayedLayerid,
                                visible: _.visible,
                                objectIdField: "objectId",
                                geometryType: "point",
                                renderer: d,
                                screenSizePerspectiveEnabled: "3d" === this.view.type,
                                popupEnabled: !1,
                                popupTemplate: !1,
                                maxScale: _.maxScale,
                                minScale: _.minScale,
                                fields: p,
                                source: [],
                                spatialReference: this.view.spatialReference
                            }), _.elevationInfo && "3d" === this.view.type && (y.elevationInfo = _.elevationInfo), _.frreduction && ("3d" === this.view.type ? y.featureReduction = {
                                type: _.frreduction.type
                            } : y.featureReduction = _.frreduction.clusterConfig), this.view.map.add(y), _.overlayers.forEach(function (e) {
                                if (e.attributes && e.position) {
                                    var t = e.attributes;
                                    t.uuid = e.uuid;
                                    var r = new o({
                                        geometry: new n({
                                            x: e.position[0],
                                            y: e.position[1],
                                            z: void 0 === e.position[2] ? 0 : e.position[2],
                                            spatialReference: I.view.spatialReference
                                        }),
                                        attributes: t
                                    });
                                    y.source.add(r), u.push(r), I.mapoverlayersflayer.push([_.uuid, e.uuid, r])
                                }
                            }), 100 < y.source.items.length && null != _.frreduction && (y.featureReduction = {
                                type: _.frreduction.type,
                                clusterRadius: _.frreduction.clusterRadius
                            }), _.label.visible && (F = void 0, _.label.labelingInfo ? (F = _.label.labelingInfo, y.labelingInfo = F) : (F = "2d" === this.view.type ? {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            } : {
                                type: "label-3d",
                                symbolLayers: [{
                                    type: "text",
                                    material: {
                                        color: _.label.color
                                    },
                                    size: _.label.size,
                                    halo: {
                                        color: _.label.haloColor,
                                        size: _.label.haloSize
                                    }
                                }]
                            }, E = new i({
                                labelExpressionInfo: {
                                    expression: "$feature.NAME"
                                },
                                symbol: F,
                                labelPlacement: _.label.placement,
                                minScale: _.label.minScale,
                                maxScale: _.label.maxScale
                            }), y.labelingInfo = [E]))) : "circle" === _.overlaytype.toLowerCase() ? (_.renderer ? d = _.renderer : (d = {
                                type: "unique-value",
                                field: "style",
                                uniqueValueInfos: []
                            }, _.style.forEach(function (e) {
                                d.uniqueValueInfos.push({
                                    value: e.style,
                                    label: e.style,
                                    symbol: e.symbol
                                })
                            })), f = new r({
                                id: this.displayedLayerid,
                                title: "Overlayer-circle-" + this.displayedLayerid,
                                visible: _.visible,
                                objectIdField: "objectId",
                                geometryType: "polygon",
                                renderer: d,
                                screenSizePerspectiveEnabled: "3d" === this.view.type,
                                popupEnabled: !1,
                                popupTemplate: !1,
                                maxScale: _.maxScale,
                                minScale: _.minScale,
                                fields: p,
                                source: [],
                                spatialReference: this.view.spatialReference
                            }), _.elevationInfo && "3d" === this.view.type && (f.elevationInfo = _.elevationInfo), this.view.map.add(f), _.overlayers.forEach(function (e) {
                                if (e.attributes && e.center && e.radius) {
                                    var t = e.attributes;
                                    t.uuid = e.uuid;
                                    var r = new o({
                                        geometry: new a({
                                            center: new n({
                                                x: e.center.X,
                                                y: e.center.Y,
                                                z: e.center.Z,
                                                spatialReference: I.view.spatialReference
                                            }),
                                            radius: e.radius,
                                            radiusUnit: e.radiusUnit,
                                            spatialReference: I.view.spatialReference
                                        }),
                                        attributes: t
                                    });
                                    u.push(r), f.source.add(r), I.mapoverlayersflayer.push([_.uuid, e.uuid, r])
                                }
                            }), _.label.visible && (F = void 0, _.label.labelingInfo ? (F = _.label.labelingInfo, f.labelingInfo = F) : (F = "2d" === this.view.type ? {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            } : {
                                type: "label-3d",
                                symbolLayers: [{
                                    type: "text",
                                    material: {
                                        color: _.label.color
                                    },
                                    size: _.label.size,
                                    halo: {
                                        color: _.label.haloColor,
                                        size: _.label.haloSize
                                    }
                                }]
                            }, E = new i({
                                labelExpressionInfo: {
                                    expression: "$feature.NAME"
                                },
                                symbol: F,
                                labelPlacement: _.label.placement,
                                minScale: _.label.minScale,
                                maxScale: _.label.maxScale
                            }), f.labelingInfo = [E]))) : "polyline" === _.overlaytype.toLowerCase() ? (_.renderer ? d = _.renderer : (d = {
                                type: "unique-value",
                                field: "style",
                                uniqueValueInfos: []
                            }, _.style.forEach(function (e) {
                                d.uniqueValueInfos.push({
                                    value: e.style,
                                    label: e.style,
                                    symbol: e.symbol
                                })
                            })), h = new r({
                                id: this.displayedLayerid,
                                title: "Overlayer-polyline-" + this.displayedLayerid,
                                visible: _.visible,
                                objectIdField: "objectId",
                                geometryType: "polyline",
                                renderer: d,
                                popupEnabled: !1,
                                popupTemplate: !1,
                                maxScale: _.maxScale,
                                minScale: _.minScale,
                                fields: p,
                                source: [],
                                spatialReference: this.view.spatialReference
                            }), _.elevationInfo && "3d" === this.view.type && (h.elevationInfo = _.elevationInfo), this.view.map.add(h), _.overlayers.forEach(function (e) {
                                if (e.attributes && e.path) {
                                    var t = e.attributes;
                                    t.uuid = e.uuid;
                                    var r = [];
                                    e.path.forEach(function (e) {
                                        r.push([e.X, e.Y, e.Z])
                                    });
                                    var i = new l({
                                            hasZ: !1,
                                            hasM: !1,
                                            paths: r,
                                            spatialReference: I.view.spatialReference
                                        }),
                                        n = new o({
                                            geometry: i,
                                            attributes: t
                                        });
                                    u.push(n), h.source.add(n), I.mapoverlayersflayer.push([_.uuid, e.uuid, n])
                                }
                            }), _.label.visible && (F = void 0, _.label.labelingInfo ? (F = _.label.labelingInfo, h.labelingInfo = F) : (F = "2d" === this.view.type ? {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            } : {
                                type: "label-3d",
                                symbolLayers: [{
                                    type: "text",
                                    material: {
                                        color: _.label.color
                                    },
                                    size: _.label.size,
                                    halo: {
                                        color: _.label.haloColor,
                                        size: _.label.haloSize
                                    }
                                }]
                            }, E = new i({
                                labelExpressionInfo: {
                                    expression: "$feature.NAME"
                                },
                                symbol: F,
                                labelPlacement: _.label.placement,
                                minScale: _.label.minScale,
                                maxScale: _.label.maxScale
                            }), h.labelingInfo = [E]))) : "polygon" === _.overlaytype.toLowerCase() && (_.renderer ? d = _.renderer : (d = {
                                type: "unique-value",
                                field: "style",
                                uniqueValueInfos: []
                            }, _.style.forEach(function (e) {
                                d.uniqueValueInfos.push({
                                    value: e.style,
                                    label: e.style,
                                    symbol: e.symbol
                                })
                            })), v = new r({
                                id: this.displayedLayerid,
                                title: "Overlayer-polygon-" + this.displayedLayerid,
                                visible: _.visible,
                                objectIdField: "objectId",
                                geometryType: "polygon",
                                renderer: d,
                                screenSizePerspectiveEnabled: "3d" === this.view.type,
                                maxScale: _.maxScale,
                                minScale: _.minScale,
                                popupEnabled: !1,
                                popupTemplate: !1,
                                fields: p,
                                source: [],
                                spatialReference: this.view.spatialReference
                            }), _.elevationInfo && "3d" === this.view.type && (v.elevationInfo = _.elevationInfo), this.view.map.add(v), _.overlayers.forEach(function (e) {
                                if (e.attributes && e.paths) {
                                    var t = e.attributes;
                                    t.uuid = e.uuid;
                                    var r = [];
                                    e.paths.forEach(function (e) {
                                        r.push([e.X, e.Y, e.Z])
                                    });
                                    var i = new s({
                                            hasZ: !0,
                                            hasM: !0,
                                            rings: r,
                                            spatialReference: I.view.spatialReference
                                        }),
                                        n = new o({
                                            geometry: i,
                                            attributes: t
                                        });
                                    u.push(n), v.source.add(n), I.mapoverlayersflayer.push([_.uuid, e.uuid, n])
                                }
                            }), console.log(v), _.label.visible && (F = void 0, _.label.labelingInfo ? (F = _.label.labelingInfo, v.labelingInfo = F) : (F = "2d" === this.view.type ? {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            } : {
                                type: "label-3d",
                                symbolLayers: [{
                                    type: "text",
                                    material: {
                                        color: _.label.color
                                    },
                                    size: _.label.size,
                                    halo: {
                                        color: _.label.haloColor,
                                        size: _.label.haloSize
                                    }
                                }]
                            }, E = new i({
                                labelExpressionInfo: {
                                    expression: "$feature.NAME"
                                },
                                symbol: F,
                                labelPlacement: _.label.placement,
                                minScale: _.label.minScale,
                                maxScale: _.label.maxScale
                            }), v.labelingInfo = [E])))) : "element" === _.type && (b = [{
                                name: "objectId",
                                alias: "objectId",
                                type: "oid"
                            }, {
                                name: "uuid",
                                alias: "唯一标识",
                                type: "string"
                            }], Object.keys(_.attributes).forEach(function (e) {
                                b.push({
                                    name: e,
                                    alias: e,
                                    type: "string"
                                })
                            }), "marker" === _.overlaytype.toLowerCase() ? (m = void 0, m = _.renderer ? _.renderer : "3d" === this.view.type ? {
                                type: "simple",
                                symbol: {
                                    type: "point-3d",
                                    symbolLayers: [{
                                        type: "icon",
                                        size: _.icon.size.width,
                                        resource: {
                                            href: _.icon.image
                                        }
                                    }]
                                }
                            } : {
                                type: "simple",
                                symbol: {
                                    type: "picture-marker",
                                    url: _.icon.image,
                                    width: _.icon.size.width,
                                    height: _.icon.size.height
                                }
                            }, R = new r({
                                id: this.displayedLayerid,
                                title: "Overlayer-marker-" + this.displayedLayerid,
                                visible: _.visible,
                                objectIdField: "objectId",
                                geometryType: "point",
                                renderer: m,
                                screenSizePerspectiveEnabled: !0,
                                maxScale: _.maxScale,
                                minScale: _.minScale,
                                popupEnabled: !1,
                                popupTemplate: !1,
                                fields: b,
                                source: [],
                                spatialReference: this.view.spatialReference
                            }), _.elevationInfo && "3d" === this.view.type && (R.elevationInfo = _.elevationInfo), _.position && _.attributes && ((k = _.attributes).uuid = _.uuid, z = new o({
                                geometry: new n({
                                    x: _.position[0],
                                    y: _.position[1],
                                    z: void 0 === _.position[2] ? 0 : _.position[2],
                                    spatialReference: this.view.spatialReference
                                }),
                                attributes: k
                            }), u.push(z), R.source.add(z), this.mapoverlayersflayer.push([_.uuid, _.uuid, z])), this.view.map.add(R), _.label.visible && (F = void 0, _.label.labelingInfo ? (F = _.label.labelingInfo, R.labelingInfo = F) : (F = "2d" === this.view.type ? {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            } : {
                                type: "label-3d",
                                symbolLayers: [{
                                    type: "text",
                                    material: {
                                        color: _.label.color
                                    },
                                    size: _.label.size,
                                    halo: {
                                        color: _.label.haloColor,
                                        size: _.label.haloSize
                                    }
                                }]
                            }, E = new i({
                                labelExpressionInfo: {
                                    expression: "$feature.NAME"
                                },
                                symbol: F,
                                labelPlacement: _.label.placement,
                                minScale: _.label.minScale,
                                maxScale: _.label.maxScale
                            }), R.labelingInfo = [E]))) : "circle" === _.overlaytype.toLowerCase() ? (w = void 0, w = _.renderer ? _.renderer : "simple" === _.symboltype ? {
                                type: "simple",
                                symbol: {
                                    type: "simple-fill",
                                    color: _.fillColor,
                                    style: _.style,
                                    outline: {
                                        color: _.strokeColor,
                                        width: _.strokeWeight,
                                        style: _.strokestyle
                                    }
                                }
                            } : {
                                type: "picture-fill",
                                url: _.url,
                                width: _.picwidth,
                                height: _.picheight,
                                outline: {
                                    style: _.strokestyle,
                                    color: _.strokeColor,
                                    width: _.strokeWeight
                                }
                            }, R = new r({
                                id: this.displayedLayerid,
                                title: "Overlayer-circle-" + this.displayedLayerid,
                                objectIdField: "objectId",
                                geometryType: "polygon",
                                renderer: w,
                                screenSizePerspectiveEnabled: !0,
                                popupEnabled: !1,
                                popupTemplate: !1,
                                visible: _.visible,
                                maxScale: _.maxScale,
                                minScale: _.minScale,
                                fields: b,
                                source: [],
                                spatialReference: this.view.spatialReference
                            }), _.elevationInfo && "3d" === this.view.type && (R.elevationInfo = _.elevationInfo), _.center && _.radius && _.attributes && ((k = _.attributes).uuid = _.uuid, z = new o({
                                geometry: new a({
                                    center: new n({
                                        x: _.center.X,
                                        y: _.center.Y,
                                        z: _.center.Z,
                                        spatialReference: this.view.spatialReference
                                    }),
                                    radius: _.radius,
                                    radiusUnit: _.radiusUnit,
                                    spatialReference: this.view.spatialReference
                                }),
                                attributes: k
                            }), u.push(z), R.source.add(z), this.mapoverlayersflayer.push([_.uuid, _.uuid, z])), this.view.map.add(R), _.label.visible && (F = void 0, _.label.labelingInfo ? (F = _.label.labelingInfo, R.labelingInfo = F) : (F = "2d" === this.view.type ? {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            } : {
                                type: "label-3d",
                                symbolLayers: [{
                                    type: "text",
                                    material: {
                                        color: _.label.color
                                    },
                                    size: _.label.size,
                                    halo: {
                                        color: _.label.haloColor,
                                        size: _.label.haloSize
                                    }
                                }]
                            }, E = new i({
                                labelExpressionInfo: {
                                    expression: "$feature.NAME"
                                },
                                symbol: F,
                                labelPlacement: _.label.placement,
                                minScale: _.label.minScale,
                                maxScale: _.label.maxScale
                            }), R.labelingInfo = [E]))) : "polyline" === _.overlaytype.toLowerCase() ? (g = void 0, _.renderer || (g = "simple" === _.symboltype ? {
                                type: "simple",
                                symbol: {
                                    type: "simple-line",
                                    color: _.strokeColor,
                                    style: _.style,
                                    width: _.width,
                                    cap: _.cap,
                                    join: _.lineJoin
                                }
                            } : _.renderer, R = new r({
                                id: this.displayedLayerid,
                                title: "Overlayer-polyline-" + this.displayedLayerid,
                                objectIdField: "objectId",
                                geometryType: "polyline",
                                renderer: g,
                                screenSizePerspectiveEnabled: !0,
                                popupEnabled: !1,
                                popupTemplate: !1,
                                visible: _.visible,
                                maxScale: _.maxScale,
                                minScale: _.minScale,
                                fields: b,
                                source: [],
                                spatialReference: this.view.spatialReference
                            }), _.elevationInfo && "3d" === this.view.type && (R.elevationInfo = _.elevationInfo), _.path && _.attributes && ((k = _.attributes).uuid = _.uuid, x = [], _.path.forEach(function (e) {
                                x.push([e.X, e.Y, e.Z])
                            }), L = new l({
                                hasZ: !1,
                                hasM: !1,
                                paths: x,
                                spatialReference: this.view.spatialReference
                            }), z = new o({
                                geometry: L,
                                attributes: k
                            }), u.push(z), R.source.add(z), this.mapoverlayersflayer.push([_.uuid, _.uuid, z])), this.view.map.add(R), _.label.visible && (F = void 0, _.label.labelingInfo ? (F = _.label.labelingInfo, R.labelingInfo = F) : (F = "2d" === this.view.type ? {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            } : {
                                type: "label-3d",
                                symbolLayers: [{
                                    type: "text",
                                    material: {
                                        color: _.label.color
                                    },
                                    size: _.label.size,
                                    halo: {
                                        color: _.label.haloColor,
                                        size: _.label.haloSize
                                    }
                                }]
                            }, E = new i({
                                labelExpressionInfo: {
                                    expression: "$feature.NAME"
                                },
                                symbol: F,
                                labelPlacement: _.label.placement,
                                minScale: _.label.minScale,
                                maxScale: _.label.maxScale
                            }), R.labelingInfo = [E])))) : "polygon" === _.overlaytype.toLowerCase() && (C = void 0, C = _.renderer ? _.symbol : "simple" === _.symboltype ? {
                                type: "simple",
                                symbol: {
                                    type: "simple-fill",
                                    color: _.fillColor,
                                    style: _.style,
                                    outline: {
                                        color: _.strokeColor,
                                        width: _.strokeWeight,
                                        style: _.strokestyle
                                    }
                                }
                            } : {
                                type: "simple",
                                symbol: {
                                    type: "picture-fill",
                                    url: _.url,
                                    width: _.picwidth,
                                    height: _.picheight,
                                    outline: {
                                        style: _.strokestyle,
                                        color: _.strokeColor,
                                        width: _.strokeWeight
                                    }
                                }
                            }, R = new r({
                                id: this.displayedLayerid,
                                title: "Overlayer-polygon-" + this.displayedLayerid,
                                objectIdField: "objectId",
                                geometryType: "polygon",
                                renderer: C,
                                screenSizePerspectiveEnabled: !0,
                                popupEnabled: !1,
                                popupTemplate: !1,
                                visible: _.visible,
                                maxScale: _.maxScale,
                                minScale: _.minScale,
                                fields: b,
                                source: [],
                                spatialReference: this.view.spatialReference
                            }), _.elevationInfo && "3d" === this.view.type && (R.elevationInfo = _.elevationInfo), _.paths && _.attributes && ((k = _.attributes).uuid = _.uuid, A = [], _.paths.forEach(function (e) {
                                A.push([e.X, e.Y, e.Z])
                            }), S = new s({
                                hasZ: !0,
                                hasM: !0,
                                rings: A,
                                spatialReference: this.view.spatialReference
                            }), z = new o({
                                geometry: S,
                                attributes: k
                            }), u.push(z), R.source.add(z), this.mapoverlayersflayer.push([_.uuid, _.uuid, z])), this.view.map.add(R), _.label.visible && (F = void 0, _.label.labelingInfo ? (F = _.label.labelingInfo, R.labelingInfo = F) : (F = "2d" === this.view.type ? {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            } : {
                                type: "label-3d",
                                symbolLayers: [{
                                    type: "text",
                                    material: {
                                        color: _.label.color
                                    },
                                    size: _.label.size,
                                    halo: {
                                        color: _.label.haloColor,
                                        size: _.label.haloSize
                                    }
                                }]
                            }, E = new i({
                                labelExpressionInfo: {
                                    expression: "$feature.NAME"
                                },
                                symbol: F,
                                labelPlacement: _.label.placement,
                                minScale: _.label.minScale,
                                maxScale: _.label.maxScale
                            }), R.labelingInfo = [E])))), [2, new B.Promise(function (e, t) {
                                e(u)
                            })]
                    }
                })
            })
        }, Wt.prototype.addfeature = function (v) {
            return Mt(this, void 0, void 0, function () {
                var t, l, s, c, u, p, r, d, i, n, o, a, y, f, h = this;
                return jt(this, function (e) {
                    switch (e.label) {
                        case 0:
                            return [4, P(["esri/layers/FeatureLayer", "esri/layers/support/LabelClass", "esri/Graphic", "esri/geometry/Point", "esri/geometry/Circle", "esri/symbols/PictureMarkerSymbol", "esri/geometry/Polyline", "esri/geometry/Polygon"])];
                        case 1:
                            return (t = e.sent())[0], t[1], l = t[2], s = t[3], c = t[4], t[5], u = t[6], p = t[7], (r = this.view.map.findLayerById(this.displayedLayerid)) && (d = [], v instanceof Array ? (v.forEach(function (e) {
                                if ("marker" === e.overlaytype.toLowerCase()) {
                                    (n = e.attributes).uuid = e.uuid;
                                    var t = new l({
                                        geometry: new s({
                                            x: e.position[0],
                                            y: e.position[1],
                                            z: void 0 === e.position[2] ? 0 : e.position[2],
                                            spatialReference: h.view.spatialReference
                                        }),
                                        attributes: n
                                    });
                                    d.push(t), h.mapoverlayersflayer.push([e.uuid, e.uuid, t])
                                } else if ("circle" === e.overlaytype.toLowerCase())(n = e.attributes).uuid = e.uuid, t = new l({
                                    geometry: new c({
                                        center: new s({
                                            x: e.center.X,
                                            y: e.center.Y,
                                            z: e.center.Z,
                                            spatialReference: h.view.spatialReference
                                        }),
                                        radius: e.radius,
                                        radiusUnit: e.radiusUnit,
                                        spatialReference: h.view.spatialReference
                                    }),
                                    attributes: n
                                }), d.push(t), h.mapoverlayersflayer.push([e.uuid, e.uuid, t]);
                                else if ("polyline" === e.overlaytype.toLowerCase()) {
                                    (n = e.attributes).uuid = e.uuid;
                                    var r = [];
                                    e.path.forEach(function (e) {
                                        r.push([e.X, e.Y, e.Z])
                                    });
                                    var i = new u({
                                        hasZ: !1,
                                        hasM: !1,
                                        paths: r,
                                        spatialReference: h.view.spatialReference
                                    });
                                    t = new l({
                                        geometry: i,
                                        attributes: n
                                    }), d.push(t), h.mapoverlayersflayer.push([e.uuid, e.uuid, t])
                                } else if ("polygon" === e.overlaytype.toLowerCase()) {
                                    var n;
                                    (n = e.attributes).uuid = e.uuid;
                                    var o = [];
                                    e.paths.forEach(function (e) {
                                        o.push([e.X, e.Y, e.Z])
                                    });
                                    var a = new p({
                                        hasZ: !0,
                                        hasM: !0,
                                        rings: o,
                                        spatialReference: h.view.spatialReference
                                    });
                                    t = new l({
                                        geometry: a,
                                        attributes: n
                                    }), d.push(t), h.mapoverlayersflayer.push([e.uuid, e.uuid, t])
                                }
                            }), r.applyEdits({
                                addFeatures: d
                            }).then(function (e) {
                                return new B.Promise(function (e, t) {
                                    e(d)
                                })
                            })) : ("marker" === v.overlaytype.toLowerCase() ? ((o = v.attributes).uuid = v.uuid, f = new l({
                                geometry: new s({
                                    x: v.position[0],
                                    y: v.position[1],
                                    z: void 0 === v.position[2] ? 0 : v.position[2],
                                    spatialReference: this.view.spatialReference
                                }),
                                attributes: o
                            }), d.push(f), this.mapoverlayersflayer.push([v.uuid, v.uuid, f])) : "circle" === v.overlaytype.toLowerCase() ? ((o = v.attributes).uuid = v.uuid, f = new l({
                                geometry: new c({
                                    center: new s({
                                        x: v.center.X,
                                        y: v.center.Y,
                                        z: v.center.Z,
                                        spatialReference: this.view.spatialReference
                                    }),
                                    radius: v.radius,
                                    radiusUnit: v.radiusUnit,
                                    spatialReference: this.view.spatialReference
                                }),
                                attributes: o
                            }), d.push(f), this.mapoverlayersflayer.push([v.uuid, v.uuid, f])) : "polyline" === v.overlaytype.toLowerCase() ? ((o = v.attributes).uuid = v.uuid, i = [], v.path.forEach(function (e) {
                                i.push([e.X, e.Y, e.Z])
                            }), n = new u({
                                hasZ: !1,
                                hasM: !1,
                                paths: i,
                                spatialReference: this.view.spatialReference
                            }), f = new l({
                                geometry: n,
                                attributes: o
                            }), d.push(f), this.mapoverlayersflayer.push([v.uuid, v.uuid, f])) : "polygon" === v.overlaytype.toLowerCase() && ((o = v.attributes).uuid = v.uuid, a = [], v.paths.forEach(function (e) {
                                a.push([e.X, e.Y, e.Z])
                            }), y = new p({
                                hasZ: !0,
                                hasM: !0,
                                rings: a,
                                spatialReference: this.view.spatialReference
                            }), f = new l({
                                geometry: y,
                                attributes: o
                            }), d.push(f), this.mapoverlayersflayer.push([v.uuid, v.uuid, f])), r.applyEdits({
                                addFeatures: d
                            }).then(function (e) {
                                return new B.Promise(function (e, t) {
                                    e(d)
                                })
                            }))), [2]
                    }
                })
            })
        }, Wt.prototype.updatefeature = function (f) {
            return Mt(this, void 0, void 0, function () {
                var t, l, s, c, u, p, r, d, y = this;
                return jt(this, function (e) {
                    switch (e.label) {
                        case 0:
                            return [4, P(["esri/layers/FeatureLayer", "esri/layers/support/LabelClass", "esri/Graphic", "esri/geometry/Point", "esri/geometry/Circle", "esri/symbols/PictureMarkerSymbol", "esri/geometry/Polyline", "esri/geometry/Polygon"])];
                        case 1:
                            return (t = e.sent())[0], t[1], t[2], l = t[3], s = t[4], t[5], c = t[6], u = t[7], this.view.map.findLayerById(this.displayedLayerid) && (p = [], f instanceof Array ? (f.forEach(function (t) {
                                var r = y.mapoverlayersflayer.filter(function (e) {
                                    return e[1] === t.uuid
                                });
                                if (1 === r.length) {
                                    if ("marker" === t.overlaytype.toLowerCase()) {
                                        var e = new l({
                                            x: t.position[0],
                                            y: t.position[1],
                                            z: void 0 === t.position[2] ? 0 : t.position[2],
                                            spatialReference: y.view.spatialReference
                                        });
                                        r[0][2].geometry = e
                                    } else if ("circle" === t.overlaytype.toLowerCase()) e = new s({
                                        center: new l({
                                            x: t.center.X,
                                            y: t.center.Y,
                                            z: t.center.Z,
                                            spatialReference: y.view.spatialReference
                                        }),
                                        radius: t.radius,
                                        radiusUnit: t.radiusUnit,
                                        spatialReference: y.view.spatialReference
                                    }), r[0][2].geometry = e;
                                    else if ("polyline" === t.overlaytype.toLowerCase()) {
                                        var i = [];
                                        t.path.forEach(function (e) {
                                            i.push([e.X, e.Y, e.Z])
                                        });
                                        var n = new c({
                                            hasZ: !1,
                                            hasM: !1,
                                            paths: i,
                                            spatialReference: y.view.spatialReference
                                        });
                                        r[0][2].geometry = n
                                    } else if ("polygon" === t.overlaytype.toLowerCase()) {
                                        var o = [];
                                        t.paths.forEach(function (e) {
                                            o.push([e.X, e.Y, e.Z])
                                        });
                                        var a = new u({
                                            hasZ: !0,
                                            hasM: !0,
                                            rings: o,
                                            spatialReference: y.view.spatialReference
                                        });
                                        r[0][2].geometry = a
                                    }
                                    Object.keys(t.attributes).map(function (e) {
                                        "objectId" !== e && r[0][2].setAttribute(e, t.attributes[e])
                                    }), p.push(r[0][2])
                                }
                            }), (r = this.view.map.findLayerById(this.displayedLayerid)) && p.length && r.applyEdits({
                                updateFeatures: p
                            }).then(function (e) {
                                return new B.Promise(function (e, t) {
                                    e(p)
                                })
                            })) : "group" === f.type ? (f.overlayers.forEach(function (t) {
                                var r = y.mapoverlayersflayer.filter(function (e) {
                                    return e[1] === t.uuid
                                });
                                if (1 === r.length) {
                                    if ("marker" === t.overlaytype.toLowerCase()) {
                                        var e = new l({
                                            x: t.position[0],
                                            y: t.position[1],
                                            z: void 0 === t.position[2] ? 0 : t.position[2],
                                            spatialReference: y.view.spatialReference
                                        });
                                        r[0][2].geometry = e
                                    } else if ("circle" === t.overlaytype.toLowerCase()) e = new s({
                                        center: new l({
                                            x: t.center.X,
                                            y: t.center.Y,
                                            z: t.center.Z,
                                            spatialReference: y.view.spatialReference
                                        }),
                                        radius: t.radius,
                                        radiusUnit: t.radiusUnit,
                                        spatialReference: y.view.spatialReference
                                    }), r[0][2].geometry = e;
                                    else if ("polyline" === t.overlaytype.toLowerCase()) {
                                        var i = [];
                                        t.path.forEach(function (e) {
                                            i.push([e.X, e.Y, e.Z])
                                        });
                                        var n = new c({
                                            hasZ: !1,
                                            hasM: !1,
                                            paths: i,
                                            spatialReference: y.view.spatialReference
                                        });
                                        r[0][2].geometry = n
                                    } else if ("polygon" === t.overlaytype.toLowerCase()) {
                                        var o = [];
                                        t.paths.forEach(function (e) {
                                            o.push([e.X, e.Y, e.Z])
                                        });
                                        var a = new u({
                                            hasZ: !0,
                                            hasM: !0,
                                            rings: o,
                                            spatialReference: y.view.spatialReference
                                        });
                                        r[0][2].geometry = a
                                    }
                                    Object.keys(t.attributes).map(function (e) {
                                        "objectId" !== e && r[0][2].setAttribute(e, t.attributes[e])
                                    }), p.push(r[0][2])
                                }
                            }), (r = this.view.map.findLayerById(this.displayedLayerid)) && p.length && r.applyEdits({
                                updateFeatures: p
                            }).then(function (e) {
                                return new B.Promise(function (e, t) {
                                    e(p)
                                })
                            })) : "element" === f.type && (d = this.mapoverlayersflayer.filter(function (e) {
                                return e[1] === f.uuid
                            })).forEach(function (t) {
                                if (f.attributes.uuid = f.uuid, "marker" === f.overlaytype.toLowerCase()) {
                                    var e = new l({
                                        x: f.position[0],
                                        y: f.position[1],
                                        z: void 0 === f.position[2] ? 0 : f.position[2],
                                        spatialReference: y.view.spatialReference
                                    });
                                    t[2].geometry = e
                                } else if ("circle" === f.overlaytype.toLowerCase()) e = new s({
                                    center: new l({
                                        x: f.center.X,
                                        y: f.center.Y,
                                        z: f.center.Z,
                                        spatialReference: y.view.spatialReference
                                    }),
                                    radius: f.radius,
                                    radiusUnit: f.radiusUnit,
                                    spatialReference: y.view.spatialReference
                                }), d[0][2].geometry = e;
                                else if ("polyline" === f.overlaytype.toLowerCase()) {
                                    var r = [];
                                    f.path.forEach(function (e) {
                                        r.push([e.X, e.Y, e.Z])
                                    });
                                    var i = new c({
                                        hasZ: !1,
                                        hasM: !1,
                                        paths: r,
                                        spatialReference: y.view.spatialReference
                                    });
                                    d[0][2].geometry = i
                                } else if ("polygon" === f.overlaytype.toLowerCase()) {
                                    var n = [];
                                    f.paths.forEach(function (e) {
                                        n.push([e.X, e.Y, e.Z])
                                    });
                                    var o = new u({
                                        hasZ: !0,
                                        hasM: !0,
                                        rings: n,
                                        spatialReference: y.view.spatialReference
                                    });
                                    d[0][2].geometry = o
                                }
                                Object.keys(f.attributes).map(function (e) {
                                    "objectId" !== e && t[2].setAttribute(e, f.attributes[e])
                                }), p.push(t[2]);
                                var a = y.view.map.findLayerById(y.displayedLayerid);
                                a && p.length && a.applyEdits({
                                    updateFeatures: p
                                }).then(function (e) {
                                    return new B.Promise(function (e, t) {
                                        e(p)
                                    })
                                })
                            })), [2]
                    }
                })
            })
        }, Wt.prototype.removefeature = function (t) {
            var e = this;
            if (this.view.map.findLayerById(this.displayedLayerid))
                if (t instanceof Array) {
                    var r = [];
                    t.forEach(function (t) {
                        e.mapoverlayersflayer.filter(function (e) {
                            return e[1] === t.uuid
                        }).forEach(function (e) {
                            r.push(e[2])
                        }), e.mapoverlayersflayer = e.mapoverlayersflayer.filter(function (e) {
                            return e[1] !== t.uuid
                        })
                    }), (o = this.view.map.findLayerById(this.displayedLayerid)) && r.length && o.applyEdits({
                        deleteFeatures: r
                    }).then(function (e) {})
                } else if ("group" === t.type) {
                var i = this.mapoverlayersflayer.filter(function (e) {
                        return e[0] === t.uuid
                    }),
                    n = [];
                i.forEach(function (e) {
                    n.push(e[2])
                }), (o = this.view.map.findLayerById(this.displayedLayerid)) && n.length && o.applyEdits({
                    deleteFeatures: n
                }).then(function (e) {}), this.mapoverlayersflayer = this.mapoverlayersflayer.filter(function (e) {
                    return e[0] !== t.uuid
                })
            } else if ("element" === t.type) {
                i = this.mapoverlayersflayer.filter(function (e) {
                    return e[1] === t.uuid
                });
                var o, a = [];
                i.forEach(function (e) {
                    a.push(e[2])
                }), (o = this.view.map.findLayerById(this.displayedLayerid)) && a.length && o.applyEdits({
                    deleteFeatures: a
                }).then(function (e) {}), this.mapoverlayersflayer = this.mapoverlayersflayer.filter(function (e) {
                    return e[1] !== t.uuid
                })
            }
        }, Wt.prototype.removeAll = function () {
            var t = this,
                e = this.view.map.findLayerById(this.displayedLayerid);
            if (e) {
                var r = [];
                this.mapoverlayersflayer.forEach(function (e) {
                    r.push(e[2])
                }), e.applyEdits({
                    deleteFeatures: r
                }).then(function (e) {
                    t.mapoverlayersflayer = []
                })
            }
        }, Wt.prototype.delete = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (this.view.map.remove(e), this.mapoverlayersflayer = [])
        }, Wt.prototype.addcluster = function (e) {
            var t = this.view.map.findLayerById(this.displayedLayerid);
            t && (t.featureReduction = e)
        }, Wt.prototype.deletecluster = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.featureReduction = null)
        }, Wt.prototype.show = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !0)
        }, Wt.prototype.hide = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !1)
        }, Wt.prototype.init = function (r) {
            return Mt(this, void 0, void 0, function () {
                var t = this;
                return jt(this, function (e) {
                    return this.displayedLayerid = (new x).uuid, this.view = r, this.view.on(q.click, function (a) {
                        t.view.hitTest(a).then(function (o) {
                            return Mt(t, void 0, void 0, function () {
                                var t, r, i, n = this;
                                return jt(this, function (e) {
                                    if (0 < o.results.length) {
                                        if (!o.results[0].graphic.layer) return [2];
                                        if (!(t = o.results[0].graphic.layer.id)) return [2];
                                        t === this.displayedLayerid && (r = o.results[0].graphic.attributes.objectId, (i = o.results[0].graphic.layer.createQuery()).where = "objectId =" + r, o.results[0].graphic.layer.queryFeatures(i).then(function (e) {
                                            0 < e.features.length && n.emit(q.click, e.features, a, a.mapPoint)
                                        }))
                                    }
                                    return [2]
                                })
                            })
                        })
                    }), this.view.on(q.pointermove, function (l) {
                        t.view.hitTest(l).then(function (a) {
                            return Mt(t, void 0, void 0, function () {
                                var t, r, i, n, o = this;
                                return jt(this, function (e) {
                                    if (0 < a.results.length) {
                                        if (!a.results[0].graphic.layer) return [2];
                                        if (!(t = a.results[0].graphic.layer.id)) return [2];
                                        t === this.displayedLayerid && (r = a.results[0].graphic.attributes.objectId, (i = a.results[0].graphic.layer.createQuery()).where = "objectId =" + r, a.results[0].graphic.layer.queryFeatures(i).then(function (e) {
                                            0 < e.features.length && (o.eventResult = e.features, o.emit(q.pointermove, e.features, l, o.view.toMap({
                                                x: l.x,
                                                y: l.y
                                            })))
                                        }))
                                    } else {
                                        if (null === this.eventResult) return [2];
                                        n = this.eventResult, this.eventResult = null, this.emit(q.pointerleave, n, l, this.view.toMap({
                                            x: l.x,
                                            y: l.y
                                        }))
                                    }
                                    return [2]
                                })
                            })
                        })
                    }), [2]
                })
            })
        }, Wt);

    function Wt(e) {
        var t = Pt.call(this) || this;
        return t.displayedLayerid = "", t.view = null, t.mapoverlayersflayer = [], t.eventResult = null, t.init(e), t
    }
    var Tt, Gt, Zt = (Tt = function (e, t) {
            return (Tt = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            Tt(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Ht = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        qt = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Jt = (Zt(Xt, Gt = e), Xt.prototype.add = function (n) {
            var o = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/FireRenderer", "esri/views/3d/externalRenderers"]).then(function (e) {
                var r = e[0],
                    i = e[1];
                n.points.forEach(function (e) {
                    var t = new r(o.view, e, n.options);
                    i.add(o.view, t), o.fireRendererRendererArray.push([(new x).uuid, t])
                })
            }).catch(function (e) {
                console.error(e)
            })
        }, Xt.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.fireRendererRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                })
            })
        }, Xt.prototype.init = function (t) {
            return Ht(this, void 0, void 0, function () {
                return qt(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, Xt);

    function Xt(e) {
        var t = Gt.call(this) || this;
        return t.fireRendererRendererArray = [], t.view = null, t.init(e), t
    }
    var Yt, Ut, Nt = (Yt = function (e, t) {
            return (Yt = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            Yt(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Vt = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        $t = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Qt = (Nt(Kt, Ut = e), Kt.prototype.add = function (n) {
            var o = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/4E3CE3AF-B592-B4F6-576E1B86F84B6969", "esri/geometry/Point", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = e[2];
                n.points && (o.markpoints = n.points.map(function (e) {
                    return e.markerid = (new x).uuid, e
                }), o.markpointscontainerid = (new x).uuid, o.flashGifLayer = new t({
                    points: o.markpoints,
                    view: o.view,
                    markercontainerid: o.markpointscontainerid
                }, function (e) {
                    var t = null;
                    null != e && (t = new r({
                        x: e.x,
                        y: e.y,
                        spatialReference: {
                            wkid: 102100
                        }
                    })), o.emit(q.click, e, t)
                }, function (e) {
                    var t = null;
                    null != e && (t = new r({
                        x: e.x,
                        y: e.y,
                        spatialReference: {
                            wkid: 102100
                        }
                    })), o.emit(q.pointermove, e, t)
                }), i.add(o.view, o.flashGifLayer), o.markpointsRendererArray.push([(new x).uuid, o.flashGifLayer]))
            })
        }, Kt.prototype.remove = function () {
            var i = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                i.markpointsRendererArray.map(function (e) {
                    t.remove(i.view, e[1])
                }), i.markpointsRendererArray = [], i.markpoints.forEach(function (e) {
                    var t = document.getElementById(i.markpointscontainerid),
                        r = document.getElementById(e.markerid);
                    null !== r && t.removeChild(r)
                })
            })
        }, Kt.prototype.init = function (t) {
            return Vt(this, void 0, void 0, function () {
                return $t(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, Kt);

    function Kt(e) {
        var t = Ut.call(this) || this;
        return t.markpointsRendererArray = [], t.markpoints = null, t.view = null, t.flashGifLayer = null, t.markpointscontainerid = null, t.init(e), t
    }
    var er, tr, rr = (er = function (e, t) {
            return (er = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            er(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        ir = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        nr = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        or = (rr(ar, tr = e), ar.prototype.add = function (n) {
            var o = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/92586C78-6DE2-946F-F03F88AF0F8D0D7F", "esri/geometry/Point", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = e[2];
                o.falshpoint3DRenderer = new t({
                    nring: n.nring,
                    spead: n.spead,
                    size: n.size,
                    color: n.color,
                    view: n.view,
                    points: n.points
                }, function (e) {
                    var t = null;
                    null != e && (t = new r({
                        x: e.x,
                        y: e.y,
                        spatialReference: {
                            wkid: 102100
                        }
                    })), o.emit(q.click, e, t)
                }, function (e) {
                    var t = null;
                    null != e && (t = new r({
                        x: e.x,
                        y: e.y,
                        spatialReference: {
                            wkid: 102100
                        }
                    })), o.emit(q.pointermove, e, t)
                }), i.add(o.view, o.falshpoint3DRenderer)
            })
        }, ar.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.falshpoint3DRenderer && t.remove(r.view, r.falshpoint3DRenderer)
            })
        }, ar.prototype.init = function (t) {
            return ir(this, void 0, void 0, function () {
                return nr(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, ar);

    function ar(e) {
        var t = tr.call(this) || this;
        return t.view = null, t.falshpoint3DRenderer = null, t.init(e), t
    }
    var lr, sr, cr = (lr = function (e, t) {
            return (lr = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            lr(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        ur = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        pr = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        dr = (cr(yr, sr = e), yr.prototype.add = function (_) {
            return ur(this, void 0, void 0, function () {
                var t, L, C, r, R, k, A, S, i, n, o, a, l, s, c, u, p, d, y, f, h, v, b, m, w, g, x, z, F, E, I = this;
                return pr(this, function (e) {
                    switch (e.label) {
                        case 0:
                            return [4, P(["esri/Graphic", "esri/geometry/Point", "esri/layers/GraphicsLayer", "esri/symbols/PictureMarkerSymbol", "esri/geometry/Polyline", "esri/geometry/Polygon", "esri/geometry/Circle"])];
                        case 1:
                            return t = e.sent(), L = t[0], C = t[1], r = t[2], t[3], R = t[4], k = t[5], A = t[6], S = [], (i = this.view.map.findLayerById(this.displayedLayerid)) || (i = new r({
                                id: this.displayedLayerid,
                                title: "Overlayer-" + this.displayedLayerid
                            }), this.view.map.add(i)), _ instanceof Array ? _.forEach(function (e) {
                                if ("marker" === e.overlaytype.toLowerCase()) {
                                    var t = void 0;
                                    t = e.symbol ? e.symbol : "2d" === I.view.type ? {
                                        type: "picture-marker",
                                        url: e.icon.image,
                                        width: e.icon.size.width,
                                        height: e.icon.size.height
                                    } : {
                                        type: "point-3d",
                                        symbolLayers: [{
                                            type: "icon",
                                            size: e.icon.size.width,
                                            resource: {
                                                href: e.icon.image
                                            }
                                        }]
                                    };
                                    var r = e.attributes;
                                    r.uuid = e.uuid;
                                    var i = new L({
                                        geometry: new C({
                                            x: e.position[0],
                                            y: e.position[1],
                                            z: void 0 === e.position[2] ? 0 : e.position[2],
                                            spatialReference: I.view.spatialReference
                                        }),
                                        symbol: t,
                                        attributes: r
                                    });
                                    if (S.push(i), I.mapoverlayers.push(["smap-default", e.uuid, i]), (w = I.view.map.findLayerById(I.displayedLayerid)) && w.add(i), e.label.visible) {
                                        var n = null;
                                        n = e.label.labelingInfo ? e.label.labelingInfo : {
                                            type: e.label.type,
                                            text: e.label.text,
                                            color: e.label.color,
                                            angle: e.label.angle,
                                            backgroundColor: e.label.backgroundColor,
                                            borderLineColor: e.label.borderLineColor,
                                            borderLineSize: e.label.borderLineSize,
                                            kerning: e.label.kerning,
                                            lineHeight: e.label.lineHeight,
                                            lineWidth: e.label.lineWidth,
                                            rotated: e.label.rotated,
                                            haloColor: e.label.haloColor,
                                            haloSize: e.label.haloSize,
                                            xoffset: e.label.xoffset,
                                            yoffset: e.label.yoffset,
                                            verticalAlignment: e.label.verticalAlignment,
                                            horizontalAlignment: e.label.horizontalAlignment,
                                            font: {
                                                size: e.label.size,
                                                family: "Josefin Slab",
                                                weight: e.label.weight
                                            }
                                        };
                                        var o = new L({
                                            geometry: new C({
                                                x: "3d" === I.view.type ? e.position[0] + e.label.xoffset : e.position[0],
                                                y: "3d" === I.view.type ? e.position[1] + e.label.yoffset : e.position[1],
                                                z: "3d" === I.view.type ? e.position[2] + e.label.zoffset : e.position[2],
                                                spatialReference: I.view.spatialReference
                                            }),
                                            symbol: n,
                                            attributes: r
                                        });
                                        (g = I.view.map.findLayerById(I.displayedLayerid)) && g.add(o), I.mapoverlayers.push(["smap-default", e.uuid, o])
                                    }
                                } else if ("polyline" === e.overlaytype.toLowerCase()) {
                                    var a = null;
                                    a = e.symbol ? e.symbol : {
                                        type: "simple-line",
                                        color: e.strokeColor,
                                        style: e.style,
                                        width: e.width,
                                        cap: e.cap,
                                        join: e.lineJoin
                                    };
                                    var l = [];
                                    e.path.forEach(function (e) {
                                        l.push([e.X, e.Y, e.Z])
                                    });
                                    var s = new R({
                                            hasZ: !1,
                                            hasM: !1,
                                            paths: l,
                                            spatialReference: I.view.spatialReference
                                        }),
                                        c = e.attributes;
                                    c.uuid = e.uuid;
                                    var u = new L({
                                        geometry: s,
                                        symbol: a,
                                        attributes: c
                                    });
                                    if (S.push(u), I.mapoverlayers.push(["smap-default", e.uuid, u]), (w = I.view.map.findLayerById(I.displayedLayerid)) && w.add(u), e.label.visible) {
                                        var p = null;
                                        p = e.label.labelingInfo ? e.label.labelingInfo : {
                                            type: e.label.type,
                                            text: e.label.text,
                                            color: e.label.color,
                                            angle: e.label.angle,
                                            backgroundColor: e.label.backgroundColor,
                                            borderLineColor: e.label.borderLineColor,
                                            borderLineSize: e.label.borderLineSize,
                                            kerning: e.label.kerning,
                                            lineHeight: e.label.lineHeight,
                                            lineWidth: e.label.lineWidth,
                                            rotated: e.label.rotated,
                                            haloColor: e.label.haloColor,
                                            haloSize: e.label.haloSize,
                                            xoffset: e.label.xoffset,
                                            yoffset: e.label.yoffset,
                                            verticalAlignment: e.label.verticalAlignment,
                                            horizontalAlignment: e.label.horizontalAlignment,
                                            font: {
                                                size: e.label.size,
                                                family: "Josefin Slab",
                                                weight: e.label.weight
                                            }
                                        }, o = new L({
                                            geometry: u.geometry.extent.center,
                                            symbol: p,
                                            attributes: c
                                        }), (g = I.view.map.findLayerById(I.displayedLayerid)) && g.add(o), I.mapoverlayers.push(["smap-default", e.uuid, o])
                                    }
                                } else if ("polygon" === e.overlaytype.toLowerCase()) {
                                    var d = void 0;
                                    d = e.symbol ? e.symbol : "simple" === e.symboltype ? {
                                        type: "simple-fill",
                                        color: e.fillColor,
                                        style: e.style,
                                        outline: {
                                            color: e.strokeColor,
                                            width: e.strokeWeight,
                                            style: e.strokestyle
                                        }
                                    } : {
                                        type: "picture-fill",
                                        url: e.url,
                                        width: e.picwidth,
                                        height: e.picheight,
                                        outline: {
                                            style: e.strokestyle,
                                            color: e.strokeColor,
                                            width: e.strokeWeight
                                        }
                                    };
                                    var y = [];
                                    e.paths.forEach(function (e) {
                                        y.push([e.X, e.Y, e.Z])
                                    });
                                    var f = new k({
                                            hasZ: !0,
                                            hasM: !0,
                                            rings: y,
                                            spatialReference: I.view.spatialReference
                                        }),
                                        h = e.attributes;
                                    h.uuid = e.uuid;
                                    var v = new L({
                                        geometry: f,
                                        symbol: d,
                                        attributes: h
                                    });
                                    if (S.push(v), I.mapoverlayers.push(["smap-default", e.uuid, v]), (w = I.view.map.findLayerById(I.displayedLayerid)) && w.add(v), e.label.visible) {
                                        var b = null;
                                        b = e.label.labelingInfo ? e.label.labelingInfo : {
                                            type: e.label.type,
                                            text: e.label.text,
                                            color: e.label.color,
                                            angle: e.label.angle,
                                            backgroundColor: e.label.backgroundColor,
                                            borderLineColor: e.label.borderLineColor,
                                            borderLineSize: e.label.borderLineSize,
                                            kerning: e.label.kerning,
                                            lineHeight: e.label.lineHeight,
                                            lineWidth: e.label.lineWidth,
                                            rotated: e.label.rotated,
                                            haloColor: e.label.haloColor,
                                            haloSize: e.label.haloSize,
                                            xoffset: e.label.xoffset,
                                            yoffset: e.label.yoffset,
                                            verticalAlignment: e.label.verticalAlignment,
                                            horizontalAlignment: e.label.horizontalAlignment,
                                            font: {
                                                size: e.label.size,
                                                family: "Josefin Slab",
                                                weight: e.label.weight
                                            }
                                        }, o = new L({
                                            geometry: v.geometry.extent.center,
                                            symbol: b,
                                            attributes: h
                                        }), (g = I.view.map.findLayerById(I.displayedLayerid)) && g.add(o), I.mapoverlayers.push(["smap-default", e.uuid, o])
                                    }
                                } else if ("circle" === e.overlaytype.toLowerCase() && (d = void 0, d = e.symbol ? e.symbol : "simple" === e.symboltype ? {
                                        type: "simple-fill",
                                        color: e.fillColor,
                                        style: e.style,
                                        outline: {
                                            color: e.strokeColor,
                                            width: e.strokeWeight,
                                            style: e.strokestyle
                                        }
                                    } : {
                                        type: "picture-fill",
                                        url: e.url,
                                        width: e.picwidth,
                                        height: e.picheight,
                                        outline: {
                                            style: e.strokestyle,
                                            color: e.strokeColor,
                                            width: e.strokeWeight
                                        }
                                    }, e.attributes && e.center && e.radius)) {
                                    var m = e.attributes;
                                    m.uuid = e.uuid;
                                    var w, g, x = new L({
                                        geometry: new A({
                                            center: new C({
                                                x: e.center.X,
                                                y: e.center.Y,
                                                z: e.center.Z,
                                                spatialReference: I.view.spatialReference
                                            }),
                                            radius: e.radius,
                                            radiusUnit: e.radiusUnit,
                                            spatialReference: I.view.spatialReference
                                        }),
                                        symbol: d,
                                        attributes: m
                                    });
                                    if (S.push(x), I.mapoverlayers.push(["smap-default", e.uuid, x]), (w = I.view.map.findLayerById(I.displayedLayerid)) && w.add(x), e.label.visible) b = null, b = e.label.labelingInfo ? e.label.labelingInfo : {
                                        type: e.label.type,
                                        text: e.label.text,
                                        color: e.label.color,
                                        angle: e.label.angle,
                                        backgroundColor: e.label.backgroundColor,
                                        borderLineColor: e.label.borderLineColor,
                                        borderLineSize: e.label.borderLineSize,
                                        kerning: e.label.kerning,
                                        lineHeight: e.label.lineHeight,
                                        lineWidth: e.label.lineWidth,
                                        rotated: e.label.rotated,
                                        haloColor: e.label.haloColor,
                                        haloSize: e.label.haloSize,
                                        xoffset: e.label.xoffset,
                                        yoffset: e.label.yoffset,
                                        verticalAlignment: e.label.verticalAlignment,
                                        horizontalAlignment: e.label.horizontalAlignment,
                                        font: {
                                            size: e.label.size,
                                            family: "Josefin Slab",
                                            weight: e.label.weight
                                        }
                                    }, o = new L({
                                        geometry: x.geometry.extent.center,
                                        symbol: b,
                                        attributes: m
                                    }), (g = I.view.map.findLayerById(I.displayedLayerid)) && g.add(o), I.mapoverlayers.push(["smap-default", e.uuid, o])
                                }
                            }) : "group" === _.type ? (_.overlayers.forEach(function (e) {
                                if ("marker" === e.overlaytype.toLowerCase()) {
                                    var t = void 0;
                                    t = e.symbol ? e.symbol : "2d" === I.view.type ? {
                                        type: "picture-marker",
                                        url: e.icon.image,
                                        width: e.icon.size.width,
                                        height: e.icon.size.height
                                    } : {
                                        type: "point-3d",
                                        symbolLayers: [{
                                            type: "icon",
                                            size: e.icon.size.width,
                                            resource: {
                                                href: e.icon.image
                                            }
                                        }]
                                    };
                                    var r = e.attributes;
                                    r.uuid = e.uuid;
                                    var i = new L({
                                        geometry: new C({
                                            x: e.position[0],
                                            y: e.position[1],
                                            z: void 0 === e.position[2] ? 0 : e.position[2],
                                            spatialReference: I.view.spatialReference
                                        }),
                                        symbol: t,
                                        attributes: r
                                    });
                                    if (S.push(i), I.mapoverlayers.push([_.uuid, e.uuid, i]), (g = I.view.map.findLayerById(I.displayedLayerid)) && g.add(i), e.label.visible) {
                                        var n = null;
                                        n = e.label.labelingInfo ? e.label.labelingInfo : {
                                            type: e.label.type,
                                            text: e.label.text,
                                            color: e.label.color,
                                            angle: e.label.angle,
                                            backgroundColor: e.label.backgroundColor,
                                            borderLineColor: e.label.borderLineColor,
                                            borderLineSize: e.label.borderLineSize,
                                            kerning: e.label.kerning,
                                            lineHeight: e.label.lineHeight,
                                            lineWidth: e.label.lineWidth,
                                            rotated: e.label.rotated,
                                            haloColor: e.label.haloColor,
                                            haloSize: e.label.haloSize,
                                            xoffset: e.label.xoffset,
                                            yoffset: e.label.yoffset,
                                            verticalAlignment: e.label.verticalAlignment,
                                            horizontalAlignment: e.label.horizontalAlignment,
                                            font: {
                                                size: e.label.size,
                                                family: "Josefin Slab",
                                                weight: e.label.weight
                                            }
                                        };
                                        var o = new L({
                                            geometry: new C({
                                                x: "3d" === I.view.type ? e.position[0] + e.label.xoffset : e.position[0],
                                                y: "3d" === I.view.type ? e.position[1] + e.label.yoffset : e.position[1],
                                                z: "3d" === I.view.type ? e.position[2] + e.label.zoffset : e.position[2],
                                                spatialReference: I.view.spatialReference
                                            }),
                                            symbol: n,
                                            attributes: r
                                        });
                                        (w = I.view.map.findLayerById(I.displayedLayerid)) && w.add(o), I.mapoverlayers.push([_.uuid, e.uuid, o])
                                    }
                                } else if ("polyline" === e.overlaytype.toLowerCase()) {
                                    var a = null;
                                    a = e.symbol ? e.symbol : {
                                        type: "simple-line",
                                        color: e.strokeColor,
                                        style: e.style,
                                        width: e.width,
                                        cap: e.cap,
                                        join: e.lineJoin
                                    };
                                    var l = [];
                                    e.path.forEach(function (e) {
                                        l.push([e.X, e.Y, e.Z])
                                    });
                                    var s = new R({
                                            hasZ: !1,
                                            hasM: !1,
                                            paths: l,
                                            spatialReference: I.view.spatialReference
                                        }),
                                        c = e.attributes;
                                    c.uuid = e.uuid;
                                    var u = new L({
                                        geometry: s,
                                        symbol: a,
                                        attributes: c
                                    });
                                    if (S.push(u), I.mapoverlayers.push([_.uuid, e.uuid, u]), (w = I.view.map.findLayerById(I.displayedLayerid)) && w.add(u), e.label.visible) {
                                        var p = null;
                                        p = e.label.labelingInfo ? e.label.labelingInfo : {
                                            type: e.label.type,
                                            text: e.label.text,
                                            color: e.label.color,
                                            angle: e.label.angle,
                                            backgroundColor: e.label.backgroundColor,
                                            borderLineColor: e.label.borderLineColor,
                                            borderLineSize: e.label.borderLineSize,
                                            kerning: e.label.kerning,
                                            lineHeight: e.label.lineHeight,
                                            lineWidth: e.label.lineWidth,
                                            rotated: e.label.rotated,
                                            haloColor: e.label.haloColor,
                                            haloSize: e.label.haloSize,
                                            xoffset: e.label.xoffset,
                                            yoffset: e.label.yoffset,
                                            verticalAlignment: e.label.verticalAlignment,
                                            horizontalAlignment: e.label.horizontalAlignment,
                                            font: {
                                                size: e.label.size,
                                                family: "Josefin Slab",
                                                weight: e.label.weight
                                            }
                                        }, o = new L({
                                            geometry: u.geometry.extent.center,
                                            symbol: p,
                                            attributes: c
                                        }), (g = I.view.map.findLayerById(I.displayedLayerid)) && g.add(o), I.mapoverlayers.push([_.uuid, e.uuid, o])
                                    }
                                } else if ("polygon" === e.overlaytype.toLowerCase()) {
                                    var d = void 0;
                                    d = e.symbol ? e.symbol : "simple" === e.symboltype ? {
                                        type: "simple-fill",
                                        color: e.fillColor,
                                        style: e.style,
                                        outline: {
                                            color: e.strokeColor,
                                            width: e.strokeWeight,
                                            style: e.strokestyle
                                        }
                                    } : {
                                        type: "picture-fill",
                                        url: e.url,
                                        width: e.picwidth,
                                        height: e.picheight,
                                        outline: {
                                            style: e.strokestyle,
                                            color: e.strokeColor,
                                            width: e.strokeWeight
                                        }
                                    };
                                    var y = [];
                                    e.paths.forEach(function (e) {
                                        y.push([e.X, e.Y, e.Z])
                                    });
                                    var f = e.attributes;
                                    f.uuid = e.uuid;
                                    var h = new k({
                                            hasZ: !0,
                                            hasM: !0,
                                            rings: y,
                                            spatialReference: I.view.spatialReference
                                        }),
                                        v = new L({
                                            geometry: h,
                                            symbol: d,
                                            attributes: f
                                        });
                                    if (S.push(v), I.mapoverlayers.push([_.uuid, e.uuid, v]), (g = I.view.map.findLayerById(I.displayedLayerid)) && g.add(v), e.label.visible) {
                                        var b = null;
                                        b = e.label.labelingInfo ? e.label.labelingInfo : {
                                            type: e.label.type,
                                            text: e.label.text,
                                            color: e.label.color,
                                            angle: e.label.angle,
                                            backgroundColor: e.label.backgroundColor,
                                            borderLineColor: e.label.borderLineColor,
                                            borderLineSize: e.label.borderLineSize,
                                            kerning: e.label.kerning,
                                            lineHeight: e.label.lineHeight,
                                            lineWidth: e.label.lineWidth,
                                            rotated: e.label.rotated,
                                            haloColor: e.label.haloColor,
                                            haloSize: e.label.haloSize,
                                            xoffset: e.label.xoffset,
                                            yoffset: e.label.yoffset,
                                            verticalAlignment: e.label.verticalAlignment,
                                            horizontalAlignment: e.label.horizontalAlignment,
                                            font: {
                                                size: e.label.size,
                                                family: "Josefin Slab",
                                                weight: e.label.weight
                                            }
                                        }, o = new L({
                                            geometry: v.geometry.extent.center,
                                            symbol: b,
                                            attributes: f
                                        }), (w = I.view.map.findLayerById(I.displayedLayerid)) && w.add(o), I.mapoverlayers.push([_.uuid, e.uuid, o])
                                    }
                                } else if ("circle" === e.overlaytype.toLowerCase() && (d = void 0, d = e.symbol ? e.symbol : "simple" === e.symboltype ? {
                                        type: "simple-fill",
                                        color: e.fillColor,
                                        style: e.style,
                                        outline: {
                                            color: e.strokeColor,
                                            width: e.strokeWeight,
                                            style: e.strokestyle
                                        }
                                    } : {
                                        type: "picture-fill",
                                        url: e.url,
                                        width: e.picwidth,
                                        height: e.picheight,
                                        outline: {
                                            style: e.strokestyle,
                                            color: e.strokeColor,
                                            width: e.strokeWeight
                                        }
                                    }, e.attributes && e.center && e.radius)) {
                                    var m = e.attributes;
                                    m.uuid = e.uuid;
                                    var w, g, x = new L({
                                        geometry: new A({
                                            center: new C({
                                                x: e.center.X,
                                                y: e.center.Y,
                                                z: e.center.Z,
                                                spatialReference: I.view.spatialReference
                                            }),
                                            radius: e.radius,
                                            radiusUnit: e.radiusUnit,
                                            spatialReference: I.view.spatialReference
                                        }),
                                        symbol: d,
                                        attributes: m
                                    });
                                    if (S.push(x), I.mapoverlayers.push(["smap-default", e.uuid, x]), (w = I.view.map.findLayerById(I.displayedLayerid)) && w.add(x), e.label.visible) b = null, b = e.label.labelingInfo ? e.label.labelingInfo : {
                                        type: e.label.type,
                                        text: e.label.text,
                                        color: e.label.color,
                                        angle: e.label.angle,
                                        backgroundColor: e.label.backgroundColor,
                                        borderLineColor: e.label.borderLineColor,
                                        borderLineSize: e.label.borderLineSize,
                                        kerning: e.label.kerning,
                                        lineHeight: e.label.lineHeight,
                                        lineWidth: e.label.lineWidth,
                                        rotated: e.label.rotated,
                                        haloColor: e.label.haloColor,
                                        haloSize: e.label.haloSize,
                                        xoffset: e.label.xoffset,
                                        yoffset: e.label.yoffset,
                                        verticalAlignment: e.label.verticalAlignment,
                                        horizontalAlignment: e.label.horizontalAlignment,
                                        font: {
                                            size: e.label.size,
                                            family: "Josefin Slab",
                                            weight: e.label.weight
                                        }
                                    }, o = new L({
                                        geometry: x.geometry.extent.center,
                                        symbol: b,
                                        attributes: m
                                    }), (g = I.view.map.findLayerById(I.displayedLayerid)) && g.add(o), I.mapoverlayers.push(["smap-default", e.uuid, o])
                                }
                            }), i.minScale = _.minScale, i.maxScale = _.maxScale) : "element" === _.type && ("marker" === _.overlaytype.toLowerCase() ? (n = void 0, n = _.symbol ? _.symbol : "2d" === this.view.type ? {
                                type: "picture-marker",
                                url: _.icon.image,
                                width: _.icon.size.width,
                                height: _.icon.size.height
                            } : {
                                type: "point-3d",
                                symbolLayers: [{
                                    type: "icon",
                                    size: _.icon.size.width,
                                    resource: {
                                        href: _.icon.image
                                    }
                                }]
                            }, (o = _.attributes).uuid = _.uuid, a = new L({
                                geometry: new C({
                                    x: _.position[0],
                                    y: _.position[1],
                                    z: void 0 === _.position[2] ? 0 : _.position[2],
                                    spatialReference: this.view.spatialReference
                                }),
                                symbol: n,
                                attributes: o
                            }), S.push(a), this.mapoverlayers.push(["smap-default", _.uuid, a]), (x = this.view.map.findLayerById(this.displayedLayerid)) && x.add(a), _.label.visible && (l = null, l = _.label.labelingInfo ? _.label.labelingInfo : {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            }, F = new L({
                                geometry: new C({
                                    x: "3d" === this.view.type ? _.position[0] + _.label.xoffset : _.position[0],
                                    y: "3d" === this.view.type ? _.position[1] + _.label.yoffset : _.position[1],
                                    z: "3d" === this.view.type ? _.position[2] + _.label.zoffset : _.position[2],
                                    spatialReference: this.view.spatialReference
                                }),
                                symbol: l,
                                attributes: o
                            }), (E = this.view.map.findLayerById(this.displayedLayerid)) && E.add(F), this.mapoverlayers.push(["smap-default", _.uuid, F]))) : "polyline" === _.overlaytype.toLowerCase() ? (s = null, s = _.symbol ? _.symbol : {
                                type: "simple-line",
                                color: _.strokeColor,
                                style: _.style,
                                width: _.width,
                                cap: _.cap,
                                join: _.lineJoin
                            }, c = [], _.path.forEach(function (e) {
                                c.push([e.X, e.Y, e.Z])
                            }), u = new R({
                                hasZ: !1,
                                hasM: !1,
                                paths: c,
                                spatialReference: this.view.spatialReference
                            }), (p = _.attributes).uuid = _.uuid, d = new L({
                                geometry: u,
                                symbol: s,
                                attributes: p
                            }), S.push(d), this.mapoverlayers.push(["smap-default", _.uuid, d]), (E = this.view.map.findLayerById(this.displayedLayerid)) && E.add(d), _.label.visible && (b = null, b = _.label.labelingInfo ? _.label.labelingInfo : {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            }, F = new L({
                                geometry: d.geometry.extent.center,
                                symbol: b,
                                attributes: p
                            }), (x = this.view.map.findLayerById(this.displayedLayerid)) && x.add(F), this.mapoverlayers.push(["smap-default", _.uuid, F]))) : "polygon" === _.overlaytype.toLowerCase() ? (m = void 0, m = _.symbol ? _.symbol : "simple" === _.symboltype ? {
                                type: "simple-fill",
                                color: _.fillColor,
                                style: _.style,
                                outline: {
                                    color: _.strokeColor,
                                    width: _.strokeWeight,
                                    style: _.strokestyle
                                }
                            } : {
                                type: "picture-fill",
                                url: _.url,
                                width: _.picwidth,
                                height: _.picheight,
                                outline: {
                                    style: _.strokestyle,
                                    color: _.strokeColor,
                                    width: _.strokeWeight
                                }
                            }, y = [], _.paths.forEach(function (e) {
                                y.push([e.X, e.Y, e.Z])
                            }), (f = _.attributes).uuid = _.uuid, h = new k({
                                hasZ: !0,
                                hasM: !0,
                                rings: y,
                                spatialReference: this.view.spatialReference
                            }), v = new L({
                                geometry: h,
                                symbol: m,
                                attributes: f
                            }), S.push(v), this.mapoverlayers.push(["smap-default", _.uuid, v]), (x = this.view.map.findLayerById(this.displayedLayerid)) && x.add(v), _.label.visible && (b = null, b = _.label.labelingInfo ? _.label.labelingInfo : {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            }, F = new L({
                                geometry: v.geometry.extent.center,
                                symbol: b,
                                attributes: f
                            }), (E = this.view.map.findLayerById(this.displayedLayerid)) && E.add(F), this.mapoverlayers.push(["smap-default", _.uuid, F]))) : "circle" === _.overlaytype.toLowerCase() && (m = void 0, m = _.symbol ? _.symbol : "simple" === _.symboltype ? {
                                type: "simple-fill",
                                color: _.fillColor,
                                style: _.style,
                                outline: {
                                    color: _.strokeColor,
                                    width: _.strokeWeight,
                                    style: _.strokestyle
                                }
                            } : {
                                type: "picture-fill",
                                url: _.url,
                                width: _.picwidth,
                                height: _.picheight,
                                outline: {
                                    style: _.strokestyle,
                                    color: _.strokeColor,
                                    width: _.strokeWeight
                                }
                            }, _.attributes && _.center && _.radius && ((w = _.attributes).uuid = _.uuid, g = new L({
                                geometry: new A({
                                    center: new C({
                                        x: _.center.X,
                                        y: _.center.Y,
                                        z: _.center.Z,
                                        spatialReference: this.view.spatialReference
                                    }),
                                    radius: _.radius,
                                    radiusUnit: _.radiusUnit,
                                    spatialReference: this.view.spatialReference
                                }),
                                symbol: m,
                                attributes: w
                            }), S.push(g), this.mapoverlayers.push(["smap-default", _.uuid, g]), (x = this.view.map.findLayerById(this.displayedLayerid)) && x.add(g), _.label.visible && (z = null, z = _.label.labelingInfo ? _.label.labelingInfo : {
                                type: _.label.type,
                                text: _.label.text,
                                color: _.label.color,
                                angle: _.label.angle,
                                backgroundColor: _.label.backgroundColor,
                                borderLineColor: _.label.borderLineColor,
                                borderLineSize: _.label.borderLineSize,
                                kerning: _.label.kerning,
                                lineHeight: _.label.lineHeight,
                                lineWidth: _.label.lineWidth,
                                rotated: _.label.rotated,
                                haloColor: _.label.haloColor,
                                haloSize: _.label.haloSize,
                                xoffset: _.label.xoffset,
                                yoffset: _.label.yoffset,
                                verticalAlignment: _.label.verticalAlignment,
                                horizontalAlignment: _.label.horizontalAlignment,
                                font: {
                                    size: _.label.size,
                                    family: "Josefin Slab",
                                    weight: _.label.weight
                                }
                            }, F = new L({
                                geometry: g.geometry.extent.center,
                                symbol: z,
                                attributes: w
                            }), (E = this.view.map.findLayerById(this.displayedLayerid)) && E.add(F), this.mapoverlayers.push(["smap-default", _.uuid, F]))))), [2, new B.Promise(function (e, t) {
                                e(S)
                            })]
                    }
                })
            })
        }, yr.prototype.remove = function (t) {
            var r = this;
            t instanceof Array ? t.forEach(function (t) {
                r.mapoverlayers.filter(function (e) {
                    return e[1] === t.uuid
                }).forEach(function (e) {
                    var t = r.view.map.findLayerById(r.displayedLayerid);
                    t && t.remove(e[2])
                }), r.mapoverlayers = r.mapoverlayers.filter(function (e) {
                    return e[1] !== t.uuid
                })
            }) : "group" === t.type ? (this.mapoverlayers.filter(function (e) {
                return e[0] === t.uuid
            }).forEach(function (e) {
                var t = r.view.map.findLayerById(r.displayedLayerid);
                t && t.remove(e[2])
            }), this.mapoverlayers = this.mapoverlayers.filter(function (e) {
                return e[0] !== t.uuid
            })) : "element" === t.type && (this.mapoverlayers.filter(function (e) {
                return e[1] === t.uuid
            }).forEach(function (e) {
                var t = r.view.map.findLayerById(r.displayedLayerid);
                t && t.remove(e[2])
            }), this.mapoverlayers = this.mapoverlayers.filter(function (e) {
                return e[1] !== t.uuid
            }))
        }, yr.prototype.update = function (E) {
            return ur(this, void 0, void 0, function () {
                var t, L, C, R, k, A, S, r, i, n, o, a, l, s, c, u, p, d, y, f, h, v, b, m, w, g, x, z, F = this;
                return pr(this, function (e) {
                    switch (e.label) {
                        case 0:
                            return [4, P(["esri/Graphic", "esri/geometry/Point", "esri/layers/GraphicsLayer", "esri/symbols/PictureMarkerSymbol", "esri/geometry/Polyline", "esri/geometry/Polygon", "esri/geometry/Circle"])];
                        case 1:
                            return t = e.sent(), L = t[0], C = t[1], t[2], t[3], R = t[4], k = t[5], A = t[6], S = [], E instanceof Array ? E.forEach(function (t) {
                                if (F.mapoverlayers.filter(function (e) {
                                        return e[1] === t.uuid
                                    }).forEach(function (e) {
                                        var t = F.view.map.findLayerById(F.displayedLayerid);
                                        t && t.remove(e[2])
                                    }), F.mapoverlayers = F.mapoverlayers.filter(function (e) {
                                        return e[1] !== t.uuid
                                    }), "marker" === t.overlaytype.toLowerCase()) {
                                    var e = void 0;
                                    e = t.symbol ? t.symbol : "2d" === F.view.type ? {
                                        type: "picture-marker",
                                        url: t.icon.image,
                                        width: t.icon.size.width,
                                        height: t.icon.size.height
                                    } : {
                                        type: "point-3d",
                                        symbolLayers: [{
                                            type: "icon",
                                            size: t.icon.size.width,
                                            resource: {
                                                href: t.icon.image
                                            }
                                        }]
                                    };
                                    var r = t.attributes;
                                    r.uuid = t.uuid;
                                    var i = new L({
                                        geometry: new C({
                                            x: t.position[0],
                                            y: t.position[1],
                                            z: void 0 === t.position[2] ? 0 : t.position[2],
                                            spatialReference: F.view.spatialReference
                                        }),
                                        symbol: e,
                                        attributes: r
                                    });
                                    if (S.push(i), F.mapoverlayers.push(["smap-default", t.uuid, i]), (g = F.view.map.findLayerById(F.displayedLayerid)) && g.add(i), t.label.visible) {
                                        var n = null;
                                        n = t.label.labelingInfo ? t.label.labelingInfo : {
                                            type: t.label.type,
                                            text: t.label.text,
                                            color: t.label.color,
                                            angle: t.label.angle,
                                            backgroundColor: t.label.backgroundColor,
                                            borderLineColor: t.label.borderLineColor,
                                            borderLineSize: t.label.borderLineSize,
                                            kerning: t.label.kerning,
                                            lineHeight: t.label.lineHeight,
                                            lineWidth: t.label.lineWidth,
                                            rotated: t.label.rotated,
                                            haloColor: t.label.haloColor,
                                            haloSize: t.label.haloSize,
                                            xoffset: t.label.xoffset,
                                            yoffset: t.label.yoffset,
                                            verticalAlignment: t.label.verticalAlignment,
                                            horizontalAlignment: t.label.horizontalAlignment,
                                            font: {
                                                size: t.label.size,
                                                family: "Josefin Slab",
                                                weight: t.label.weight
                                            }
                                        };
                                        var o = new L({
                                            geometry: new C({
                                                x: "3d" === F.view.type ? t.position[0] + t.label.xoffset : t.position[0],
                                                y: "3d" === F.view.type ? t.position[1] + t.label.yoffset : t.position[1],
                                                z: "3d" === F.view.type ? t.position[2] + t.label.zoffset : t.position[2],
                                                spatialReference: F.view.spatialReference
                                            }),
                                            symbol: n,
                                            attributes: r
                                        });
                                        (w = F.view.map.findLayerById(F.displayedLayerid)) && w.add(o), F.mapoverlayers.push(["smap-default", t.uuid, o])
                                    }
                                } else if ("polyline" === t.overlaytype.toLowerCase()) {
                                    var a = null;
                                    a = t.symbol ? t.symbol : {
                                        type: "simple-line",
                                        color: t.strokeColor,
                                        style: t.style,
                                        width: t.width,
                                        cap: t.cap,
                                        join: t.lineJoin
                                    };
                                    var l = [];
                                    t.path.forEach(function (e) {
                                        l.push([e.X, e.Y, e.Z])
                                    });
                                    var s = new R({
                                            hasZ: !1,
                                            hasM: !1,
                                            paths: l,
                                            spatialReference: F.view.spatialReference
                                        }),
                                        c = t.attributes;
                                    c.uuid = t.uuid;
                                    var u = new L({
                                        geometry: s,
                                        symbol: a,
                                        attributes: c
                                    });
                                    if (S.push(u), F.mapoverlayers.push(["smap-default", t.uuid, u]), (w = F.view.map.findLayerById(F.displayedLayerid)) && w.add(u), t.label.visible) {
                                        var p = null;
                                        p = t.label.labelingInfo ? t.label.labelingInfo : {
                                            type: t.label.type,
                                            text: t.label.text,
                                            color: t.label.color,
                                            angle: t.label.angle,
                                            backgroundColor: t.label.backgroundColor,
                                            borderLineColor: t.label.borderLineColor,
                                            borderLineSize: t.label.borderLineSize,
                                            kerning: t.label.kerning,
                                            lineHeight: t.label.lineHeight,
                                            lineWidth: t.label.lineWidth,
                                            rotated: t.label.rotated,
                                            haloColor: t.label.haloColor,
                                            haloSize: t.label.haloSize,
                                            xoffset: t.label.xoffset,
                                            yoffset: t.label.yoffset,
                                            verticalAlignment: t.label.verticalAlignment,
                                            horizontalAlignment: t.label.horizontalAlignment,
                                            font: {
                                                size: t.label.size,
                                                family: "Josefin Slab",
                                                weight: t.label.weight
                                            }
                                        }, o = new L({
                                            geometry: u.geometry.extent.center,
                                            symbol: p,
                                            attributes: c
                                        }), (g = F.view.map.findLayerById(F.displayedLayerid)) && g.add(o), F.mapoverlayers.push(["smap-default", t.uuid, o])
                                    }
                                } else if ("polygon" === t.overlaytype.toLowerCase()) {
                                    var d = void 0;
                                    d = t.symbol ? t.symbol : "simple" === t.symboltype ? {
                                        type: "simple-fill",
                                        color: t.fillColor,
                                        style: t.style,
                                        outline: {
                                            color: t.strokeColor,
                                            width: t.strokeWeight,
                                            style: t.strokestyle
                                        }
                                    } : {
                                        type: "picture-fill",
                                        url: t.url,
                                        width: t.picwidth,
                                        height: t.picheight,
                                        outline: {
                                            style: t.strokestyle,
                                            color: t.strokeColor,
                                            width: t.strokeWeight
                                        }
                                    };
                                    var y = [];
                                    t.paths.forEach(function (e) {
                                        y.push([e.X, e.Y, e.Z])
                                    });
                                    var f = new k({
                                            hasZ: !0,
                                            hasM: !0,
                                            rings: y,
                                            spatialReference: F.view.spatialReference
                                        }),
                                        h = t.attributes;
                                    h.uuid = t.uuid;
                                    var v = new L({
                                        geometry: f,
                                        symbol: d,
                                        attributes: h
                                    });
                                    if (S.push(v), F.mapoverlayers.push(["smap-default", t.uuid, v]), (g = F.view.map.findLayerById(F.displayedLayerid)) && g.add(v), t.label.visible) {
                                        var b = null;
                                        b = t.label.labelingInfo ? t.label.labelingInfo : {
                                            type: t.label.type,
                                            text: t.label.text,
                                            color: t.label.color,
                                            angle: t.label.angle,
                                            backgroundColor: t.label.backgroundColor,
                                            borderLineColor: t.label.borderLineColor,
                                            borderLineSize: t.label.borderLineSize,
                                            kerning: t.label.kerning,
                                            lineHeight: t.label.lineHeight,
                                            lineWidth: t.label.lineWidth,
                                            rotated: t.label.rotated,
                                            haloColor: t.label.haloColor,
                                            haloSize: t.label.haloSize,
                                            xoffset: t.label.xoffset,
                                            yoffset: t.label.yoffset,
                                            verticalAlignment: t.label.verticalAlignment,
                                            horizontalAlignment: t.label.horizontalAlignment,
                                            font: {
                                                size: t.label.size,
                                                family: "Josefin Slab",
                                                weight: t.label.weight
                                            }
                                        }, o = new L({
                                            geometry: v.geometry.extent.center,
                                            symbol: b,
                                            attributes: h
                                        }), (w = F.view.map.findLayerById(F.displayedLayerid)) && w.add(o), F.mapoverlayers.push(["smap-default", t.uuid, o])
                                    }
                                } else if ("circle" === t.overlaytype.toLowerCase() && (d = void 0, d = t.symbol ? t.symbol : "simple" === t.symboltype ? {
                                        type: "simple-fill",
                                        color: t.fillColor,
                                        style: t.style,
                                        outline: {
                                            color: t.strokeColor,
                                            width: t.strokeWeight,
                                            style: t.strokestyle
                                        }
                                    } : {
                                        type: "picture-fill",
                                        url: t.url,
                                        width: t.picwidth,
                                        height: t.picheight,
                                        outline: {
                                            style: t.strokestyle,
                                            color: t.strokeColor,
                                            width: t.strokeWeight
                                        }
                                    }, t.attributes && t.center && t.radius)) {
                                    var m = t.attributes;
                                    m.uuid = t.uuid;
                                    var w, g, x = new L({
                                        geometry: new A({
                                            center: new C({
                                                x: t.center.X,
                                                y: t.center.Y,
                                                z: t.center.Z,
                                                spatialReference: F.view.spatialReference
                                            }),
                                            radius: t.radius,
                                            radiusUnit: t.radiusUnit,
                                            spatialReference: F.view.spatialReference
                                        }),
                                        symbol: d,
                                        attributes: m
                                    });
                                    if (S.push(x), F.mapoverlayers.push(["smap-default", t.uuid, x]), (w = F.view.map.findLayerById(F.displayedLayerid)) && w.add(x), t.label.visible) b = null, b = t.label.labelingInfo ? t.label.labelingInfo : {
                                        type: t.label.type,
                                        text: t.label.text,
                                        color: t.label.color,
                                        angle: t.label.angle,
                                        backgroundColor: t.label.backgroundColor,
                                        borderLineColor: t.label.borderLineColor,
                                        borderLineSize: t.label.borderLineSize,
                                        kerning: t.label.kerning,
                                        lineHeight: t.label.lineHeight,
                                        lineWidth: t.label.lineWidth,
                                        rotated: t.label.rotated,
                                        haloColor: t.label.haloColor,
                                        haloSize: t.label.haloSize,
                                        xoffset: t.label.xoffset,
                                        yoffset: t.label.yoffset,
                                        verticalAlignment: t.label.verticalAlignment,
                                        horizontalAlignment: t.label.horizontalAlignment,
                                        font: {
                                            size: t.label.size,
                                            family: "Josefin Slab",
                                            weight: t.label.weight
                                        }
                                    }, o = new L({
                                        geometry: x.geometry.extent.center,
                                        symbol: b,
                                        attributes: m
                                    }), (g = F.view.map.findLayerById(F.displayedLayerid)) && g.add(o), F.mapoverlayers.push(["smap-default", t.uuid, o])
                                }
                            }) : "group" === E.type ? (this.mapoverlayers.filter(function (e) {
                                return e[0] === E.uuid
                            }).forEach(function (e) {
                                var t = F.view.map.findLayerById(F.displayedLayerid);
                                t && t.remove(e[2])
                            }), this.mapoverlayers = this.mapoverlayers.filter(function (e) {
                                return e[0] !== E.uuid
                            }), E.overlayers.forEach(function (e) {
                                if ("marker" === e.overlaytype.toLowerCase()) {
                                    var t = void 0;
                                    t = e.symbol ? e.symbol : "2d" === F.view.type ? {
                                        type: "picture-marker",
                                        url: e.icon.image,
                                        width: e.icon.size.width,
                                        height: e.icon.size.height
                                    } : {
                                        type: "point-3d",
                                        symbolLayers: [{
                                            type: "icon",
                                            size: e.icon.size.width,
                                            resource: {
                                                href: e.icon.image
                                            }
                                        }]
                                    };
                                    var r = e.attributes;
                                    r.uuid = e.uuid;
                                    var i = new L({
                                        geometry: new C({
                                            x: e.position[0],
                                            y: e.position[1],
                                            z: void 0 === e.position[2] ? 0 : e.position[2],
                                            spatialReference: F.view.spatialReference
                                        }),
                                        symbol: t,
                                        attributes: r
                                    });
                                    if (S.push(i), F.mapoverlayers.push([E.uuid, e.uuid, i]), (w = F.view.map.findLayerById(F.displayedLayerid)) && w.add(i), e.label.visible) {
                                        var n = null;
                                        n = e.label.labelingInfo ? e.label.labelingInfo : {
                                            type: e.label.type,
                                            text: e.label.text,
                                            color: e.label.color,
                                            angle: e.label.angle,
                                            backgroundColor: e.label.backgroundColor,
                                            borderLineColor: e.label.borderLineColor,
                                            borderLineSize: e.label.borderLineSize,
                                            kerning: e.label.kerning,
                                            lineHeight: e.label.lineHeight,
                                            lineWidth: e.label.lineWidth,
                                            rotated: e.label.rotated,
                                            haloColor: e.label.haloColor,
                                            haloSize: e.label.haloSize,
                                            xoffset: e.label.xoffset,
                                            yoffset: e.label.yoffset,
                                            verticalAlignment: e.label.verticalAlignment,
                                            horizontalAlignment: e.label.horizontalAlignment,
                                            font: {
                                                size: e.label.size,
                                                family: "Josefin Slab",
                                                weight: e.label.weight
                                            }
                                        };
                                        var o = new L({
                                            geometry: new C({
                                                x: "3d" === F.view.type ? e.position[0] + e.label.xoffset : e.position[0],
                                                y: "3d" === F.view.type ? e.position[1] + e.label.yoffset : e.position[1],
                                                z: "3d" === F.view.type ? e.position[2] + e.label.zoffset : e.position[2],
                                                spatialReference: F.view.spatialReference
                                            }),
                                            symbol: n,
                                            attributes: r
                                        });
                                        (g = F.view.map.findLayerById(F.displayedLayerid)) && g.add(o), F.mapoverlayers.push([E.uuid, e.uuid, o])
                                    }
                                } else if ("polyline" === e.overlaytype.toLowerCase()) {
                                    var a = null;
                                    a = e.symbol ? e.symbol : {
                                        type: "simple-line",
                                        color: e.strokeColor,
                                        style: e.style,
                                        width: e.width,
                                        cap: e.cap,
                                        join: e.lineJoin
                                    };
                                    var l = [];
                                    e.path.forEach(function (e) {
                                        l.push([e.X, e.Y, e.Z])
                                    });
                                    var s = new R({
                                            hasZ: !1,
                                            hasM: !1,
                                            paths: l,
                                            spatialReference: F.view.spatialReference
                                        }),
                                        c = e.attributes;
                                    c.uuid = e.uuid;
                                    var u = new L({
                                        geometry: s,
                                        symbol: a,
                                        attributes: c
                                    });
                                    if (S.push(u), F.mapoverlayers.push([E.uuid, e.uuid, u]), (g = F.view.map.findLayerById(F.displayedLayerid)) && g.add(u), e.label.visible) {
                                        var p = null;
                                        p = e.label.labelingInfo ? e.label.labelingInfo : {
                                            type: e.label.type,
                                            text: e.label.text,
                                            color: e.label.color,
                                            angle: e.label.angle,
                                            backgroundColor: e.label.backgroundColor,
                                            borderLineColor: e.label.borderLineColor,
                                            borderLineSize: e.label.borderLineSize,
                                            kerning: e.label.kerning,
                                            lineHeight: e.label.lineHeight,
                                            lineWidth: e.label.lineWidth,
                                            rotated: e.label.rotated,
                                            haloColor: e.label.haloColor,
                                            haloSize: e.label.haloSize,
                                            xoffset: e.label.xoffset,
                                            yoffset: e.label.yoffset,
                                            verticalAlignment: e.label.verticalAlignment,
                                            horizontalAlignment: e.label.horizontalAlignment,
                                            font: {
                                                size: e.label.size,
                                                family: "Josefin Slab",
                                                weight: e.label.weight
                                            }
                                        }, o = new L({
                                            geometry: u.geometry.extent.center,
                                            symbol: p,
                                            attributes: c
                                        }), (w = F.view.map.findLayerById(F.displayedLayerid)) && w.add(o), F.mapoverlayers.push([E.uuid, e.uuid, o])
                                    }
                                } else if ("polygon" === e.overlaytype.toLowerCase()) {
                                    var d = void 0;
                                    d = e.symbol ? e.symbol : "simple" === E.symboltype ? {
                                        type: "simple-fill",
                                        color: E.fillColor,
                                        style: E.style,
                                        outline: {
                                            color: E.strokeColor,
                                            width: E.strokeWeight,
                                            style: E.strokestyle
                                        }
                                    } : {
                                        type: "picture-fill",
                                        url: E.url,
                                        width: E.picwidth,
                                        height: E.picheight,
                                        outline: {
                                            style: E.strokestyle,
                                            color: E.strokeColor,
                                            width: E.strokeWeight
                                        }
                                    };
                                    var y = [];
                                    E.paths.forEach(function (e) {
                                        y.push([e.X, e.Y, e.Z])
                                    });
                                    var f = e.attributes;
                                    f.uuid = e.uuid;
                                    var h = new k({
                                            hasZ: !0,
                                            hasM: !0,
                                            rings: y,
                                            spatialReference: F.view.spatialReference
                                        }),
                                        v = new L({
                                            geometry: h,
                                            symbol: d,
                                            attributes: f
                                        });
                                    if (S.push(v), F.mapoverlayers.push(["smap-default", E.uuid, v]), (w = F.view.map.findLayerById(F.displayedLayerid)) && w.add(v), E.label.visible) {
                                        var b = null;
                                        b = e.label.labelingInfo ? e.label.labelingInfo : {
                                            type: E.label.type,
                                            text: E.label.text,
                                            color: E.label.color,
                                            angle: E.label.angle,
                                            backgroundColor: E.label.backgroundColor,
                                            borderLineColor: E.label.borderLineColor,
                                            borderLineSize: E.label.borderLineSize,
                                            kerning: E.label.kerning,
                                            lineHeight: E.label.lineHeight,
                                            lineWidth: E.label.lineWidth,
                                            rotated: E.label.rotated,
                                            haloColor: E.label.haloColor,
                                            haloSize: E.label.haloSize,
                                            xoffset: E.label.xoffset,
                                            yoffset: E.label.yoffset,
                                            verticalAlignment: E.label.verticalAlignment,
                                            horizontalAlignment: E.label.horizontalAlignment,
                                            font: {
                                                size: E.label.size,
                                                family: "Josefin Slab",
                                                weight: E.label.weight
                                            }
                                        }, o = new L({
                                            geometry: v.geometry.extent.center,
                                            symbol: b,
                                            attributes: f
                                        }), (g = F.view.map.findLayerById(F.displayedLayerid)) && g.add(o), F.mapoverlayers.push(["smap-default", E.uuid, o])
                                    }
                                } else if ("circle" === e.overlaytype.toLowerCase() && (d = void 0, d = e.symbol ? e.symbol : "simple" === e.symboltype ? {
                                        type: "simple-fill",
                                        color: e.fillColor,
                                        style: e.style,
                                        outline: {
                                            color: e.strokeColor,
                                            width: e.strokeWeight,
                                            style: e.strokestyle
                                        }
                                    } : {
                                        type: "picture-fill",
                                        url: e.url,
                                        width: e.picwidth,
                                        height: e.picheight,
                                        outline: {
                                            style: e.strokestyle,
                                            color: e.strokeColor,
                                            width: e.strokeWeight
                                        }
                                    }, e.attributes && e.center && e.radius)) {
                                    var m = e.attributes;
                                    m.uuid = e.uuid;
                                    var w, g, x = new L({
                                        geometry: new A({
                                            center: new C({
                                                x: e.center.X,
                                                y: e.center.Y,
                                                z: e.center.Z,
                                                spatialReference: F.view.spatialReference
                                            }),
                                            radius: e.radius,
                                            radiusUnit: e.radiusUnit,
                                            spatialReference: F.view.spatialReference
                                        }),
                                        symbol: d,
                                        attributes: m
                                    });
                                    if (S.push(x), F.mapoverlayers.push(["smap-default", e.uuid, x]), (w = F.view.map.findLayerById(F.displayedLayerid)) && w.add(x), e.label.visible) b = null, b = e.label.labelingInfo ? e.label.labelingInfo : {
                                        type: e.label.type,
                                        text: e.label.text,
                                        color: e.label.color,
                                        angle: e.label.angle,
                                        backgroundColor: e.label.backgroundColor,
                                        borderLineColor: e.label.borderLineColor,
                                        borderLineSize: e.label.borderLineSize,
                                        kerning: e.label.kerning,
                                        lineHeight: e.label.lineHeight,
                                        lineWidth: e.label.lineWidth,
                                        rotated: e.label.rotated,
                                        haloColor: e.label.haloColor,
                                        haloSize: e.label.haloSize,
                                        xoffset: e.label.xoffset,
                                        yoffset: e.label.yoffset,
                                        verticalAlignment: e.label.verticalAlignment,
                                        horizontalAlignment: e.label.horizontalAlignment,
                                        font: {
                                            size: e.label.size,
                                            family: "Josefin Slab",
                                            weight: e.label.weight
                                        }
                                    }, o = new L({
                                        geometry: x.geometry.extent.center,
                                        symbol: b,
                                        attributes: m
                                    }), (g = F.view.map.findLayerById(F.displayedLayerid)) && g.add(o), F.mapoverlayers.push(["smap-default", e.uuid, o])
                                }
                            })) : "element" === E.type && (this.mapoverlayers.filter(function (e) {
                                return e[1] === E.uuid
                            }).forEach(function (e) {
                                var t = F.view.map.findLayerById(F.displayedLayerid);
                                t && t.remove(e[2])
                            }), this.mapoverlayers = this.mapoverlayers.filter(function (e) {
                                return e[1] !== E.uuid
                            }), "marker" === E.overlaytype.toLowerCase() ? (r = void 0, r = E.symbol ? E.symbol : "2d" === this.view.type ? {
                                type: "picture-marker",
                                url: E.icon.image,
                                width: E.icon.size.width,
                                height: E.icon.size.height
                            } : {
                                type: "point-3d",
                                symbolLayers: [{
                                    type: "icon",
                                    size: E.icon.size.width,
                                    resource: {
                                        href: E.icon.image
                                    }
                                }]
                            }, (i = E.attributes).uuid = E.uuid, n = new L({
                                geometry: new C({
                                    x: E.position[0],
                                    y: E.position[1],
                                    z: void 0 === E.position[2] ? 0 : E.position[2],
                                    spatialReference: this.view.spatialReference
                                }),
                                symbol: r,
                                attributes: i
                            }), S.push(n), this.mapoverlayers.push(["smap-default", E.uuid, n]), (z = this.view.map.findLayerById(this.displayedLayerid)) && z.add(n), E.label.visible && (o = null, o = E.label.labelingInfo ? E.label.labelingInfo : {
                                type: E.label.type,
                                text: E.label.text,
                                color: E.label.color,
                                angle: E.label.angle,
                                backgroundColor: E.label.backgroundColor,
                                borderLineColor: E.label.borderLineColor,
                                borderLineSize: E.label.borderLineSize,
                                kerning: E.label.kerning,
                                lineHeight: E.label.lineHeight,
                                lineWidth: E.label.lineWidth,
                                rotated: E.label.rotated,
                                haloColor: E.label.haloColor,
                                haloSize: E.label.haloSize,
                                xoffset: E.label.xoffset,
                                yoffset: E.label.yoffset,
                                verticalAlignment: E.label.verticalAlignment,
                                horizontalAlignment: E.label.horizontalAlignment,
                                font: {
                                    size: E.label.size,
                                    family: "Josefin Slab",
                                    weight: E.label.weight
                                }
                            }, x = new L({
                                geometry: new C({
                                    x: "3d" === this.view.type ? E.position[0] + E.label.xoffset : E.position[0],
                                    y: "3d" === this.view.type ? E.position[1] + E.label.yoffset : E.position[1],
                                    z: "3d" === this.view.type ? E.position[2] + E.label.zoffset : E.position[2],
                                    spatialReference: this.view.spatialReference
                                }),
                                symbol: o,
                                attributes: i
                            }), (w = this.view.map.findLayerById(this.displayedLayerid)) && w.add(x), this.mapoverlayers.push(["smap-default", E.uuid, x]))) : "polyline" === E.overlaytype.toLowerCase() ? (a = null, a = E.symbol ? E.symbol : {
                                type: "simple-line",
                                color: E.strokeColor,
                                style: E.style,
                                width: E.width,
                                cap: E.cap,
                                join: E.lineJoin
                            }, l = [], E.path.forEach(function (e) {
                                l.push([e.X, e.Y, e.Z])
                            }), s = new R({
                                hasZ: !1,
                                hasM: !1,
                                paths: l,
                                spatialReference: this.view.spatialReference
                            }), (c = E.attributes).uuid = E.uuid, u = new L({
                                geometry: s,
                                symbol: a,
                                attributes: c
                            }), S.push(u), this.mapoverlayers.push(["smap-default", E.uuid, u]), (w = this.view.map.findLayerById(this.displayedLayerid)) && w.add(u), E.label.visible && (h = null, h = E.label.labelingInfo ? E.label.labelingInfo : {
                                type: E.label.type,
                                text: E.label.text,
                                color: E.label.color,
                                angle: E.label.angle,
                                backgroundColor: E.label.backgroundColor,
                                borderLineColor: E.label.borderLineColor,
                                borderLineSize: E.label.borderLineSize,
                                kerning: E.label.kerning,
                                lineHeight: E.label.lineHeight,
                                lineWidth: E.label.lineWidth,
                                rotated: E.label.rotated,
                                haloColor: E.label.haloColor,
                                haloSize: E.label.haloSize,
                                xoffset: E.label.xoffset,
                                yoffset: E.label.yoffset,
                                verticalAlignment: E.label.verticalAlignment,
                                horizontalAlignment: E.label.horizontalAlignment,
                                font: {
                                    size: E.label.size,
                                    family: "Josefin Slab",
                                    weight: E.label.weight
                                }
                            }, x = new L({
                                geometry: u.geometry.extent.center,
                                symbol: h,
                                attributes: c
                            }), (z = this.view.map.findLayerById(this.displayedLayerid)) && z.add(x), this.mapoverlayers.push(["smap-default", E.uuid, x]))) : "polygon" === E.overlaytype.toLowerCase() ? (v = void 0, v = E.symbol ? E.symbol : "simple" === E.symboltype ? {
                                type: "simple-fill",
                                color: E.fillColor,
                                style: E.style,
                                outline: {
                                    color: E.strokeColor,
                                    width: E.strokeWeight,
                                    style: E.strokestyle
                                }
                            } : {
                                type: "picture-fill",
                                url: E.url,
                                width: E.picwidth,
                                height: E.picheight,
                                outline: {
                                    style: E.strokestyle,
                                    color: E.strokeColor,
                                    width: E.strokeWeight
                                }
                            }, p = [], E.paths.forEach(function (e) {
                                p.push([e.X, e.Y, e.Z])
                            }), d = new k({
                                hasZ: !0,
                                hasM: !0,
                                rings: p,
                                spatialReference: this.view.spatialReference
                            }), (y = E.attributes).uuid = E.uuid, f = new L({
                                geometry: d,
                                symbol: v,
                                attributes: y
                            }), S.push(f), this.mapoverlayers.push(["smap-default", E.uuid, f]), (z = this.view.map.findLayerById(this.displayedLayerid)) && z.add(f), E.label.visible && (h = null, h = E.label.labelingInfo ? E.label.labelingInfo : {
                                type: E.label.type,
                                text: E.label.text,
                                color: E.label.color,
                                angle: E.label.angle,
                                backgroundColor: E.label.backgroundColor,
                                borderLineColor: E.label.borderLineColor,
                                borderLineSize: E.label.borderLineSize,
                                kerning: E.label.kerning,
                                lineHeight: E.label.lineHeight,
                                lineWidth: E.label.lineWidth,
                                rotated: E.label.rotated,
                                haloColor: E.label.haloColor,
                                haloSize: E.label.haloSize,
                                xoffset: E.label.xoffset,
                                yoffset: E.label.yoffset,
                                verticalAlignment: E.label.verticalAlignment,
                                horizontalAlignment: E.label.horizontalAlignment,
                                font: {
                                    size: E.label.size,
                                    family: "Josefin Slab",
                                    weight: E.label.weight
                                }
                            }, x = new L({
                                geometry: f.geometry.extent.center,
                                symbol: h,
                                attributes: y
                            }), (w = this.view.map.findLayerById(this.displayedLayerid)) && w.add(x), this.mapoverlayers.push(["smap-default", E.uuid, x]))) : "circle" === E.overlaytype.toLowerCase() && (v = void 0, v = E.symbol ? E.symbol : "simple" === E.symboltype ? {
                                type: "simple-fill",
                                color: E.fillColor,
                                style: E.style,
                                outline: {
                                    color: E.strokeColor,
                                    width: E.strokeWeight,
                                    style: E.strokestyle
                                }
                            } : {
                                type: "picture-fill",
                                url: E.url,
                                width: E.picwidth,
                                height: E.picheight,
                                outline: {
                                    style: E.strokestyle,
                                    color: E.strokeColor,
                                    width: E.strokeWeight
                                }
                            }, E.attributes && E.center && E.radius && ((b = E.attributes).uuid = E.uuid, m = new L({
                                geometry: new A({
                                    center: new C({
                                        x: E.center.X,
                                        y: E.center.Y,
                                        z: E.center.Z,
                                        spatialReference: this.view.spatialReference
                                    }),
                                    radius: E.radius,
                                    radiusUnit: E.radiusUnit,
                                    spatialReference: this.view.spatialReference
                                }),
                                symbol: v,
                                attributes: b
                            }), S.push(m), this.mapoverlayers.push(["smap-default", E.uuid, m]), (w = this.view.map.findLayerById(this.displayedLayerid)) && w.add(m), E.label.visible && (g = null, g = E.label.labelingInfo ? E.label.labelingInfo : {
                                type: E.label.type,
                                text: E.label.text,
                                color: E.label.color,
                                angle: E.label.angle,
                                backgroundColor: E.label.backgroundColor,
                                borderLineColor: E.label.borderLineColor,
                                borderLineSize: E.label.borderLineSize,
                                kerning: E.label.kerning,
                                lineHeight: E.label.lineHeight,
                                lineWidth: E.label.lineWidth,
                                rotated: E.label.rotated,
                                haloColor: E.label.haloColor,
                                haloSize: E.label.haloSize,
                                xoffset: E.label.xoffset,
                                yoffset: E.label.yoffset,
                                verticalAlignment: E.label.verticalAlignment,
                                horizontalAlignment: E.label.horizontalAlignment,
                                font: {
                                    size: E.label.size,
                                    family: "Josefin Slab",
                                    weight: E.label.weight
                                }
                            }, x = new L({
                                geometry: m.geometry.extent.center,
                                symbol: g,
                                attributes: b
                            }), (z = this.view.map.findLayerById(this.displayedLayerid)) && z.add(x), this.mapoverlayers.push(["smap-default", E.uuid, x]))))), [2, new B.Promise(function (e, t) {
                                e(S)
                            })]
                    }
                })
            })
        }, yr.prototype.removeAll = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.removeAll(), this.mapoverlayers = [])
        }, yr.prototype.delete = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (this.view.map.remove(e), this.mapoverlayers = [])
        }, yr.prototype.show = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !0)
        }, yr.prototype.hide = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !1)
        }, yr.prototype.init = function (r) {
            return ur(this, void 0, void 0, function () {
                var t = this;
                return pr(this, function (e) {
                    return this.displayedLayerid = (new x).uuid, this.view = r, this.view.on(q.click, function (i) {
                        t.view.hitTest(i).then(function (r) {
                            return ur(t, void 0, void 0, function () {
                                var t;
                                return pr(this, function (e) {
                                    if (0 < r.results.length) {
                                        if (!r.results[0].graphic.layer) return [2];
                                        if (!(t = r.results[0].graphic.layer.id)) return [2];
                                        t === this.displayedLayerid && this.emit(q.click, r, i.mapPoint)
                                    }
                                    return [2]
                                })
                            })
                        })
                    }), this.view.on(q.pointermove, function (i) {
                        t.view.hitTest(i).then(function (r) {
                            return ur(t, void 0, void 0, function () {
                                var t;
                                return pr(this, function (e) {
                                    if (0 < r.results.length) {
                                        if (!r.results[0].graphic.layer) return [2];
                                        if (!(t = r.results[0].graphic.layer.id)) return [2];
                                        t === this.displayedLayerid && this.emit(q.pointermove, r, this.view.toMap({
                                            x: i.x,
                                            y: i.y
                                        }))
                                    }
                                    return [2]
                                })
                            })
                        })
                    }), [2]
                })
            })
        }, yr);

    function yr(e) {
        var t = sr.call(this) || this;
        return t.displayedLayerid = "", t.view = null, t.mapoverlayers = [], t.init(e), t
    }
    var fr, hr, vr = (fr = function (e, t) {
            return (fr = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            fr(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        br = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        mr = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        wr = (vr(gr, hr = e), gr.prototype.add = function (i) {
            var n = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/734A3D86-CF65-FC97-E8B7B8A0197A043B"]).then(function (e) {
                var t = e[0],
                    r = {
                        container: document.getElementById(i.container),
                        radius: i.radius || 30,
                        maxOpacity: i.maxOpacity || .8,
                        minOpacity: i.minOpacity || 0,
                        blur: i.blur || .7,
                        gradient: i.gradient || {
                            0: "rgb(0,0,0)",
                            .3: "rgb(0,0,255)",
                            .8: "rgb(0,255,0)",
                            .98: "rgb(255,255,0)",
                            1: "rgb(255,0,0)"
                        }
                    };
                n.heatmaplayer = new t(n.view, r, i.datas, i.h337, i.id), n.heatmaplayer.addData()
            })
        }, gr.prototype.remove = function (e) {
            var t = document.getElementsByClassName("esri-view-surface")[0],
                r = document.getElementById(e);
            null != r && t.removeChild(r)
        }, gr.prototype.refreshdata = function (e) {
            this.heatmaplayer.setVisible(!0), this.heatmaplayer.freshenLayerData(e)
        }, gr.prototype.show = function () {
            this.heatmaplayer.setVisible(!0)
        }, gr.prototype.hide = function () {
            this.heatmaplayer.setVisible(!1)
        }, gr.prototype.init = function (t) {
            return br(this, void 0, void 0, function () {
                return mr(this, function (e) {
                    return this.displayedLayerid = (new x).uuid, this.view = t, [2]
                })
            })
        }, gr);

    function gr(e) {
        var t = hr.call(this) || this;
        return t.displayedLayerid = "", t.view = null, t.heatmaplayer = null, t.init(e), t
    }
    var xr, Lr, Cr = (xr = function (e, t) {
            return (xr = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            xr(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Rr = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        kr = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Ar = (Cr(Sr, Lr = e), Sr.prototype.add = function (i) {
            var n = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/90ABC595-73BF-08E9-0567CA1FA6278EEC", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1];
                n.heatMap3dLayerRenderer = new t(n.view, i.data, i.options), r.add(n.view, n.heatMap3dLayerRenderer)
            }).catch(function (e) {
                console.error(e)
            })
        }, Sr.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.heatMap3dLayerRenderer && t.remove(r.view, r.heatMap3dLayerRenderer)
            })
        }, Sr.prototype.setMaterialColor = function (e) {
            this.heatMap3dLayerRenderer && this.heatMap3dLayerRenderer.setMaterialColor(e)
        }, Sr.prototype.setwireframe = function () {
            this.heatMap3dLayerRenderer && this.heatMap3dLayerRenderer.setwireframe()
        }, Sr.prototype.setaltitude = function (e) {
            this.heatMap3dLayerRenderer && this.heatMap3dLayerRenderer.setaltitude(e)
        }, Sr.prototype.setscaleZ = function (e) {
            this.heatMap3dLayerRenderer && this.heatMap3dLayerRenderer.setscaleZ(e)
        }, Sr.prototype.setopacity = function (e) {
            this.heatMap3dLayerRenderer && this.heatMap3dLayerRenderer.setopacity(e)
        }, Sr.prototype.init = function (t) {
            return Rr(this, void 0, void 0, function () {
                return kr(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, Sr);

    function Sr(e) {
        var t = Lr.call(this) || this;
        return t.heatMap3dLayerRenderer = null, t.view = null, t.init(e), t
    }
    var zr = (Fr.shqxboundary = "qx_boundary", Fr.shjdboundary = "jd_boundary", Fr.shjwhboundary = "jwh_boundary", Fr);

    function Fr() {}
    var Er, Ir, _r = (Er = function (e, t) {
            return (Er = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            Er(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Br = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Pr = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Or = (_r(Mr, Ir = e), Mr.prototype.add = function (i) {
            var n = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/LayerSkyRenderer", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1];
                n.cloudRendererRenderer = new t(n.view, i.url, i.options), r.add(n.view, n.cloudRendererRenderer)
            }).catch(function (e) {
                console.error(e)
            })
        }, Mr.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.cloudRendererRenderer && t.remove(r.view, r.cloudRendererRenderer)
            })
        }, Mr.prototype.init = function (t) {
            return Br(this, void 0, void 0, function () {
                return Pr(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, Mr);

    function Mr(e) {
        var t = Ir.call(this) || this;
        return t.cloudRendererRenderer = null, t.view = null, t.init(e), t
    }
    var jr, Dr, Wr = (jr = function (e, t) {
            return (jr = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            jr(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Tr = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Gr = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Zr = (Wr(Hr, Dr = e), Hr.prototype.add = function (y) {
            var f = this;
            P(["esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/Polygon", "esri/geometry/geometryEngineAsync", "esri/geometry/SpatialReference", "esri/Color"]).then(function (e) {
                var c = e[0],
                    t = e[1],
                    r = e[2],
                    u = e[3],
                    p = (e[4], e[5]),
                    i = null;
                "qx_boundary" !== y.boundaryType && "jd_boundary" !== y.boundaryType && "jwh_boundary" !== y.boundaryType || (i = f.view.map.findLayerById(y.boundaryType));
                var d = f.view.map.findLayerById(f.displayedLayerid);
                if (null == d && (d = new t({
                        id: f.displayedLayerid,
                        title: y.boundaryType + "遮罩层",
                        listMode: "hide"
                    }), f.view.map.add(d)), d.removeAll(), y.inputgeometry) {
                    if (null === (i = f.view.map.findLayerById("qx_boundary"))) return;
                    var n = new r({
                            rings: y.inputgeometry,
                            spatialReference: f.view.spatialReference
                        }),
                        o = i.fullExtent;
                    o.spatialReference = f.view.spatialReference;
                    var s = n;
                    s.spatialReference = f.view.spatialReference, u.buffer(s, y.boundarydistance, "meters").then(function (e) {
                        u.difference(o, e).then(function (e) {
                            var t;
                            t = "3d" === f.view.type ? y.symbol ? {
                                type: "polygon-3d",
                                symbolLayers: [{
                                    type: "extrude",
                                    material: {
                                        color: y.maskColor
                                    },
                                    size: y.symbol.size,
                                    edges: {
                                        type: "solid",
                                        color: y.maskColor
                                    }
                                }]
                            } : {
                                type: "polygon-3d",
                                symbolLayers: [{
                                    type: "fill",
                                    material: {
                                        color: y.maskColor
                                    },
                                    outline: {
                                        color: "white",
                                        size: "0px"
                                    }
                                }]
                            } : {
                                type: "simple-fill",
                                color: y.maskColor,
                                style: "solid",
                                outline: {
                                    color: y.maskColor,
                                    width: 1
                                }
                            };
                            var r = new c({
                                geometry: e,
                                symbol: t
                            });
                            d.add(r);
                            for (var n = void 0 === y.bounarycount ? 30 : y.bounarycount, o = Math.ceil(y.boundarydistance / n), a = new p(y.boundaryColor).toRgba(), i = function (i) {
                                    u.buffer(s, i * n, "meters").then(function (t) {
                                        u.buffer(s, (i - 1) * n, "meters").then(function (e) {
                                            u.difference(t, e).then(function (e) {
                                                var t;
                                                a[3] = 1 / o * i, t = "3d" === f.view.type ? y.symbol ? {
                                                    type: "polygon-3d",
                                                    symbolLayers: [{
                                                        type: "extrude",
                                                        material: {
                                                            color: a
                                                        },
                                                        size: y.symbol.size,
                                                        edges: {
                                                            type: "solid",
                                                            color: a
                                                        }
                                                    }]
                                                } : {
                                                    type: "polygon-3d",
                                                    symbolLayers: [{
                                                        type: "fill",
                                                        material: {
                                                            color: a
                                                        },
                                                        outline: {
                                                            color: "white",
                                                            size: "0px"
                                                        }
                                                    }]
                                                } : {
                                                    type: "simple-fill",
                                                    color: a,
                                                    style: "solid",
                                                    outline: {
                                                        color: a,
                                                        width: 1
                                                    }
                                                };
                                                var r = new c({
                                                    geometry: e,
                                                    symbol: t
                                                });
                                                d.add(r)
                                            })
                                        })
                                    })
                                }, l = 1; l <= o; l++) i(l)
                        })
                    })
                } else {
                    if (null === i) return;
                    var a = i.createQuery();
                    a.where = y.boundaryDefinition, i.queryFeatures(a).then(function (e) {
                        if (e.features.length) {
                            var t = i.fullExtent;
                            t.spatialReference = f.view.spatialReference;
                            var s = e.features[0].geometry;
                            s.spatialReference = f.view.spatialReference, u.buffer(s, y.boundarydistance, "meters").then(function (e) {
                                u.difference(t, e).then(function (e) {
                                    var t;
                                    t = "3d" === f.view.type ? y.symbol ? {
                                        type: "polygon-3d",
                                        symbolLayers: [{
                                            type: "extrude",
                                            material: {
                                                color: y.maskColor
                                            },
                                            size: y.symbol.size,
                                            edges: {
                                                type: "solid",
                                                color: y.maskColor
                                            }
                                        }]
                                    } : {
                                        type: "polygon-3d",
                                        symbolLayers: [{
                                            type: "fill",
                                            material: {
                                                color: y.maskColor
                                            },
                                            outline: {
                                                color: "white",
                                                size: "0px"
                                            }
                                        }]
                                    } : {
                                        type: "simple-fill",
                                        color: y.maskColor,
                                        style: "solid",
                                        outline: {
                                            color: y.maskColor,
                                            width: 1
                                        }
                                    };
                                    var r = new c({
                                        geometry: e,
                                        symbol: t
                                    });
                                    d.add(r);
                                    for (var n = void 0 === y.bounarycount ? 30 : y.bounarycount, o = Math.ceil(y.boundarydistance / n), a = new p(y.boundaryColor).toRgba(), i = function (i) {
                                            u.buffer(s, i * n, "meters").then(function (t) {
                                                u.buffer(s, (i - 1) * n, "meters").then(function (e) {
                                                    u.difference(t, e).then(function (e) {
                                                        var t;
                                                        a[3] = 1 / o * i, t = "3d" === f.view.type ? y.symbol ? {
                                                            type: "polygon-3d",
                                                            symbolLayers: [{
                                                                type: "extrude",
                                                                material: {
                                                                    color: a
                                                                },
                                                                size: y.symbol.size,
                                                                edges: {
                                                                    type: "solid",
                                                                    color: a
                                                                }
                                                            }]
                                                        } : {
                                                            type: "polygon-3d",
                                                            symbolLayers: [{
                                                                type: "fill",
                                                                material: {
                                                                    color: a
                                                                },
                                                                outline: {
                                                                    color: "white",
                                                                    size: "0px"
                                                                }
                                                            }]
                                                        } : {
                                                            type: "simple-fill",
                                                            color: a,
                                                            style: "solid",
                                                            outline: {
                                                                color: a,
                                                                width: 1
                                                            }
                                                        };
                                                        var r = new c({
                                                            geometry: e,
                                                            symbol: t
                                                        });
                                                        d.add(r)
                                                    })
                                                })
                                            })
                                        }, l = 1; l <= o; l++) i(l)
                                })
                            })
                        }
                    })
                }
            })
        }, Hr.prototype.remove = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && this.view.map.remove(e)
        }, Hr.prototype.show = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !0)
        }, Hr.prototype.hide = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !1)
        }, Hr.prototype.init = function (t) {
            return Tr(this, void 0, void 0, function () {
                return Gr(this, function (e) {
                    return this.displayedLayerid = (new x).uuid, this.view = t, [2]
                })
            })
        }, Hr);

    function Hr(e) {
        var t = Dr.call(this) || this;
        return t.displayedLayerid = "", t.view = null, t.init(e), t
    }
    var qr, Jr, Xr = (qr = function (e, t) {
            return (qr = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            qr(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Yr = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Ur = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Nr = (Xr(Vr, Jr = e), Vr.prototype.circle = function () {
            var g = this;
            P(["esri/views/draw/Draw", "esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/Point", "esri/geometry/geometryEngine"]).then(function (e) {
                var t = e[0],
                    h = e[1],
                    r = e[2],
                    v = e[3],
                    b = e[4];
                g.drawtool = new t({
                    view: g.view
                }), g.drawtool.reset();
                var m = g.view.map.findLayerById(g.displayedLayerid);
                null == m && (m = new r({
                    id: g.displayedLayerid,
                    title: "测量结果显示层",
                    listMode: "hide"
                }), g.view.map.add(m));
                var i = (new x).uuid,
                    w = g.view.map.findLayerById(i);
                w || (w = new r({
                    id: g.displayedLayerid,
                    title: "测量圆实时追踪显示层",
                    listMode: "hide"
                }), g.view.map.add(w));
                var n = g.drawtool.create("circle", {
                    mode: "click"
                });
                g.view.focus(), n.on("vertex-add", function (e) {
                    if (2 === e.vertices.length) {
                        w.removeAll();
                        var t = new v({
                                x: e.vertices[0][0],
                                y: e.vertices[0][1],
                                spatialReference: g.view.spatialReference
                            }),
                            r = new v({
                                x: e.vertices[1][0],
                                y: e.vertices[1][1],
                                spatialReference: g.view.spatialReference
                            }),
                            i = new h({
                                geometry: {
                                    type: "polyline",
                                    paths: [
                                        [e.vertices[0], e.vertices[1]]
                                    ],
                                    spatialReference: g.view.spatialReference
                                },
                                symbol: g.polylinesymbol
                            }),
                            n = b.geodesicLength(i.geometry, "meters"),
                            o = b.buffer(t, n, "meters"),
                            a = b.geodesicArea(o, "square-meters"),
                            l = new h({
                                geometry: o,
                                symbol: g.polygonsymbol
                            }),
                            s = g.textsymbol,
                            c = 1e3 < n ? "半径:" + (n / 1e3).toFixed(3) + "千米" : "半径:" + parseFloat(n).toFixed(3) + "米";
                        s.text = c;
                        var u = new h({
                                geometry: r,
                                symbol: s
                            }),
                            p = g.textsymbol,
                            d = 1e5 < a ? "面积:" + (a / 1e6).toFixed(3) + "平千方米" : "面积:" + parseFloat(a).toFixed(3) + "平方米";
                        p.text = d;
                        var y = new h({
                            geometry: t,
                            symbol: p
                        });
                        w.add(l), w.add(i), w.add(u), w.add(y)
                    }
                }), n.on("vertex-remove", function (e) {
                    console.log(e)
                }), n.on("cursor-update", function (e) {
                    if (2 === e.vertices.length) {
                        w.removeAll();
                        var t = new v({
                                x: e.vertices[0][0],
                                y: e.vertices[0][1],
                                spatialReference: g.view.spatialReference
                            }),
                            r = new v({
                                x: e.vertices[1][0],
                                y: e.vertices[1][1],
                                spatialReference: g.view.spatialReference
                            }),
                            i = new h({
                                geometry: {
                                    type: "polyline",
                                    paths: [
                                        [e.vertices[0], e.vertices[1]]
                                    ],
                                    spatialReference: g.view.spatialReference
                                },
                                symbol: g.polylinesymbol
                            }),
                            n = b.geodesicLength(i.geometry, "meters"),
                            o = b.buffer(t, n, "meters"),
                            a = b.geodesicArea(o, "square-meters"),
                            l = new h({
                                geometry: o,
                                symbol: g.polygonsymbol
                            }),
                            s = g.textsymbol,
                            c = 1e3 < n ? "半径:" + (n / 1e3).toFixed(3) + "千米" : "半径:" + parseFloat(n).toFixed(3) + "米";
                        s.text = c;
                        var u = new h({
                                geometry: r,
                                symbol: s
                            }),
                            p = g.textsymbol,
                            d = 1e5 < a ? "面积:" + (a / 1e6).toFixed(3) + "平千方米" : "面积:" + parseFloat(a).toFixed(3) + "平方米";
                        p.text = d;
                        var y = new h({
                            geometry: t,
                            symbol: p
                        });
                        w.add(l), w.add(i), w.add(u), w.add(y)
                    }
                }), n.on("redo", function (e) {
                    console.log(e)
                }), n.on("undo", function (e) {
                    console.log(e)
                }), n.on("draw-complete", function (e) {
                    if (2 === e.vertices.length) {
                        var t = new v({
                                x: e.vertices[0][0],
                                y: e.vertices[0][1],
                                spatialReference: g.view.spatialReference
                            }),
                            r = new v({
                                x: e.vertices[1][0],
                                y: e.vertices[1][1],
                                spatialReference: g.view.spatialReference
                            }),
                            i = new h({
                                geometry: {
                                    type: "polyline",
                                    paths: [
                                        [e.vertices[0], e.vertices[1]]
                                    ],
                                    spatialReference: g.view.spatialReference
                                },
                                symbol: g.polylinesymbol
                            }),
                            n = b.geodesicLength(i.geometry, "meters"),
                            o = b.buffer(t, n, "meters"),
                            a = b.geodesicArea(o, "square-meters"),
                            l = new h({
                                geometry: o,
                                symbol: g.polygonsymbol
                            }),
                            s = g.textsymbol,
                            c = 1e3 < n ? "半径:" + (n / 1e3).toFixed(3) + "千米" : "半径:" + parseFloat(n).toFixed(3) + "米";
                        s.text = c;
                        var u = new h({
                                geometry: r,
                                symbol: s
                            }),
                            p = g.textsymbol,
                            d = 1e5 < a ? "面积:" + (a / 1e6).toFixed(3) + "平千方米" : "面积:" + parseFloat(a).toFixed(3) + "平方米";
                        p.text = d;
                        var y = new h({
                            geometry: t,
                            symbol: p
                        });
                        g.view.map.remove(w), m.add(l), m.add(i), m.add(u), m.add(y);
                        var f = {
                            radiusdistance: n,
                            circlearea: a
                        };
                        g.emit("measurementcomplete", l, f, "circle")
                    }
                })
            })
        }, Vr.prototype.rectangle = function () {
            var _ = this;
            P(["esri/views/draw/Draw", "esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/Point", "esri/geometry/Polygon", "esri/geometry/geometryEngine"]).then(function (e) {
                var t = e[0],
                    A = e[1],
                    r = e[2],
                    S = e[3],
                    z = e[4],
                    F = e[5];
                _.drawtool = new t({
                    view: _.view
                }), _.drawtool.reset();
                var E = _.view.map.findLayerById(_.displayedLayerid);
                E || (E = new r({
                    id: _.displayedLayerid,
                    title: "测量结果显示层",
                    listMode: "hide"
                }), _.view.map.add(E));
                var i = (new x).uuid,
                    I = _.view.map.findLayerById(i);
                null == I && (I = new r({
                    id: _.displayedLayerid,
                    title: "测量矩形实时追踪显示层",
                    listMode: "hide"
                }), _.view.map.add(I));
                var n = _.drawtool.create("rectangle", {
                    mode: "click"
                });
                _.view.focus(), n.on("vertex-add", function (e) {
                    if (2 === e.vertices.length) {
                        I.removeAll();
                        var t = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[1][0] : e.vertices[0][0],
                            r = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[1][1] : e.vertices[0][1],
                            i = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[0][0] : e.vertices[1][0],
                            n = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[0][1] : e.vertices[1][1],
                            o = new z({
                                hasZ: !0,
                                hasM: !0,
                                rings: [
                                    [
                                        [t, r],
                                        [i, r],
                                        [i, n],
                                        [t, n],
                                        [t, r]
                                    ]
                                ],
                                spatialReference: _.view.spatialReference
                            }),
                            a = new A({
                                geometry: o,
                                symbol: _.polygonsymbol
                            }),
                            l = new S({
                                x: t + (i - t) / 2,
                                y: r,
                                spatialReference: _.view.spatialReference
                            }),
                            s = new S({
                                x: t,
                                y: r,
                                spatialReference: _.view.spatialReference
                            }),
                            c = new S({
                                x: i,
                                y: t,
                                spatialReference: _.view.spatialReference
                            }),
                            u = F.distance(s, c, "meters"),
                            p = _.textsymbol,
                            d = 1e3 < u ? "长度:" + (u / 1e3).toFixed(3) + "千米" : "长度:" + u.toFixed(3) + "米";
                        p.text = d;
                        var y = new A({
                                geometry: l,
                                symbol: p
                            }),
                            f = new S({
                                x: i,
                                y: r + (n - r) / 2,
                                spatialReference: _.view.spatialReference
                            }),
                            h = new S({
                                x: i,
                                y: r,
                                spatialReference: _.view.spatialReference
                            }),
                            v = new S({
                                x: i,
                                y: n,
                                spatialReference: _.view.spatialReference
                            }),
                            b = F.distance(h, v, "meters"),
                            m = _.textsymbol,
                            w = 1e3 < b ? "宽度:" + (b / 1e3).toFixed(3) + "千米" : "宽度:" + b.toFixed(3) + "米";
                        m.text = w;
                        var g = new A({
                                geometry: f,
                                symbol: m
                            }),
                            x = new S({
                                x: t + (i - t) / 2,
                                y: r + (n - r) / 2,
                                spatialReference: _.view.spatialReference
                            }),
                            L = _.textsymbol,
                            C = u * b,
                            R = 1e5 < C ? "面积:" + (C / 1e6).toFixed(3) + "平方千米" : "面积:" + C.toFixed(3) + "平方米";
                        L.text = R;
                        var k = new A({
                            geometry: x,
                            symbol: L
                        });
                        I.add(y), I.add(g), I.add(k), I.add(a)
                    }
                }), n.on("vertex-remove", function (e) {
                    console.log(e)
                }), n.on("cursor-update", function (e) {
                    if (2 === e.vertices.length) {
                        I.removeAll();
                        var t = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[1][0] : e.vertices[0][0],
                            r = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[1][1] : e.vertices[0][1],
                            i = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[0][0] : e.vertices[1][0],
                            n = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[0][1] : e.vertices[1][1],
                            o = new z({
                                hasZ: !0,
                                hasM: !0,
                                rings: [
                                    [
                                        [t, r],
                                        [i, r],
                                        [i, n],
                                        [t, n],
                                        [t, r]
                                    ]
                                ],
                                spatialReference: _.view.spatialReference
                            }),
                            a = new A({
                                geometry: o,
                                symbol: _.polygonsymbol
                            }),
                            l = new S({
                                x: t + (i - t) / 2,
                                y: r,
                                spatialReference: _.view.spatialReference
                            }),
                            s = new S({
                                x: t,
                                y: r,
                                spatialReference: _.view.spatialReference
                            }),
                            c = new S({
                                x: i,
                                y: r,
                                spatialReference: _.view.spatialReference
                            }),
                            u = F.distance(s, c, "meters"),
                            p = _.textsymbol,
                            d = 1e3 < u ? "长度:" + (u / 1e3).toFixed(3) + "千米" : "长度:" + u.toFixed(3) + "米";
                        p.text = d;
                        var y = new A({
                                geometry: l,
                                symbol: p
                            }),
                            f = new S({
                                x: i,
                                y: r + (n - r) / 2,
                                spatialReference: _.view.spatialReference
                            }),
                            h = new S({
                                x: i,
                                y: r,
                                spatialReference: _.view.spatialReference
                            }),
                            v = new S({
                                x: i,
                                y: n,
                                spatialReference: _.view.spatialReference
                            }),
                            b = F.distance(h, v, "meters"),
                            m = _.textsymbol,
                            w = 1e3 < b ? "宽度:" + (b / 1e3).toFixed(3) + "千米" : "宽度:" + b.toFixed(3) + "米";
                        m.text = w;
                        var g = new A({
                                geometry: f,
                                symbol: m
                            }),
                            x = new S({
                                x: t + (i - t) / 2,
                                y: r + (n - r) / 2,
                                spatialReference: _.view.spatialReference
                            }),
                            L = _.textsymbol,
                            C = u * b,
                            R = 1e5 < C ? "面积:" + (C / 1e6).toFixed(3) + "平方千米" : "面积:" + C.toFixed(3) + "平方米";
                        L.text = R;
                        var k = new A({
                            geometry: x,
                            symbol: L
                        });
                        I.add(y), I.add(g), I.add(k), I.add(a)
                    }
                }), n.on("redo", function (e) {
                    console.log(e)
                }), n.on("undo", function (e) {
                    console.log(e)
                }), n.on("draw-complete", function (e) {
                    if (2 === e.vertices.length) {
                        var t = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[1][0] : e.vertices[0][0],
                            r = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[1][1] : e.vertices[0][1],
                            i = e.vertices[0][0] > e.vertices[1][0] ? e.vertices[0][0] : e.vertices[1][0],
                            n = e.vertices[0][1] > e.vertices[1][1] ? e.vertices[0][1] : e.vertices[1][1],
                            o = new z({
                                hasZ: !0,
                                hasM: !0,
                                rings: [
                                    [
                                        [t, r],
                                        [i, r],
                                        [i, n],
                                        [t, n],
                                        [t, r]
                                    ]
                                ],
                                spatialReference: _.view.spatialReference
                            }),
                            a = new A({
                                geometry: o,
                                symbol: _.polygonsymbol
                            }),
                            l = new S({
                                x: t + (i - t) / 2,
                                y: r,
                                spatialReference: _.view.spatialReference
                            }),
                            s = new S({
                                x: t,
                                y: r,
                                spatialReference: _.view.spatialReference
                            }),
                            c = new S({
                                x: i,
                                y: r,
                                spatialReference: _.view.spatialReference
                            }),
                            u = F.distance(s, c, "meters"),
                            p = _.textsymbol,
                            d = 1e3 < u ? "长度:" + (u / 1e3).toFixed(3) + "千米" : "长度:" + u.toFixed(3) + "米";
                        p.text = d;
                        var y = new A({
                                geometry: l,
                                symbol: p
                            }),
                            f = new S({
                                x: i,
                                y: r + (n - r) / 2,
                                spatialReference: _.view.spatialReference
                            }),
                            h = new S({
                                x: i,
                                y: r,
                                spatialReference: _.view.spatialReference
                            }),
                            v = new S({
                                x: i,
                                y: n,
                                spatialReference: _.view.spatialReference
                            }),
                            b = F.distance(h, v, "meters"),
                            m = _.textsymbol,
                            w = 1e3 < b ? "宽度:" + (b / 1e3).toFixed(3) + "千米" : "宽度:" + b.toFixed(3) + "米";
                        m.text = w;
                        var g = new A({
                                geometry: f,
                                symbol: m
                            }),
                            x = new S({
                                x: t + (i - t) / 2,
                                y: r + (n - r) / 2,
                                spatialReference: _.view.spatialReference
                            }),
                            L = _.textsymbol,
                            C = u * b,
                            R = 1e5 < C ? "面积:" + (C / 1e6).toFixed(3) + "平方千米" : "面积:" + C.toFixed(3) + "平方米";
                        L.text = R;
                        var k = new A({
                            geometry: x,
                            symbol: L
                        });
                        _.view.map.remove(I), E.add(y), E.add(g), E.add(k), E.add(a), _.emit("measurementcomplete", a, {
                            length: u,
                            width: b,
                            area: b * u
                        }, "rectangle")
                    }
                })
            })
        }, Vr.prototype.Point = function () {
            var c = this;
            P(["esri/views/draw/Draw", "esri/Graphic", "esri/layers/GraphicsLayer"]).then(function (e) {
                var t = e[0],
                    a = e[1],
                    r = e[2];
                c.drawtool = new t({
                    view: c.view
                }), c.drawtool.reset();
                var l = c.view.map.findLayerById(c.displayedLayerid);
                l || (l = new r({
                    id: c.displayedLayerid,
                    title: "测量结果显示层",
                    listMode: "hide"
                }), c.view.map.add(l));
                var i = (new x).uuid,
                    s = c.view.map.findLayerById(i);
                null == s && (s = new r({
                    id: c.displayedLayerid,
                    title: "测量点移动实时追踪显示层",
                    listMode: "hide"
                }), c.view.map.add(s));
                var n = c.drawtool.create("point", {
                    mode: "click"
                });
                c.view.focus(), n.on("vertex-add", function (e) {
                    console.log(e)
                }), n.on("vertex-remove", function (e) {
                    console.log(e)
                }), n.on("cursor-update", function (e) {
                    s.removeAll();
                    var t = {
                            type: "point",
                            x: e.vertices[0][0],
                            y: e.vertices[0][1],
                            spatialReference: c.view.spatialReference
                        },
                        r = new a({
                            geometry: t,
                            symbol: c.marksymbol
                        });
                    s.add(r);
                    var i = c.textsymbol;
                    i.text = "(" + parseFloat(e.vertices[0][0]).toFixed(3) + "," + parseFloat(e.vertices[0][1]).toFixed(3) + ")";
                    var n = new a({
                        geometry: t,
                        symbol: i
                    });
                    s.add(n)
                }), n.on("redo", function (e) {
                    console.log(e)
                }), n.on("undo", function (e) {
                    console.log(e)
                }), n.on("draw-complete", function (e) {
                    var t = {
                            type: "point",
                            x: e.vertices[0][0],
                            y: e.vertices[0][1],
                            spatialReference: c.view.spatialReference
                        },
                        r = new a({
                            geometry: t,
                            symbol: c.marksymbol
                        }),
                        i = c.textsymbol;
                    i.text = "(" + parseFloat(e.vertices[0][0]).toFixed(3) + "," + parseFloat(e.vertices[0][1]).toFixed(3) + ")";
                    var n = new a({
                        geometry: t,
                        symbol: i
                    });
                    c.view.map.remove(s), l.add(n), l.add(r);
                    var o = "(" + parseFloat(e.vertices[0][0]).toFixed(3) + "," + parseFloat(e.vertices[0][0]).toFixed(3) + ")";
                    c.emit("measurementcomplete", r, o, "point")
                })
            })
        }, Vr.prototype.Multipoint = function () {
            var p = this;
            P(["esri/views/draw/Draw", "esri/views/draw/PointDrawAction", "esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/Polygon", "esri/geometry/geometryEngine"]).then(function (e) {
                var t = e[0],
                    l = (e[1], e[2]),
                    r = e[3];
                e[4], e[5], p.drawtool = new t({
                    view: p.view
                }), p.drawtool.reset();
                var s = p.view.map.findLayerById(p.displayedLayerid);
                s || (s = new r({
                    id: p.displayedLayerid,
                    title: "测量结果显示层",
                    listMode: "hide"
                }), p.view.map.add(s));
                var i = (new x).uuid,
                    c = p.view.map.findLayerById(i);
                null == c && (c = new r({
                    id: p.displayedLayerid,
                    title: "测量多点临时显示层",
                    listMode: "hide"
                }), p.view.map.add(c));
                var n = (new x).uuid,
                    u = p.view.map.findLayerById(n);
                null == u && (u = new r({
                    id: p.displayedLayerid,
                    title: "测量多点移动追踪显示层",
                    listMode: "hide"
                }), p.view.map.add(u));
                var o = p.drawtool.create("multipoint", {
                    mode: "click"
                });
                p.view.focus(), o.on("vertex-add", function (e) {
                    c.removeAll(), e.vertices.map(function (e) {
                        var t = {
                                type: "point",
                                x: e[0],
                                y: e[1],
                                spatialReference: p.view.spatialReference
                            },
                            r = new l({
                                geometry: t,
                                symbol: p.marksymbol
                            }),
                            i = p.textsymbol;
                        i.text = "(" + parseFloat(e[0]).toFixed(3) + "," + parseFloat(e[1]).toFixed(3) + ")";
                        var n = new l({
                            geometry: t,
                            symbol: i
                        });
                        c.add(n), c.add(r)
                    })
                }), o.on("vertex-remove", function (e) {
                    console.log(e)
                }), o.on("cursor-update", function (e) {
                    u.removeAll(), e.vertices.map(function (e) {
                        var t = {
                                type: "point",
                                x: e[0],
                                y: e[1],
                                spatialReference: p.view.spatialReference
                            },
                            r = new l({
                                geometry: t,
                                symbol: p.marksymbol
                            }),
                            i = p.textsymbol;
                        i.text = "(" + parseFloat(e[0]).toFixed(3) + "," + parseFloat(e[1]).toFixed(3) + ")";
                        var n = new l({
                            geometry: t,
                            symbol: i
                        });
                        u.add(n), u.add(r)
                    })
                }), o.on("redo", function (e) {
                    console.log(e)
                }), o.on("undo", function (e) {
                    console.log(e)
                }), o.on("draw-complete", function (e) {
                    p.view.map.remove(c), p.view.map.remove(u);
                    var o = [],
                        a = [];
                    e.vertices.map(function (e) {
                        var t = {
                                type: "point",
                                x: e[0],
                                y: e[1],
                                spatialReference: p.view.spatialReference
                            },
                            r = new l({
                                geometry: t,
                                symbol: p.marksymbol
                            }),
                            i = p.textsymbol;
                        i.text = "(" + parseFloat(e[0]).toFixed(3) + "," + parseFloat(e[1]).toFixed(3) + ")";
                        var n = new l({
                            geometry: t,
                            symbol: i
                        });
                        s.add(r), s.add(n), o.push(r), a.push(e)
                    }), p.emit("measurementcomplete", o, a, "multipoint")
                })
            })
        }, Vr.prototype.drawPolyline = function () {
            var v = this;
            P(["esri/views/draw/Draw", "esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/geometryEngine"]).then(function (e) {
                var t = e[0],
                    d = e[1],
                    r = e[2],
                    y = e[3];
                v.drawtool = new t({
                    view: v.view
                }), v.drawtool.reset();
                var f = v.view.map.findLayerById(v.displayedLayerid);
                f || (f = new r({
                    id: v.displayedLayerid,
                    title: "测量结果显示层",
                    listMode: "hide"
                }), v.view.map.add(f));
                var i = (new x).uuid,
                    h = v.view.map.findLayerById(i);
                null == h && (h = new r({
                    id: v.displayedLayerid,
                    title: "测量多边线实时追踪显示层",
                    listMode: "hide"
                }), v.view.map.add(h));
                var n = v.drawtool.create("polyline");
                v.view.focus(), n.on(["vertex-add", "vertex-remove", "cursor-update", "redo", "undo"], function (e) {
                    if (1 < e.vertices.length) {
                        var t = e.vertices;
                        h.removeAll();
                        var r = new d({
                                geometry: {
                                    type: "polyline",
                                    paths: t,
                                    spatialReference: v.view.spatialReference
                                },
                                symbol: v.polylinesymbol
                            }),
                            i = function (e) {
                                var t = e.clone(),
                                    r = t.removePoint(0, t.paths[0].length - 1),
                                    i = t.getPoint(0, t.paths[0].length - 1);
                                return {
                                    type: "polyline",
                                    spatialReference: v.view.spatialReference,
                                    hasZ: !1,
                                    paths: [
                                        [
                                            [i.x, i.y],
                                            [r.x, r.y]
                                        ]
                                    ]
                                }
                            };
                        if (function (e) {
                                if (!(e.paths[0].length < 3)) {
                                    var t = e.clone(),
                                        r = i(e);
                                    return t.removePoint(0, t.paths[0].length - 1), y.crosses(r, t)
                                }
                            }(r.geometry)) {
                            var n = new d({
                                geometry: i(r.geometry),
                                symbol: v.polylinesymbol
                            });
                            n && h.addMany([r, n]), n && e.preventDefault()
                        } else h.add(r);
                        var o = v.textsymbol,
                            a = y.geodesicLength(r.geometry, "meters"),
                            l = 1e3 < a ? "长度:" + (a / 1e3).toFixed(3) + "千米" : "长度:" + a.toFixed(3) + "米";
                        o.text = l;
                        var s = r.geometry.clone(),
                            c = s.removePoint(0, s.paths[0].length - 1),
                            u = new d({
                                geometry: c,
                                symbol: o
                            });
                        h.add(u)
                    }
                }), n.on("draw-complete", function (e) {
                    if (1 < e.vertices.length) {
                        var t = e.vertices;
                        h.removeAll();
                        var r = new d({
                                geometry: {
                                    type: "polyline",
                                    paths: t,
                                    spatialReference: v.view.spatialReference
                                },
                                symbol: v.polylinesymbol
                            }),
                            i = function (e) {
                                var t = e.clone(),
                                    r = t.removePoint(0, t.paths[0].length - 1),
                                    i = t.getPoint(0, t.paths[0].length - 1);
                                return {
                                    type: "polyline",
                                    spatialReference: v.view.spatialReference,
                                    hasZ: !1,
                                    paths: [
                                        [
                                            [i.x, i.y],
                                            [r.x, r.y]
                                        ]
                                    ]
                                }
                            },
                            n = null;
                        if (function (e) {
                                if (!(e.paths[0].length < 3)) {
                                    var t = e.clone(),
                                        r = i(e);
                                    return t.removePoint(0, t.paths[0].length - 1), y.crosses(r, t)
                                }
                            }(r.geometry)) {
                            var o = new d({
                                geometry: i(r.geometry),
                                symbol: v.polylinesymbol
                            });
                            o && (f.addMany([r, o]), n = new d({
                                geometry: y.union(r.geometry, o.geometry),
                                symbol: v.polylinesymbol
                            })), o && e.preventDefault()
                        } else n = r, f.add(r);
                        var a = v.textsymbol,
                            l = y.geodesicLength(r.geometry, "meters"),
                            s = 1e3 < l ? "长度:" + (l / 1e3).toFixed(3) + "千米" : "长度:" + l.toFixed(3) + "米";
                        a.text = s;
                        var c = r.geometry.clone(),
                            u = c.removePoint(0, c.paths[0].length - 1),
                            p = new d({
                                geometry: u,
                                symbol: a
                            });
                        f.add(p), v.view.map.remove(h), v.emit("measurementcomplete", n, {
                            distance: l
                        }, "polyline")
                    }
                })
            })
        }, Vr.prototype.drawPolygon = function () {
            var d = this;
            P(["esri/views/draw/Draw", "esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/geometryEngine"]).then(function (e) {
                var t = e[0],
                    s = e[1],
                    r = e[2],
                    c = e[3];
                d.drawtool = new t({
                    view: d.view
                }), d.drawtool.reset();
                var u = d.view.map.findLayerById(d.displayedLayerid);
                u || (u = new r({
                    id: d.displayedLayerid,
                    title: "测量结果显示层",
                    listMode: "hide"
                }), d.view.map.add(u));
                var i = (new x).uuid,
                    p = d.view.map.findLayerById(i);
                null == p && (p = new r({
                    id: d.displayedLayerid,
                    title: "测量多边形实时追踪显示层",
                    listMode: "hide"
                }), d.view.map.add(p));
                var n = d.drawtool.create("polygon");
                d.view.focus(), n.on(["vertex-add", "vertex-remove", "cursor-update", "redo", "undo"], function (e) {
                    var t = e.vertices;
                    p.removeAll();
                    var r = {
                            type: "polygon",
                            rings: t,
                            spatialReference: d.view.spatialReference
                        },
                        i = new s({
                            geometry: r,
                            symbol: d.polygonsymbol
                        });
                    if (3 < e.vertices.length) {
                        var n = c.geodesicArea(i.geometry, "square-meters"),
                            o = d.textsymbol,
                            a = 1e5 < Math.abs(n) ? "面积:" + (Math.abs(n) / 1e6).toFixed(3) + "平方千米" : "面积:" + Math.abs(n).toFixed(3) + "平方米";
                        o.text = a;
                        var l = new s({
                            geometry: i.geometry.extent.center,
                            symbol: o
                        });
                        p.add(l)
                    }
                    p.add(i)
                }), n.on("draw-complete", function (e) {
                    var t = e.vertices;
                    p.removeAll();
                    var r = {
                            type: "polygon",
                            rings: t,
                            spatialReference: d.view.spatialReference
                        },
                        i = new s({
                            geometry: r,
                            symbol: d.polygonsymbol
                        }),
                        n = c.geodesicArea(i.geometry, "square-meters"),
                        o = d.textsymbol,
                        a = 1e5 < Math.abs(n) ? "面积:" + (Math.abs(n) / 1e6).toFixed(3) + "平方千米" : "面积:" + Math.abs(n).toFixed(3) + "平方米";
                    o.text = a;
                    var l = new s({
                        geometry: i.geometry.extent.center,
                        symbol: o
                    });
                    d.view.map.remove(p), u.add(l), u.add(i), d.emit("measurementcomplete", i, {
                        area: n
                    }, "polygon")
                })
            })
        }, Vr.prototype.reset = function () {
            this.drawtool && this.drawtool.reset()
        }, Vr.prototype.clean = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && this.view.map.remove(e)
        }, Vr.prototype.show = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !0)
        }, Vr.prototype.hide = function () {
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && (e.visible = !1)
        }, Vr.prototype.init = function (r) {
            return Yr(this, void 0, void 0, function () {
                var t = this;
                return Ur(this, function (e) {
                    return this.displayedLayerid = (new x).uuid, this.view = r, "2d" === this.view.type ? (this.polygonsymbol = {
                        type: "simple-fill",
                        color: [255, 255, 255, .6],
                        style: "solid",
                        outline: {
                            color: [255, 255, 0, .8],
                            width: 2
                        }
                    }, this.polylinesymbol = {
                        type: "simple-line",
                        color: [255, 255, 255, .6],
                        width: "4px",
                        style: "solid"
                    }, this.marksymbol = {
                        type: "simple-marker",
                        style: "circle",
                        color: [255, 255, 0, .6],
                        size: "24px",
                        outline: {
                            color: [255, 255, 0, .8],
                            width: 2
                        }
                    }) : (this.polygonsymbol = {
                        type: "polygon-3d",
                        symbolLayers: [{
                            type: "extrude",
                            castShadows: !1,
                            size: 10,
                            material: {
                                color: [255, 255, 255, .4]
                            },
                            edges: {
                                type: "solid",
                                color: [50, 50, 50, .5]
                            }
                        }]
                    }, this.polylinesymbol = {
                        type: "line-3d",
                        symbolLayers: [{
                            type: "path",
                            anchor: "center",
                            Values: "center",
                            profile: "quad",
                            width: 2,
                            height: 10,
                            material: {
                                color: [255, 255, 255, .4]
                            },
                            cap: "square",
                            join: "miter",
                            castShadows: !1,
                            profileRotation: "heading"
                        }]
                    }, this.marksymbol = {
                        type: "point-3d",
                        symbolLayers: [{
                            type: "object",
                            width: 20,
                            height: 20,
                            depth: 20,
                            resource: {
                                primitive: "sphere"
                            },
                            material: {
                                color: [0, 0, 255, .8]
                            }
                        }],
                        verticalOffset: {
                            screenLength: 60,
                            maxWorldLength: 1e3,
                            minWorldLength: 20
                        },
                        callout: {
                            type: "line",
                            size: 1.5,
                            color: "white",
                            border: {
                                color: "black"
                            }
                        }
                    }), this.textsymbol = {
                        type: "text",
                        color: "white",
                        angle: 0,
                        text: "",
                        xoffset: 60,
                        yoffset: 10,
                        horizontalAlignment: "right",
                        verticalAlignment: "bottom",
                        font: {
                            size: 12,
                            family: "Josefin Slab",
                            weight: "bold"
                        }
                    }, this.view.on(q.click, function (e) {
                        t.view.hitTest(e).then(function (e) {
                            return Yr(t, void 0, void 0, function () {
                                return Ur(this, function (e) {
                                    return [2]
                                })
                            })
                        })
                    }), this.view.on(q.pointermove, function (e) {
                        t.view.hitTest(e).then(function (e) {
                            return Yr(t, void 0, void 0, function () {
                                return Ur(this, function (e) {
                                    return [2]
                                })
                            })
                        })
                    }), [2]
                })
            })
        }, Vr);

    function Vr(e) {
        var t = Jr.call(this) || this;
        return t.marksymbol = null, t.polylinesymbol = null, t.polygonsymbol = null, t.textsymbol = null, t.displayedLayerid = "", t.view = null, t.drawtool = null, t.drawlayerscollection = [], t.init(e), t
    }
    var $r, Qr, Kr = ($r = function (e, t) {
            return ($r = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            $r(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        ei = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        ti = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        ri = (Kr(ii, Qr = e), ii.prototype.add = function (n) {
            var o = this;
            void 0 === n && (n = {}), P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/B622344F-BB19-15F1-3920E863621B4D9B", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1];
                if (n.paths) {
                    var i = new t(o.view, n.paths, n.width, n.color, n.opacity, n.dash, n.rest, n.linesegment, n.linesegmentfade);
                    r.add(o.view, i), o.meshLineRendererArray.push([(new x).uuid, i])
                }
            }).catch(function (e) {
                console.error(e)
            })
        }, ii.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.meshLineRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                }), r.meshLineRendererArray = []
            })
        }, ii.prototype.init = function (t) {
            return ei(this, void 0, void 0, function () {
                return ti(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, ii);

    function ii(e) {
        var t = Qr.call(this) || this;
        return t.meshLineRendererArray = [], t.view = null, t.init(e), t
    }
    var ni, oi, ai = (ni = function (e, t) {
            return (ni = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            ni(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        li = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        si = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        ci = (ai(ui, oi = e), ui.prototype.add = function (o) {
            var a = this;
            void 0 === o && (o = {}), P(["esri/layers/599EFB79-18C9-DC0A-E2C9FC2F2316C660"]).then(function (e) {
                var t = e[0],
                    r = [];
                o.datas.forEach(function (e, t) {
                    r.push({
                        name: e[0] + " Top10",
                        type: "lines",
                        coordinateSystem: "arcgis",
                        zlevel: 1,
                        effect: {
                            show: !0,
                            period: 6,
                            trailLength: .7,
                            color: "#fff",
                            symbolSize: 3
                        },
                        lineStyle: {
                            normal: {
                                color: o.color[t],
                                width: 0,
                                curveness: .2
                            }
                        },
                        data: a.convertData(e[1], o.geoCoordMap)
                    }, {
                        name: e[0] + " Top10",
                        type: "lines",
                        coordinateSystem: "arcgis",
                        zlevel: 2,
                        symbol: ["none", "arrow"],
                        symbolSize: 10,
                        effect: {
                            show: !0,
                            period: 6,
                            trailLength: 0,
                            symbol: o.planePath,
                            symbolSize: 15
                        },
                        lineStyle: {
                            normal: {
                                color: o.color[t],
                                width: 1,
                                opacity: .6,
                                curveness: .2
                            }
                        },
                        data: a.convertData(e[1], o.geoCoordMap)
                    }, {
                        name: e[0] + " Top10",
                        type: "effectScatter",
                        coordinateSystem: "arcgis",
                        zlevel: 2,
                        rippleEffect: {
                            brushType: "stroke"
                        },
                        legendHoverLink: !0,
                        hoverAnimation: !0,
                        symbol: o.symbol,
                        label: {
                            normal: {
                                show: !0,
                                position: "right",
                                formatter: "{b}"
                            }
                        },
                        symbolSize: function (e) {
                            return e[2] / 8
                        },
                        itemStyle: {
                            normal: {
                                color: o.color[t],
                                shadowBlur: 10,
                                shadowColor: "#333"
                            }
                        },
                        data: e[1].map(function (e) {
                            return {
                                name: e[1].name,
                                value: o.geoCoordMap[e[1].name].concat([e[1].value])
                            }
                        })
                    })
                });
                var i = new t(a.view, "", o.id),
                    n = {
                        title: {
                            text: "",
                            subtext: "",
                            left: "center",
                            textStyle: {
                                color: "#fff"
                            }
                        },
                        series: r
                    };
                i.setChartOption(n)
            })
        }, ui.prototype.remove = function (e) {
            var t = document.getElementsByClassName("esri-view-surface")[0],
                r = document.getElementById(e);
            null != r && t.removeChild(r)
        }, ui.prototype.convertData = function (e, t) {
            for (var r = [], i = 0, n = e; i < n.length; i++) {
                var o = n[i],
                    a = t[o[0].name],
                    l = t[o[1].name];
                a && l && r.push({
                    fromName: o[0].name,
                    toName: o[1].name,
                    coords: [a, l],
                    value: o[1].value
                })
            }
            return r
        }, ui.prototype.getAPIScript = function (e) {
            return document.querySelector("script[" + e + "]")
        }, ui.prototype.loadAPIScript = function (n, o) {
            var a = this;
            return new B.Promise(function (e, t) {
                var r = a.getAPIScript(n);
                if (r) {
                    var i = r.getAttribute("src");
                    i !== o ? t(new Error("The echartgl is already loaded (" + i + ").")) : a.handleScriptLoad(r, e, t)
                } else r = a.createScript(n, o), a.handleScriptLoad(r, function () {
                    r.setAttribute(n, "loaded"), e(r)
                }, t), document.head.appendChild(r)
            })
        }, ui.prototype.createScript = function (e, t) {
            var r = document.createElement("script");
            return r.type = "text/javascript", r.src = t, r.setAttribute(e, "loading"), r
        }, ui.prototype.handleScriptLoad = function (e, t, r) {
            var i;
            r && (i = this.handleScriptError(e, r));
            var n = function () {
                t(e), e.removeEventListener("load", n, !1), i && e.removeEventListener("error", i, !1)
            };
            e.addEventListener("load", n, !1)
        }, ui.prototype.handleScriptError = function (t, r) {
            var i = function (e) {
                r(e.error || new Error("There was an error attempting to load " + t.src)), t.removeEventListener("error", i, !1)
            };
            return t.addEventListener("error", i, !1), i
        }, ui.prototype.init = function (t) {
            return li(this, void 0, void 0, function () {
                return si(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, ui);

    function ui(e) {
        var t = oi.call(this) || this;
        return t.view = null, t.init(e), t
    }
    var pi, di, yi = (pi = function (e, t) {
            return (pi = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            pi(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        fi = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        hi = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        vi = (yi(bi, di = e), bi.prototype.init = function (e) {
            var r = this;
            this.view = e, P(["esri/layers/FeatureLayer"]).then(function (e) {
                e[0], r.view.map.basemap.id;
                var l = "basemap_zw" === r.view.map.basemap.id ? "model_white_zw" : "model_white_as",
                    t = r.view.map.findLayerById(l);
                t && (r.modelrender = t.renderer), r.view.on(q.click, function (a) {
                    r.view.hitTest(a).then(function (o) {
                        return fi(r, void 0, void 0, function () {
                            var t, r, i, n = this;
                            return hi(this, function (e) {
                                if (0 < o.results.length) {
                                    if (!o.results[0].graphic.layer) return [2];
                                    t = o.results[0].graphic.attributes.objectid_12, (r = o.results[0].graphic.layer.createQuery()).outFields = ["*"], r.where = "objectid_12 =" + t, this.view.map.findLayerById(l).opacity = .3, o.results[0].graphic.layer.queryFeatures(r).then(function (e) {
                                        0 < e.features.length && n.emit(q.click, e.features[0], a)
                                    })
                                } else(i = this.view.map.findLayerById(l)) && (i.opacity = 1, i.renderer = this.modelrender), this.emit(q.click, null, a);
                                return [2]
                            })
                        })
                    })
                })
            })
        }, bi);

    function bi(e) {
        var t = di.call(this) || this;
        return t.modelLightRenderer = null, t.view = null, t.modelrender = null, t.init(e), t
    }
    var mi, wi, gi = (mi = function (e, t) {
            return (mi = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            mi(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        xi = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Li = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Ci = (gi(Ri, wi = e), Ri.prototype.add = function (n) {
            var o = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/A3918F4D-C4F3-2F18-68573969137963CE", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = new t(o.view, n.points, n.options);
                r.add(o.view, i), o.ripplewallRendererArray.push([(new x).uuid, i])
            }).catch(function (e) {
                console.error(e)
            })
        }, Ri.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.ripplewallRendererArray.length && r.ripplewallRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                })
            })
        }, Ri.prototype.setMaterialColor = function (t) {
            this.ripplewallRendererArray.length && this.ripplewallRendererArray.map(function (e) {
                e[1].setMaterialColor(t)
            })
        }, Ri.prototype.setwireframe = function () {
            this.ripplewallRendererArray.length && this.ripplewallRendererArray.map(function (e) {
                e[1].setwireframe()
            })
        }, Ri.prototype.setaltitude = function (t) {
            this.ripplewallRendererArray.length && this.ripplewallRendererArray.map(function (e) {
                e[1].setaltitude(t)
            })
        }, Ri.prototype.setscaleZ = function (t) {
            this.ripplewallRendererArray.length && this.ripplewallRendererArray.map(function (e) {
                e[1].setscaleZ(t)
            })
        }, Ri.prototype.setopacity = function (t) {
            this.ripplewallRendererArray.length && this.ripplewallRendererArray.map(function (e) {
                e[1].setopacity(t)
            })
        }, Ri.prototype.init = function (t) {
            return xi(this, void 0, void 0, function () {
                return Li(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, Ri);

    function Ri(e) {
        var t = wi.call(this) || this;
        return t.ripplewallRendererArray = [], t.view = null, t.init(e), t
    }
    var ki, Ai, Si = (ki = function (e, t) {
            return (ki = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            ki(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        zi = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Fi = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        Ei = (Si(Ii, Ai = e), Ii.prototype.add = function (n) {
            var o = this;
            P(["82B44794-5CE0-A64A-9047F07CAF08BD2C/08F60FEF-C6FF-A788-344D-1755CB0E3870/2FEB8C35-3834-8C8E-451683376C475670", "esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = new t(o.view, n.multiLineStrings, n.options);
                o.spriteLineRendererArray.push([(new x).uuid, i]), r.add(o.view, i)
            }).catch(function (e) {
                console.error(e)
            })
        }, Ii.prototype.remove = function () {
            var r = this;
            P(["esri/views/3d/externalRenderers"]).then(function (e) {
                var t = e[0];
                r.spriteLineRendererArray.map(function (e) {
                    t.remove(r.view, e[1])
                })
            })
        }, Ii.prototype.setaltitude = function (t) {
            this.spriteLineRendererArray && this.spriteLineRendererArray.map(function (e) {
                e[1].setaltitude(t)
            })
        }, Ii.prototype.init = function (t) {
            return zi(this, void 0, void 0, function () {
                return Fi(this, function (e) {
                    return this.view = t, [2]
                })
            })
        }, Ii);

    function Ii(e) {
        var t = Ai.call(this) || this;
        return t.spriteLineRendererArray = [], t.view = null, t.init(e), t
    }
    var _i, Bi, Pi = (_i = function (e, t) {
            return (_i = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            _i(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Oi = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Mi = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        ji = (Pi(Di, Bi = e), Di.prototype.play = function (a) {
            var l = this;
            void 0 === a && (a = {}), P(["geolocate", "esri/widgets/Track", "esri/geometry/support/webMercatorUtils"]).then(function (e) {
                var r = e[0],
                    t = e[1],
                    i = e[2];
                if (void 0 !== a.coords) {
                    var n = 0;
                    l.track = new t({
                        view: l.view,
                        goToLocationEnabled: !1
                    });
                    var o = 0;
                    r.use(), void 0 !== l.routepalybackinternal && clearInterval(l.routepalybackinternal), l.routepalybackinternal = setInterval(function () {
                        var e = i.xyToLngLat(a.coords[o].x, a.coords[o].y),
                            t = {
                                lng: e[0],
                                lat: e[1]
                            };
                        r.change(t), o = (o + 1) % a.coords.length, ++n === a.coords.length && clearInterval(l.routepalybackinternal)
                    }, 2500), l.view.when(function () {
                        var t = l.view.center;
                        l.track.on("track", function () {
                            a.mobilesymbol && (l.track.graphic.symbol = a.mobilesymbol);
                            var e = l.track.graphic.geometry;
                            1 < n && a.showtrail && l.createAnimateRoute(e, t, a.trailsymbol), l.view.goTo({
                                center: e,
                                tilt: 70,
                                scale: 2500,
                                heading: 360 - l.getHeading(e, t),
                                rotation: 360 - l.getHeading(e, t)
                            }).catch(function (e) {
                                "AbortError" !== e.name && console.error(e)
                            }), t = e.clone()
                        }), l.track.start()
                    })
                }
            }).catch(function (e) {
                console.error(e)
            })
        }, Di.prototype.remove = function () {
            this.routepalybackinternal, clearInterval(this.routepalybackinternal), this.track.destroy();
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && this.view.map.remove(e)
        }, Di.prototype.getHeading = function (e, t) {
            return 180 * Math.atan2(e.y - t.y, e.x - t.x) / Math.PI - 90
        }, Di.prototype.createAnimateRoute = function (o, a, l) {
            var s = this;
            P(["esri/Graphic", "esri/layers/GraphicsLayer"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = new t({
                        geometry: {
                            type: "polyline",
                            paths: [
                                [a.longitude, a.latitude],
                                [o.longitude, o.latitude]
                            ]
                        },
                        symbol: void 0 !== l ? l : {
                            type: "simple-line",
                            color: [156, 39, 176],
                            width: 10
                        }
                    }),
                    n = s.view.map.findLayerById(s.displayedLayerid);
                void 0 === n && (n = new r({
                    title: "路径轨迹播放",
                    id: s.displayedLayerid,
                    listMode: "hide"
                }), s.view.map.add(n)), n.add(i)
            })
        }, Di.prototype.init = function (t) {
            return Oi(this, void 0, void 0, function () {
                return Mi(this, function (e) {
                    return this.displayedLayerid = (new x).uuid, this.view = t, [2]
                })
            })
        }, Di);

    function Di(e) {
        var t = Bi.call(this) || this;
        return t.displayedLayerid = "", t.view = null, t.routepalybackinternal = null, t.track = null, t.init(e), t
    }
    var Wi, Ti, Gi = (Wi = function (e, t) {
            return (Wi = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (e, t) {
                    e.__proto__ = t
                } || function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
        }, function (e, t) {
            function r() {
                this.constructor = e
            }
            Wi(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }),
        Zi = function (e, a, l, s) {
            return new(l = l || Promise)(function (r, t) {
                function i(e) {
                    try {
                        o(s.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function n(e) {
                    try {
                        o(s.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    var t;
                    e.done ? r(e.value) : ((t = e.value) instanceof l ? t : new l(function (e) {
                        e(t)
                    })).then(i, n)
                }
                o((s = s.apply(e, a || [])).next())
            })
        },
        Hi = function (r, i) {
            var n, o, a, e, l = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1]
                },
                trys: [],
                ops: []
            };
            return e = {
                next: t(0),
                throw: t(1),
                return: t(2)
            }, "function" == typeof Symbol && (e[Symbol.iterator] = function () {
                return this
            }), e;

            function t(t) {
                return function (e) {
                    return function (t) {
                        if (n) throw new TypeError("Generator is already executing.");
                        for (; l;) try {
                            if (n = 1, o && (a = 2 & t[0] ? o.return : t[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, t[1])).done) return a;
                            switch (o = 0, a && (t = [2 & t[0], a.value]), t[0]) {
                                case 0:
                                case 1:
                                    a = t;
                                    break;
                                case 4:
                                    return l.label++, {
                                        value: t[1],
                                        done: !1
                                    };
                                case 5:
                                    l.label++, o = t[1], t = [0];
                                    continue;
                                case 7:
                                    t = l.ops.pop(), l.trys.pop();
                                    continue;
                                default:
                                    if (!(a = 0 < (a = l.trys).length && a[a.length - 1]) && (6 === t[0] || 2 === t[0])) {
                                        l = 0;
                                        continue
                                    }
                                    if (3 === t[0] && (!a || t[1] > a[0] && t[1] < a[3])) {
                                        l.label = t[1];
                                        break
                                    }
                                    if (6 === t[0] && l.label < a[1]) {
                                        l.label = a[1], a = t;
                                        break
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(t);
                                        break
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue
                            }
                            t = i.call(r, l)
                        } catch (e) {
                            t = [6, e], o = 0
                        } finally {
                            n = a = 0
                        }
                        if (5 & t[0]) throw t[1];
                        return {
                            value: t[0] ? t[1] : void 0,
                            done: !0
                        }
                    }([t, e])
                }
            }
        },
        qi = (Gi(Ji, Ti = e), Ji.prototype.play = function (d) {
            var y = this;
            void 0 === d && (d = {}), P(["esri/geometry/Point", "esri/Graphic", "esri/layers/GraphicsLayer", "esri/geometry/support/webMercatorUtils"]).then(function (e) {
                var n = e[0],
                    o = e[1],
                    a = e[2];
                if (e[3], void 0 !== d.coords) {
                    var l = 0,
                        s = 0,
                        c = y.view.center;
                    void 0 !== y.mapRoamplayinternal && clearInterval(y.mapRoamplayinternal);
                    var u = void 0 !== d.duration ? d.duration : 2e3,
                        p = void 0 !== d.speedFactor ? d.speedFactor : 1;
                    y.mapRoamplayinternal = setInterval(function () {
                        var e = {
                            x: d.coords[s].x,
                            y: d.coords[s].y,
                            z: void 0 !== d.coords[s].z ? d.coords[s].z : 0
                        };
                        s = (s + 1) % d.coords.length, ++l;
                        var t = new n({
                                x: e.x,
                                y: e.y,
                                z: e.z,
                                spatialReference: y.view.spatialReference
                            }),
                            r = y.view.map.findLayerById(y.mobilelayerid);
                        void 0 === r && (r = new a({
                            title: "漫游路径" + y.mobilelayerid,
                            id: y.mobilelayerid,
                            listMode: "hide"
                        }), y.view.map.add(r)), r.removeAll();
                        var i = new o({
                            geometry: t,
                            symbol: d.mobilesymbol
                        });
                        r.add(i), 1 < l && d.showtrail && y.createAnimateRoute(t, c, d.trailsymbol), d.viewroate && y.view.goTo({
                            center: t,
                            tilt: 70,
                            scale: 2500,
                            heading: 360 - y.getHeading(t, c),
                            rotation: 360 - y.getHeading(t, c)
                        }, {
                            speedFactor: p,
                            duration: u - .2 * u,
                            maxDuration: u - .2 * u,
                            easing: "in-out-coast-quadratic"
                        }).then().catch(function (e) {
                            "AbortError" !== e.name && console.error(e)
                        }), c = t.clone(), l === d.coords.length && (d.mobieiconvisbile || (r.visible = !1), clearInterval(y.mapRoamplayinternal))
                    }, u)
                }
            }).catch(function (e) {
                console.error(e)
            })
        }, Ji.prototype.remove = function () {
            this.mapRoamplayinternal, clearInterval(this.mapRoamplayinternal);
            var e = this.view.map.findLayerById(this.displayedLayerid);
            e && this.view.map.remove(e);
            var t = this.view.map.findLayerById(this.mobilelayerid);
            t && this.view.map.remove(t)
        }, Ji.prototype.getHeading = function (e, t) {
            return 180 * Math.atan2(e.y - t.y, e.x - t.x) / Math.PI - 90
        }, Ji.prototype.createAnimateRoute = function (o, a, l) {
            var s = this;
            P(["esri/Graphic", "esri/layers/GraphicsLayer"]).then(function (e) {
                var t = e[0],
                    r = e[1],
                    i = new t({
                        geometry: {
                            type: "polyline",
                            paths: [
                                [a.x, a.y, a.z],
                                [o.x, o.y, o.z]
                            ],
                            spatialReference: s.view.spatialReference
                        },
                        symbol: void 0 !== l ? l : {
                            type: "simple-line",
                            color: [156, 39, 176],
                            width: 10
                        }
                    }),
                    n = s.view.map.findLayerById(s.displayedLayerid);
                void 0 === n && (n = new r({
                    title: "漫游路径" + s.displayedLayerid,
                    id: s.displayedLayerid,
                    listMode: "hide"
                }), s.view.map.add(n)), n.add(i)
            })
        }, Ji.prototype.init = function (t) {
            return Zi(this, void 0, void 0, function () {
                return Hi(this, function (e) {
                    return this.displayedLayerid = (new x).uuid, this.mobilelayerid = (new x).uuid, this.view = t, [2]
                })
            })
        }, Ji);

    function Ji(e) {
        var t = Ti.call(this) || this;
        return t.displayedLayerid = "", t.view = null, t.mapRoamplayinternal = null, t.mobilelayerid = "", t.init(e), t
    }
    return {
        load: P,
        Aurora: Z,
        Layers: zr,
        Boundary: $,
        CloudRenderer: ne,
        FireRenderer: Jt,
        Draw: Le,
        EsriRainRenderer: bt,
        EsriSnowRenderer: Rt,
        RipplewallRenderer: Ci,
        EsriHeatMap3dLayer: ut,
        CurveLineRenderer: he,
        ArcLineAnimationRenderer: A,
        ElectricShieldRenderer: it,
        DynamicPolygon: Me,
        GraphicOverlays: dr,
        ModelLightRenderer: vi,
        EsriWeatherEffectsRenderer: It,
        FeaureOverlays: Dt,
        EchartFlashPointLayer: Ve,
        FlashPoint3DLayer: or,
        FlashGifLayer: Qt,
        HeatMap: wr,
        LayerSkyRenderer: Or,
        HeatMap3dLayer: Ar,
        ContourMapLayer: se,
        Measurement: Nr,
        MeshLine: ri,
        MaskBoundary: Zr,
        SpriteLineRenderer: Ei,
        ArcLineRenderer: O,
        TrajectoryPlus: qi,
        DynamicSquareFence: He,
        DynamicCylinderFence: Fe,
        MigrationMap: ci,
        Trajectory: ji
    }
});
//# sourceMappingURL=Plugins.min.js.map